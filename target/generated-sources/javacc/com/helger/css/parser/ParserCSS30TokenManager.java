/* ParserCSS30TokenManager.java */
/* Generated By:JJTree&JavaCC: Do not edit this line. ParserCSS30TokenManager.java */
package com.helger.css.parser;

/** Token Manager. */
@SuppressWarnings("unused")public class ParserCSS30TokenManager implements ParserCSS30Constants {
  private static final org.slf4j.Logger s_aLogger = org.slf4j.LoggerFactory.getLogger (ParserCSS30TokenManager.class);

  void backup(final int nChars) {
    input_stream.backup(nChars);
  }

  /** Debug output. */
  public  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private final int jjStopStringLiteralDfa_0(int pos, long active0, long active1){
   switch (pos)
   {
      case 0:
         if ((active1 & 0x100000L) != 0L)
         {
            jjmatchedKind = 89;
            jjmatchedPos = 0;
            return 144;
         }
         if ((active1 & 0x100000001ec0000L) != 0L)
         {
            jjmatchedKind = 89;
            jjmatchedPos = 0;
            return 842;
         }
         if ((active0 & 0x10020000000000L) != 0L)
            return 843;
         if ((active0 & 0x40000000002L) != 0L)
            return 129;
         if ((active0 & 0xff80000000000000L) != 0L || (active1 & 0x9fffL) != 0L)
         {
            jjmatchedKind = 80;
            jjmatchedPos = 0;
            return 726;
         }
         if ((active0 & 0x8000000000000L) != 0L)
            return 844;
         if ((active0 & 0x2000000000L) != 0L)
            return 845;
         if ((active0 & 0x40000000000800L) != 0L)
            return 470;
         return -1;
      case 1:
         if ((active0 & 0xff80000000000000L) != 0L || (active1 & 0x9fffL) != 0L)
         {
            jjmatchedKind = 80;
            jjmatchedPos = 1;
            return 846;
         }
         if ((active0 & 0x40000000000000L) != 0L)
            return 477;
         if ((active1 & 0x1800000L) != 0L)
            return 842;
         if ((active1 & 0x1000000007c0000L) != 0L)
         {
            jjmatchedKind = 89;
            jjmatchedPos = 1;
            return 842;
         }
         return -1;
      case 2:
         if ((active0 & 0xff80000000000000L) != 0L || (active1 & 0x9fffL) != 0L)
         {
            jjmatchedKind = 80;
            jjmatchedPos = 2;
            return 846;
         }
         if ((active1 & 0x100000000640000L) != 0L)
         {
            jjmatchedKind = 89;
            jjmatchedPos = 2;
            return 842;
         }
         if ((active1 & 0x180000L) != 0L)
            return 842;
         return -1;
      case 3:
         if ((active1 & 0x100000000040000L) != 0L)
         {
            jjmatchedKind = 89;
            jjmatchedPos = 3;
            return 842;
         }
         if ((active0 & 0xff80000000000000L) != 0L || (active1 & 0x9fffL) != 0L)
         {
            jjmatchedKind = 80;
            jjmatchedPos = 3;
            return 846;
         }
         if ((active1 & 0x600000L) != 0L)
            return 842;
         return -1;
      case 4:
         if ((active1 & 0x100000000040000L) != 0L)
         {
            jjmatchedKind = 89;
            jjmatchedPos = 4;
            return 842;
         }
         if ((active0 & 0x400000000000000L) != 0L)
            return 846;
         if ((active0 & 0xfb80000000000000L) != 0L || (active1 & 0x9fffL) != 0L)
         {
            jjmatchedKind = 80;
            jjmatchedPos = 4;
            return 846;
         }
         return -1;
      case 5:
         if ((active1 & 0x100000000040000L) != 0L)
         {
            jjmatchedKind = 89;
            jjmatchedPos = 5;
            return 842;
         }
         if ((active0 & 0xfb80000000000000L) != 0L || (active1 & 0x97ffL) != 0L)
         {
            jjmatchedKind = 80;
            jjmatchedPos = 5;
            return 846;
         }
         if ((active1 & 0x800L) != 0L)
            return 846;
         return -1;
      case 6:
         if ((active1 & 0x100000000000000L) != 0L)
         {
            jjmatchedKind = 89;
            jjmatchedPos = 6;
            return 842;
         }
         if ((active1 & 0x40000L) != 0L)
            return 842;
         if ((active0 & 0xfa80000000000000L) != 0L || (active1 & 0x97ffL) != 0L)
         {
            jjmatchedKind = 80;
            jjmatchedPos = 6;
            return 846;
         }
         if ((active0 & 0x100000000000000L) != 0L)
            return 846;
         return -1;
      case 7:
         if ((active0 & 0xfa00000000000000L) != 0L || (active1 & 0x97ffL) != 0L)
         {
            jjmatchedKind = 80;
            jjmatchedPos = 7;
            return 846;
         }
         if ((active1 & 0x100000000000000L) != 0L)
         {
            jjmatchedKind = 89;
            jjmatchedPos = 7;
            return 842;
         }
         if ((active0 & 0x80000000000000L) != 0L)
            return 846;
         return -1;
      case 8:
         if ((active1 & 0x100000000000000L) != 0L)
         {
            if (jjmatchedPos != 8)
            {
               jjmatchedKind = 89;
               jjmatchedPos = 8;
            }
            return 842;
         }
         if ((active0 & 0xe200000000000000L) != 0L || (active1 & 0x17dfL) != 0L)
         {
            if (jjmatchedPos != 8)
            {
               jjmatchedKind = 80;
               jjmatchedPos = 8;
            }
            return 846;
         }
         if ((active0 & 0x1800000000000000L) != 0L || (active1 & 0x8020L) != 0L)
            return 846;
         return -1;
      case 9:
         if ((active0 & 0x2800000000000000L) != 0L || (active1 & 0x6dfL) != 0L)
         {
            if (jjmatchedPos != 9)
            {
               jjmatchedKind = 80;
               jjmatchedPos = 9;
            }
            return 846;
         }
         if ((active1 & 0x100000000000000L) != 0L)
         {
            if (jjmatchedPos != 9)
            {
               jjmatchedKind = 89;
               jjmatchedPos = 9;
            }
            return 842;
         }
         if ((active0 & 0xc200000000000000L) != 0L || (active1 & 0x1100L) != 0L)
            return 846;
         return -1;
      case 10:
         if ((active0 & 0x8800000000000000L) != 0L || (active1 & 0x6dfL) != 0L)
         {
            jjmatchedKind = 80;
            jjmatchedPos = 10;
            return 846;
         }
         if ((active0 & 0x2000000000000000L) != 0L)
            return 846;
         return -1;
      case 11:
         if ((active1 & 0xc3L) != 0L)
            return 846;
         if ((active0 & 0x8800000000000000L) != 0L || (active1 & 0x61cL) != 0L)
         {
            if (jjmatchedPos != 11)
            {
               jjmatchedKind = 80;
               jjmatchedPos = 11;
            }
            return 846;
         }
         return -1;
      case 12:
         if ((active1 & 0x618L) != 0L)
            return 846;
         if ((active0 & 0x8800000000000000L) != 0L || (active1 & 0x5L) != 0L)
         {
            if (jjmatchedPos != 12)
            {
               jjmatchedKind = 80;
               jjmatchedPos = 12;
            }
            return 846;
         }
         return -1;
      case 13:
         if ((active0 & 0x8800000000000000L) != 0L || (active1 & 0x11L) != 0L)
         {
            jjmatchedKind = 80;
            jjmatchedPos = 13;
            return 846;
         }
         if ((active1 & 0x4L) != 0L)
            return 846;
         return -1;
      case 14:
         if ((active0 & 0x8800000000000000L) != 0L || (active1 & 0x11L) != 0L)
         {
            jjmatchedKind = 80;
            jjmatchedPos = 14;
            return 846;
         }
         return -1;
      case 15:
         if ((active0 & 0x8000000000000000L) != 0L || (active1 & 0x11L) != 0L)
         {
            jjmatchedKind = 80;
            jjmatchedPos = 15;
            return 846;
         }
         if ((active0 & 0x800000000000000L) != 0L)
            return 846;
         return -1;
      case 16:
         if ((active1 & 0x11L) != 0L)
         {
            jjmatchedKind = 80;
            jjmatchedPos = 16;
            return 846;
         }
         if ((active0 & 0x8000000000000000L) != 0L)
            return 846;
         return -1;
      case 17:
         if ((active1 & 0x11L) != 0L)
         {
            jjmatchedKind = 80;
            jjmatchedPos = 17;
            return 846;
         }
         return -1;
      case 18:
         if ((active1 & 0x10L) != 0L)
         {
            jjmatchedKind = 80;
            jjmatchedPos = 18;
            return 846;
         }
         if ((active1 & 0x1L) != 0L)
            return 846;
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_0(int pos, long active0, long active1){
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0, active1), pos + 1);
}
private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private int jjMoveStringLiteralDfa0_0(){
   switch(curChar)
   {
      case 36:
         return jjMoveStringLiteralDfa1_0(0x8000000000000L, 0x0L);
      case 40:
         return jjStopAtPos(0, 12);
      case 41:
         return jjStopAtPos(0, 13);
      case 42:
         {
         jjmatchedKind = 41;
         jjmatchedPos = 0;
         }
         return jjMoveStringLiteralDfa1_0(0x10000000000000L, 0x0L);
      case 43:
         return jjStopAtPos(0, 10);
      case 45:
         {
         jjmatchedKind = 11;
         jjmatchedPos = 0;
         }
         return jjMoveStringLiteralDfa1_0(0x40000000000000L, 0x0L);
      case 46:
         return jjStartNfaWithStates_0(0, 37, 845);
      case 47:
         {
         jjmatchedKind = 42;
         jjmatchedPos = 0;
         }
         return jjMoveStringLiteralDfa1_0(0x2L, 0x0L);
      case 58:
         {
         jjmatchedKind = 40;
         jjmatchedPos = 0;
         }
         return jjMoveStringLiteralDfa1_0(0x0L, 0x40000000000000L);
      case 59:
         return jjStopAtPos(0, 39);
      case 60:
         return jjMoveStringLiteralDfa1_0(0x20000000000000L, 0x0L);
      case 61:
         return jjStopAtPos(0, 43);
      case 62:
         return jjStopAtPos(0, 45);
      case 64:
         return jjMoveStringLiteralDfa1_0(0xff80000000000000L, 0x9fffL);
      case 91:
         return jjStopAtPos(0, 35);
      case 93:
         return jjStopAtPos(0, 36);
      case 94:
         return jjMoveStringLiteralDfa1_0(0x4000000000000L, 0x0L);
      case 65:
      case 97:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x80000L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x100000000000000L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x400000L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x40000L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x100000L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x1200000L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x800000L);
      case 124:
         {
         jjmatchedKind = 44;
         jjmatchedPos = 0;
         }
         return jjMoveStringLiteralDfa1_0(0x2000000000000L, 0x0L);
      case 125:
         return jjStopAtPos(0, 34);
      case 126:
         {
         jjmatchedKind = 46;
         jjmatchedPos = 0;
         }
         return jjMoveStringLiteralDfa1_0(0x1000000000000L, 0x0L);
      default :
         return jjMoveNfa_0(2, 0);
   }
}
private int jjMoveStringLiteralDfa1_0(long active0, long active1){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(0, active0, active1);
      return 1;
   }
   switch(curChar)
   {
      case 33:
         return jjMoveStringLiteralDfa2_0(active0, 0x20000000000000L, active1, 0L);
      case 42:
         if ((active0 & 0x2L) != 0L)
            return jjStopAtPos(1, 1);
         break;
      case 45:
         return jjMoveStringLiteralDfa2_0(active0, 0x40000000000000L, active1, 0L);
      case 61:
         if ((active0 & 0x1000000000000L) != 0L)
            return jjStopAtPos(1, 48);
         else if ((active0 & 0x2000000000000L) != 0L)
            return jjStopAtPos(1, 49);
         else if ((active0 & 0x4000000000000L) != 0L)
            return jjStopAtPos(1, 50);
         else if ((active0 & 0x8000000000000L) != 0L)
            return jjStopAtPos(1, 51);
         else if ((active0 & 0x10000000000000L) != 0L)
            return jjStopAtPos(1, 52);
         break;
      case 66:
      case 98:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x1fL);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa2_0(active0, 0x80000000000000L, active1, 0L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x1000L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa2_0(active0, 0x100000000000000L, active1, 0L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0xe0L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x800L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa2_0(active0, 0x200000000000000L, active1, 0x400000002c0000L);
      case 79:
      case 111:
         if ((active1 & 0x800000L) != 0L)
            return jjStartNfaWithStates_0(1, 87, 842);
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x100000L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa2_0(active0, 0x400000000000000L, active1, 0L);
      case 82:
      case 114:
         if ((active1 & 0x1000000L) != 0L)
            return jjStartNfaWithStates_0(1, 88, 842);
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x400700L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x8000L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa2_0(active0, 0xf800000000000000L, active1, 0L);
      case 88:
      case 120:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x100000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(0, active0, active1);
}
private int jjMoveStringLiteralDfa2_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(0, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(1, active0, active1);
      return 2;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa3_0(active0, 0x20000000000000L, active1, 0L);
      case 62:
         if ((active0 & 0x40000000000000L) != 0L)
            return jjStopAtPos(2, 54);
         break;
      case 65:
      case 97:
         return jjMoveStringLiteralDfa3_0(active0, 0x600000000000000L, active1, 0L);
      case 68:
      case 100:
         if ((active1 & 0x80000L) != 0L)
            return jjStartNfaWithStates_0(2, 83, 842);
         break;
      case 69:
      case 101:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x8e0L);
      case 72:
      case 104:
         return jjMoveStringLiteralDfa3_0(active0, 0x80000000000000L, active1, 0x40000L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x700L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x200000L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa3_0(active0, 0x100000000000000L, active1, 0L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa3_0(active0, 0xf800000000000000L, active1, 0x4000000040101fL);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x100000000000000L);
      case 84:
      case 116:
         if ((active1 & 0x100000L) != 0L)
            return jjStartNfaWithStates_0(2, 84, 842);
         break;
      case 85:
      case 117:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x8000L);
      default :
         break;
   }
   return jjStartNfa_0(1, active0, active1);
}
private int jjMoveStringLiteralDfa3_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(1, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(2, active0, active1);
      return 3;
   }
   switch(curChar)
   {
      case 45:
         if ((active0 & 0x20000000000000L) != 0L)
            return jjStopAtPos(3, 53);
         break;
      case 65:
      case 97:
         return jjMoveStringLiteralDfa4_0(active0, 0x80000000000000L, active1, 0L);
      case 68:
      case 100:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x800L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x40000L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0xe0L);
      case 71:
      case 103:
         return jjMoveStringLiteralDfa4_0(active0, 0x400000000000000L, active1, 0x700L);
      case 77:
      case 109:
         if ((active1 & 0x400000L) != 0L)
            return jjStartNfaWithStates_0(3, 86, 842);
         return jjMoveStringLiteralDfa4_0(active0, 0x200000000000000L, active1, 0L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x1000L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa4_0(active0, 0xf900000000000000L, active1, 0x8000L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x100000000000000L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x4000000000001fL);
      case 89:
      case 121:
         if ((active1 & 0x200000L) != 0L)
            return jjStartNfaWithStates_0(3, 85, 842);
         break;
      default :
         break;
   }
   return jjStartNfa_0(2, active0, active1);
}
private int jjMoveStringLiteralDfa4_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(2, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(3, active0, active1);
      return 4;
   }
   switch(curChar)
   {
      case 40:
         if ((active1 & 0x40000000000000L) != 0L)
            return jjStopAtPos(4, 118);
         break;
      case 45:
         return jjMoveStringLiteralDfa5_0(active0, 0xf800000000000000L, active1, 0L);
      case 69:
      case 101:
         if ((active0 & 0x400000000000000L) != 0L)
            return jjStartNfaWithStates_0(4, 58, 846);
         return jjMoveStringLiteralDfa5_0(active0, 0x200000000000000L, active1, 0x100000000000000L);
      case 72:
      case 104:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0x700L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0x800L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa5_0(active0, 0x100000000000000L, active1, 0L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0x8000L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa5_0(active0, 0x80000000000000L, active1, 0x40000L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0x10ffL);
      default :
         break;
   }
   return jjStartNfa_0(3, active0, active1);
}
private int jjMoveStringLiteralDfa5_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(3, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(4, active0, active1);
      return 5;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa6_0(active0, 0L, active1, 0x10e0L);
      case 65:
      case 97:
         if ((active1 & 0x800L) != 0L)
            return jjStartNfaWithStates_0(5, 75, 846);
         break;
      case 67:
      case 99:
         return jjMoveStringLiteralDfa6_0(active0, 0x2000000000000000L, active1, 0L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa6_0(active0, 0L, active1, 0x40000L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa6_0(active0, 0x1800000000000000L, active1, 0L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa6_0(active0, 0L, active1, 0x801fL);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa6_0(active0, 0xc100000000000000L, active1, 0L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa6_0(active0, 0x280000000000000L, active1, 0x100000000000000L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa6_0(active0, 0L, active1, 0x700L);
      default :
         break;
   }
   return jjStartNfa_0(4, active0, active1);
}
private int jjMoveStringLiteralDfa6_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(4, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(5, active0, active1);
      return 6;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa7_0(active0, 0L, active1, 0x700L);
      case 66:
      case 98:
         return jjMoveStringLiteralDfa7_0(active0, 0L, active1, 0x80L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa7_0(active0, 0x3880000000000000L, active1, 0L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa7_0(active0, 0L, active1, 0x1000L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa7_0(active0, 0xc000000000000000L, active1, 0L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa7_0(active0, 0L, active1, 0x5fL);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa7_0(active0, 0x200000000000000L, active1, 0L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa7_0(active0, 0L, active1, 0x8000L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa7_0(active0, 0L, active1, 0x100000000000000L);
      case 84:
      case 116:
         if ((active0 & 0x100000000000000L) != 0L)
            return jjStartNfaWithStates_0(6, 56, 846);
         else if ((active1 & 0x40000L) != 0L)
            return jjStartNfaWithStates_0(6, 82, 842);
         return jjMoveStringLiteralDfa7_0(active0, 0L, active1, 0x20L);
      default :
         break;
   }
   return jjStartNfa_0(5, active0, active1);
}
private int jjMoveStringLiteralDfa7_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(5, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(6, active0, active1);
      return 7;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa8_0(active0, 0L, active1, 0x1fL);
      case 65:
      case 97:
         return jjMoveStringLiteralDfa8_0(active0, 0x200000000000000L, active1, 0x1000L);
      case 66:
      case 98:
         return jjMoveStringLiteralDfa8_0(active0, 0L, active1, 0x400L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa8_0(active0, 0x1800000000000000L, active1, 0L);
      case 71:
      case 103:
         return jjMoveStringLiteralDfa8_0(active0, 0xc000000000000000L, active1, 0L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa8_0(active0, 0L, active1, 0x100000000000040L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa8_0(active0, 0L, active1, 0x200L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa8_0(active0, 0x2000000000000000L, active1, 0L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa8_0(active0, 0L, active1, 0xa0L);
      case 84:
      case 116:
         if ((active0 & 0x80000000000000L) != 0L)
            return jjStartNfaWithStates_0(7, 55, 846);
         return jjMoveStringLiteralDfa8_0(active0, 0L, active1, 0x8100L);
      default :
         break;
   }
   return jjStartNfa_0(6, active0, active1);
}
private int jjMoveStringLiteralDfa8_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(6, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(7, active0, active1);
      return 8;
   }
   switch(curChar)
   {
      case 67:
      case 99:
         return jjMoveStringLiteralDfa9_0(active0, 0x200000000000000L, active1, 0x1004L);
      case 68:
      case 100:
         return jjMoveStringLiteralDfa9_0(active0, 0L, active1, 0x40L);
      case 72:
      case 104:
         return jjMoveStringLiteralDfa9_0(active0, 0xc000000000000000L, active1, 0L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa9_0(active0, 0L, active1, 0x200L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa9_0(active0, 0L, active1, 0x3L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa9_0(active0, 0L, active1, 0x100000000000500L);
      case 80:
      case 112:
         if ((active1 & 0x20L) != 0L)
            return jjStartNfaWithStates_0(8, 69, 846);
         break;
      case 82:
      case 114:
         return jjMoveStringLiteralDfa9_0(active0, 0L, active1, 0x18L);
      case 83:
      case 115:
         if ((active1 & 0x8000L) != 0L)
            return jjStartNfaWithStates_0(8, 79, 846);
         break;
      case 84:
      case 116:
         if ((active0 & 0x1000000000000000L) != 0L)
         {
            jjmatchedKind = 60;
            jjmatchedPos = 8;
         }
         return jjMoveStringLiteralDfa9_0(active0, 0x2800000000000000L, active1, 0x80L);
      default :
         break;
   }
   return jjStartNfa_0(7, active0, active1);
}
private int jjMoveStringLiteralDfa9_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(7, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(8, active0, active1);
      return 9;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa10_0(active0, 0x800000000000000L, active1, 0L);
      case 68:
      case 100:
         return jjMoveStringLiteralDfa10_0(active0, 0L, active1, 0x240L);
      case 69:
      case 101:
         if ((active0 & 0x200000000000000L) != 0L)
            return jjStartNfaWithStates_0(9, 57, 846);
         else if ((active1 & 0x1000L) != 0L)
            return jjStartNfaWithStates_0(9, 76, 846);
         return jjMoveStringLiteralDfa10_0(active0, 0x2000000000000000L, active1, 0x7L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa10_0(active0, 0L, active1, 0x18L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa10_0(active0, 0L, active1, 0x100000000000000L);
      case 80:
      case 112:
         if ((active1 & 0x100L) != 0L)
            return jjStartNfaWithStates_0(9, 72, 846);
         break;
      case 84:
      case 116:
         if ((active0 & 0x4000000000000000L) != 0L)
         {
            jjmatchedKind = 62;
            jjmatchedPos = 9;
         }
         return jjMoveStringLiteralDfa10_0(active0, 0x8000000000000000L, active1, 0x480L);
      default :
         break;
   }
   return jjStartNfa_0(8, active0, active1);
}
private int jjMoveStringLiteralDfa10_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(8, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(9, active0, active1);
      return 10;
   }
   switch(curChar)
   {
      case 40:
         if ((active1 & 0x100000000000000L) != 0L)
            return jjStopAtPos(10, 120);
         break;
      case 45:
         return jjMoveStringLiteralDfa11_0(active0, 0x8000000000000000L, active1, 0L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa11_0(active0, 0x800000000000000L, active1, 0L);
      case 68:
      case 100:
         return jjMoveStringLiteralDfa11_0(active0, 0L, active1, 0x200L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa11_0(active0, 0L, active1, 0x3L);
      case 71:
      case 103:
         return jjMoveStringLiteralDfa11_0(active0, 0L, active1, 0x18L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa11_0(active0, 0L, active1, 0x40L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa11_0(active0, 0L, active1, 0x4L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa11_0(active0, 0L, active1, 0x80L);
      case 82:
      case 114:
         if ((active0 & 0x2000000000000000L) != 0L)
            return jjStartNfaWithStates_0(10, 61, 846);
         break;
      case 84:
      case 116:
         return jjMoveStringLiteralDfa11_0(active0, 0L, active1, 0x400L);
      default :
         break;
   }
   return jjStartNfa_0(9, active0, active1);
}
private int jjMoveStringLiteralDfa11_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(9, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(10, active0, active1);
      return 11;
   }
   switch(curChar)
   {
      case 67:
      case 99:
         return jjMoveStringLiteralDfa12_0(active0, 0x8000000000000000L, active1, 0L);
      case 69:
      case 101:
         if ((active1 & 0x40L) != 0L)
            return jjStartNfaWithStates_0(11, 70, 846);
         break;
      case 72:
      case 104:
         return jjMoveStringLiteralDfa12_0(active0, 0L, active1, 0x18L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa12_0(active0, 0L, active1, 0x200L);
      case 77:
      case 109:
         if ((active1 & 0x80L) != 0L)
            return jjStartNfaWithStates_0(11, 71, 846);
         break;
      case 79:
      case 111:
         return jjMoveStringLiteralDfa12_0(active0, 0x800000000000000L, active1, 0x400L);
      case 84:
      case 116:
         if ((active1 & 0x2L) != 0L)
         {
            jjmatchedKind = 65;
            jjmatchedPos = 11;
         }
         return jjMoveStringLiteralDfa12_0(active0, 0L, active1, 0x5L);
      default :
         break;
   }
   return jjStartNfa_0(10, active0, active1);
}
private int jjMoveStringLiteralDfa12_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(10, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(11, active0, active1);
      return 12;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa13_0(active0, 0L, active1, 0x1L);
      case 69:
      case 101:
         if ((active1 & 0x200L) != 0L)
            return jjStartNfaWithStates_0(12, 73, 846);
         return jjMoveStringLiteralDfa13_0(active0, 0L, active1, 0x4L);
      case 77:
      case 109:
         if ((active1 & 0x400L) != 0L)
            return jjStartNfaWithStates_0(12, 74, 846);
         break;
      case 79:
      case 111:
         return jjMoveStringLiteralDfa13_0(active0, 0x8000000000000000L, active1, 0L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa13_0(active0, 0x800000000000000L, active1, 0L);
      case 84:
      case 116:
         if ((active1 & 0x8L) != 0L)
         {
            jjmatchedKind = 67;
            jjmatchedPos = 12;
         }
         return jjMoveStringLiteralDfa13_0(active0, 0L, active1, 0x10L);
      default :
         break;
   }
   return jjStartNfa_0(11, active0, active1);
}
private int jjMoveStringLiteralDfa13_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(11, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(12, active0, active1);
      return 13;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa14_0(active0, 0L, active1, 0x10L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa14_0(active0, 0L, active1, 0x1L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa14_0(active0, 0x800000000000000L, active1, 0L);
      case 82:
      case 114:
         if ((active1 & 0x4L) != 0L)
            return jjStartNfaWithStates_0(13, 66, 846);
         return jjMoveStringLiteralDfa14_0(active0, 0x8000000000000000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(12, active0, active1);
}
private int jjMoveStringLiteralDfa14_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(12, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(13, active0, active1);
      return 14;
   }
   switch(curChar)
   {
      case 67:
      case 99:
         return jjMoveStringLiteralDfa15_0(active0, 0L, active1, 0x10L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa15_0(active0, 0x800000000000000L, active1, 0L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa15_0(active0, 0x8000000000000000L, active1, 0L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa15_0(active0, 0L, active1, 0x1L);
      default :
         break;
   }
   return jjStartNfa_0(13, active0, active1);
}
private int jjMoveStringLiteralDfa15_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(13, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(14, active0, active1);
      return 15;
   }
   switch(curChar)
   {
      case 69:
      case 101:
         return jjMoveStringLiteralDfa16_0(active0, 0x8000000000000000L, active1, 0L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa16_0(active0, 0L, active1, 0x10L);
      case 82:
      case 114:
         if ((active0 & 0x800000000000000L) != 0L)
            return jjStartNfaWithStates_0(15, 59, 846);
         return jjMoveStringLiteralDfa16_0(active0, 0L, active1, 0x1L);
      default :
         break;
   }
   return jjStartNfa_0(14, active0, active1);
}
private int jjMoveStringLiteralDfa16_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(14, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(15, active0, active1);
      return 16;
   }
   switch(curChar)
   {
      case 78:
      case 110:
         return jjMoveStringLiteralDfa17_0(active0, 0L, active1, 0x1L);
      case 82:
      case 114:
         if ((active0 & 0x8000000000000000L) != 0L)
            return jjStartNfaWithStates_0(16, 63, 846);
         return jjMoveStringLiteralDfa17_0(active0, 0L, active1, 0x10L);
      default :
         break;
   }
   return jjStartNfa_0(15, active0, active1);
}
private int jjMoveStringLiteralDfa17_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(15, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(16, 0L, active1);
      return 17;
   }
   switch(curChar)
   {
      case 69:
      case 101:
         return jjMoveStringLiteralDfa18_0(active1, 0x1L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa18_0(active1, 0x10L);
      default :
         break;
   }
   return jjStartNfa_0(16, 0L, active1);
}
private int jjMoveStringLiteralDfa18_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_0(16, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(17, 0L, active1);
      return 18;
   }
   switch(curChar)
   {
      case 69:
      case 101:
         return jjMoveStringLiteralDfa19_0(active1, 0x10L);
      case 82:
      case 114:
         if ((active1 & 0x1L) != 0L)
            return jjStartNfaWithStates_0(18, 64, 846);
         break;
      default :
         break;
   }
   return jjStartNfa_0(17, 0L, active1);
}
private int jjMoveStringLiteralDfa19_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_0(17, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(18, 0L, active1);
      return 19;
   }
   switch(curChar)
   {
      case 82:
      case 114:
         if ((active1 & 0x10L) != 0L)
            return jjStartNfaWithStates_0(19, 68, 846);
         break;
      default :
         break;
   }
   return jjStartNfa_0(18, 0L, active1);
}
private int jjStartNfaWithStates_0(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_0(state, pos + 1);
}
static final long[] jjbitVec0 = {
   0xfffffffffffffffeL, 0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffffffffffffffL
};
static final long[] jjbitVec2 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
private int jjMoveNfa_0(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 842;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 842:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(0, 2); }
                  else if (curChar == 40)
                  {
                     if (kind > 121)
                        kind = 121;
                  }
                  if ((0x3ff200000000000L & l) != 0L)
                  {
                     if (kind > 89)
                        kind = 89;
                     { jjCheckNAddTwoStates(234, 235); }
                  }
                  break;
               case 845:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(467, 468); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(463, 466); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(460, 462); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(458, 459); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(455, 457); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(450, 454); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(445, 449); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(441, 444); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(437, 440); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(434, 436); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(431, 433); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(428, 430); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(425, 427); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(422, 424); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(417, 421); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(412, 416); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(408, 411); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(405, 407); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(400, 404); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(397, 399); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(394, 396); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(390, 393); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(387, 389); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(384, 386); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(381, 383); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 32)
                        kind = 32;
                     { jjCheckNAdd(380); }
                  }
                  break;
               case 470:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(474, 475); }
                  else if (curChar == 42)
                     { jjCheckNAddStates(3, 5); }
                  else if (curChar == 36)
                     { jjCheckNAddStates(6, 8); }
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(478, 502); }
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 477;
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(471, 472); }
                  break;
               case 846:
               case 186:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  { jjCheckNAddTwoStates(186, 187); }
                  break;
               case 2:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 32)
                        kind = 32;
                     { jjCheckNAddStates(9, 111); }
                  }
                  else if ((0x100003600L & l) != 0L)
                  {
                     if (kind > 4)
                        kind = 4;
                     { jjCheckNAddStates(112, 117); }
                  }
                  else if (curChar == 42)
                     { jjCheckNAddStates(118, 123); }
                  else if (curChar == 36)
                     { jjCheckNAddStates(124, 129); }
                  else if (curChar == 45)
                     { jjCheckNAddStates(130, 139); }
                  else if (curChar == 46)
                     { jjCheckNAddStates(140, 165); }
                  else if (curChar == 39)
                  {
                     if (kind > 26)
                        kind = 26;
                     { jjCheckNAddStates(166, 170); }
                  }
                  else if (curChar == 34)
                  {
                     if (kind > 25)
                        kind = 25;
                     { jjCheckNAddStates(171, 175); }
                  }
                  else if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 129;
                  else if (curChar == 33)
                     { jjCheckNAddTwoStates(22, 31); }
                  else if (curChar == 35)
                     { jjCheckNAddTwoStates(3, 4); }
                  else if (curChar == 44)
                  {
                     if (kind > 38)
                        kind = 38;
                  }
                  if (curChar == 45)
                     { jjAddStates(176, 177); }
                  break;
               case 844:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(178, 180); }
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(181, 183); }
                  break;
               case 726:
                  if (curChar == 42)
                     { jjCheckNAddStates(184, 186); }
                  else if (curChar == 36)
                     { jjCheckNAddStates(187, 189); }
                  else if (curChar == 45)
                     { jjCheckNAddTwoStates(185, 204); }
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 184;
                  if (curChar == 45)
                     { jjCheckNAddStates(190, 195); }
                  if (curChar == 45)
                     { jjCheckNAddStates(196, 201); }
                  break;
               case 144:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(0, 2); }
                  else if (curChar == 40)
                  {
                     if (kind > 121)
                        kind = 121;
                  }
                  if ((0x3ff200000000000L & l) != 0L)
                  {
                     if (kind > 89)
                        kind = 89;
                     { jjCheckNAddTwoStates(234, 235); }
                  }
                  break;
               case 477:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(478, 502); }
                  break;
               case 843:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(202, 204); }
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(205, 207); }
                  break;
               case 1:
                  if (curChar == 44 && kind > 38)
                     kind = 38;
                  break;
               case 3:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 47)
                     kind = 47;
                  { jjCheckNAddTwoStates(3, 4); }
                  break;
               case 5:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 47)
                     kind = 47;
                  { jjCheckNAddTwoStates(3, 4); }
                  break;
               case 6:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 47)
                     kind = 47;
                  { jjCheckNAddStates(208, 216); }
                  break;
               case 7:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 47)
                     kind = 47;
                  { jjCheckNAddStates(217, 220); }
                  break;
               case 8:
                  if (curChar != 10)
                     break;
                  if (kind > 47)
                     kind = 47;
                  { jjCheckNAddTwoStates(3, 4); }
                  break;
               case 9:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 8;
                  break;
               case 10:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 47)
                     kind = 47;
                  { jjCheckNAddTwoStates(3, 4); }
                  break;
               case 11:
               case 13:
               case 16:
               case 20:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(7); }
                  break;
               case 12:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 13;
                  break;
               case 14:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 15;
                  break;
               case 15:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 16;
                  break;
               case 17:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 18;
                  break;
               case 18:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 19;
                  break;
               case 19:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 20;
                  break;
               case 21:
                  if (curChar == 33)
                     { jjCheckNAddTwoStates(22, 31); }
                  break;
               case 22:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(22, 31); }
                  break;
               case 32:
                  if (curChar == 40 && kind > 117)
                     kind = 117;
                  break;
               case 38:
                  if ((0x100003600L & l) != 0L)
                     { jjAddStates(221, 222); }
                  break;
               case 39:
                  if (curChar == 58)
                     { jjCheckNAddStates(223, 229); }
                  break;
               case 40:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(223, 229); }
                  break;
               case 41:
               case 119:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(42, 104); }
                  break;
               case 43:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(230, 234); }
                  break;
               case 44:
                  if (curChar == 46)
                     { jjCheckNAddStates(235, 240); }
                  break;
               case 45:
               case 82:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(46, 67); }
                  break;
               case 47:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(241, 245); }
                  break;
               case 48:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(48, 49); }
                  break;
               case 49:
                  if (curChar == 40 && kind > 121)
                     kind = 121;
                  break;
               case 51:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(241, 245); }
                  break;
               case 52:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(246, 256); }
                  break;
               case 53:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(257, 262); }
                  break;
               case 54:
                  if (curChar == 10)
                     { jjCheckNAddStates(241, 245); }
                  break;
               case 55:
               case 70:
                  if (curChar == 13)
                     { jjCheckNAdd(54); }
                  break;
               case 56:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(241, 245); }
                  break;
               case 57:
               case 59:
               case 62:
               case 66:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(53); }
                  break;
               case 58:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 59;
                  break;
               case 60:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 61;
                  break;
               case 61:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 62;
                  break;
               case 63:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 64;
                  break;
               case 64:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 65;
                  break;
               case 65:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 66;
                  break;
               case 68:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(263, 273); }
                  break;
               case 69:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(274, 279); }
                  break;
               case 71:
               case 73:
               case 76:
               case 80:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(69); }
                  break;
               case 72:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 73;
                  break;
               case 74:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 75;
                  break;
               case 75:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 76;
                  break;
               case 77:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 78;
                  break;
               case 78:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 79;
                  break;
               case 79:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 80;
                  break;
               case 81:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 45;
                  break;
               case 83:
                  if (curChar == 36)
                     { jjCheckNAddStates(280, 282); }
                  break;
               case 84:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(280, 282); }
                  break;
               case 85:
                  if (curChar == 42)
                     { jjCheckNAddStates(283, 285); }
                  break;
               case 86:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(283, 285); }
                  break;
               case 88:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(230, 234); }
                  break;
               case 89:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(286, 296); }
                  break;
               case 90:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(297, 302); }
                  break;
               case 91:
                  if (curChar == 10)
                     { jjCheckNAddStates(230, 234); }
                  break;
               case 92:
               case 107:
                  if (curChar == 13)
                     { jjCheckNAdd(91); }
                  break;
               case 93:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(230, 234); }
                  break;
               case 94:
               case 96:
               case 99:
               case 103:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(90); }
                  break;
               case 95:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 96;
                  break;
               case 97:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 98;
                  break;
               case 98:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 99;
                  break;
               case 100:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 101;
                  break;
               case 101:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 102;
                  break;
               case 102:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 103;
                  break;
               case 105:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(303, 313); }
                  break;
               case 106:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(314, 319); }
                  break;
               case 108:
               case 110:
               case 113:
               case 117:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(106); }
                  break;
               case 109:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 110;
                  break;
               case 111:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 112;
                  break;
               case 112:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 113;
                  break;
               case 114:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 115;
                  break;
               case 115:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 116;
                  break;
               case 116:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 117;
                  break;
               case 118:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 41;
                  break;
               case 120:
                  if (curChar == 36)
                     { jjCheckNAddStates(320, 322); }
                  break;
               case 121:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(320, 322); }
                  break;
               case 122:
                  if (curChar == 42)
                     { jjCheckNAddStates(323, 325); }
                  break;
               case 123:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(323, 325); }
                  break;
               case 129:
                  if (curChar != 47)
                     break;
                  if (kind > 123)
                     kind = 123;
                  { jjCheckNAddStates(326, 328); }
                  break;
               case 130:
                  if ((0xf7ffffffffffdbffL & l) == 0L)
                     break;
                  if (kind > 123)
                     kind = 123;
                  { jjCheckNAddStates(326, 328); }
                  break;
               case 131:
                  if ((0x2400L & l) != 0L && kind > 123)
                     kind = 123;
                  break;
               case 132:
                  if (curChar == 10 && kind > 123)
                     kind = 123;
                  break;
               case 133:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 132;
                  break;
               case 134:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 129;
                  break;
               case 136:
                  if (curChar == 40 && kind > 119)
                     kind = 119;
                  break;
               case 142:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 141;
                  break;
               case 150:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 149;
                  break;
               case 155:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 154;
                  break;
               case 162:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 161;
                  break;
               case 165:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 164;
                  break;
               case 172:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 171;
                  break;
               case 175:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 174;
                  break;
               case 180:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 179;
                  break;
               case 184:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(185, 204); }
                  break;
               case 188:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  { jjCheckNAddTwoStates(186, 187); }
                  break;
               case 189:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  { jjCheckNAddStates(329, 337); }
                  break;
               case 190:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  { jjCheckNAddStates(338, 341); }
                  break;
               case 191:
                  if (curChar != 10)
                     break;
                  if (kind > 80)
                     kind = 80;
                  { jjCheckNAddTwoStates(186, 187); }
                  break;
               case 192:
               case 207:
                  if (curChar == 13)
                     { jjCheckNAdd(191); }
                  break;
               case 193:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  { jjCheckNAddTwoStates(186, 187); }
                  break;
               case 194:
               case 196:
               case 199:
               case 203:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(190); }
                  break;
               case 195:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 196;
                  break;
               case 197:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 198;
                  break;
               case 198:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 199;
                  break;
               case 200:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 201;
                  break;
               case 201:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 202;
                  break;
               case 202:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 203;
                  break;
               case 205:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  { jjCheckNAddStates(342, 350); }
                  break;
               case 206:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  { jjCheckNAddStates(351, 354); }
                  break;
               case 208:
               case 210:
               case 213:
               case 217:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(206); }
                  break;
               case 209:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 210;
                  break;
               case 211:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 212;
                  break;
               case 212:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 213;
                  break;
               case 214:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 215;
                  break;
               case 215:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 216;
                  break;
               case 216:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 217;
                  break;
               case 218:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 184;
                  break;
               case 219:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(185, 204); }
                  break;
               case 220:
                  if (curChar == 36)
                     { jjCheckNAddStates(187, 189); }
                  break;
               case 221:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(187, 189); }
                  break;
               case 222:
                  if (curChar == 42)
                     { jjCheckNAddStates(184, 186); }
                  break;
               case 223:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(184, 186); }
                  break;
               case 224:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 4)
                     kind = 4;
                  { jjCheckNAddStates(112, 117); }
                  break;
               case 225:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 4)
                     kind = 4;
                  { jjCheckNAdd(225); }
                  break;
               case 226:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 5)
                     kind = 5;
                  { jjCheckNAdd(226); }
                  break;
               case 227:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(227, 0); }
                  break;
               case 228:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(228, 1); }
                  break;
               case 230:
                  if ((0x3400L & l) != 0L && kind > 22)
                     kind = 22;
                  break;
               case 231:
                  if (curChar == 10 && kind > 22)
                     kind = 22;
                  break;
               case 232:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 231;
                  break;
               case 233:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 89)
                     kind = 89;
                  { jjCheckNAddTwoStates(234, 235); }
                  break;
               case 234:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 89)
                     kind = 89;
                  { jjCheckNAddTwoStates(234, 235); }
                  break;
               case 236:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 89)
                     kind = 89;
                  { jjCheckNAddStates(355, 363); }
                  break;
               case 237:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 89)
                     kind = 89;
                  { jjCheckNAddStates(364, 367); }
                  break;
               case 238:
                  if (curChar != 10)
                     break;
                  if (kind > 89)
                     kind = 89;
                  { jjCheckNAddTwoStates(234, 235); }
                  break;
               case 239:
               case 284:
                  if (curChar == 13)
                     { jjCheckNAdd(238); }
                  break;
               case 240:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 89)
                     kind = 89;
                  { jjCheckNAddTwoStates(234, 235); }
                  break;
               case 241:
               case 243:
               case 246:
               case 250:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(237); }
                  break;
               case 242:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 243;
                  break;
               case 244:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 245;
                  break;
               case 245:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 246;
                  break;
               case 247:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 248;
                  break;
               case 248:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 249;
                  break;
               case 249:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 250;
                  break;
               case 251:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(0, 2); }
                  break;
               case 252:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(0, 2); }
                  break;
               case 254:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(368, 377); }
                  break;
               case 255:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(378, 382); }
                  break;
               case 256:
                  if (curChar == 10)
                     { jjCheckNAddStates(0, 2); }
                  break;
               case 257:
               case 271:
                  if (curChar == 13)
                     { jjCheckNAdd(256); }
                  break;
               case 258:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(0, 2); }
                  break;
               case 259:
               case 261:
               case 264:
               case 268:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(255); }
                  break;
               case 260:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 261;
                  break;
               case 262:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 263;
                  break;
               case 263:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 264;
                  break;
               case 265:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 266;
                  break;
               case 266:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 267;
                  break;
               case 267:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 268;
                  break;
               case 269:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(383, 392); }
                  break;
               case 270:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(393, 397); }
                  break;
               case 272:
               case 274:
               case 277:
               case 281:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(270); }
                  break;
               case 273:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 274;
                  break;
               case 275:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 276;
                  break;
               case 276:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 277;
                  break;
               case 278:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 279;
                  break;
               case 279:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 280;
                  break;
               case 280:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 281;
                  break;
               case 282:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 89)
                     kind = 89;
                  { jjCheckNAddStates(398, 406); }
                  break;
               case 283:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 89)
                     kind = 89;
                  { jjCheckNAddStates(407, 410); }
                  break;
               case 285:
               case 287:
               case 290:
               case 294:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(283); }
                  break;
               case 286:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 287;
                  break;
               case 288:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 289;
                  break;
               case 289:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 290;
                  break;
               case 291:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 292;
                  break;
               case 292:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 293;
                  break;
               case 293:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 294;
                  break;
               case 295:
                  if (curChar != 34)
                     break;
                  if (kind > 25)
                     kind = 25;
                  { jjCheckNAddStates(171, 175); }
                  break;
               case 296:
                  if ((0xfffffffbffffcbffL & l) != 0L)
                     { jjCheckNAddStates(411, 413); }
                  break;
               case 297:
                  if (curChar == 34 && kind > 23)
                     kind = 23;
                  break;
               case 299:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(411, 413); }
                  break;
               case 300:
                  if (curChar == 10)
                     { jjCheckNAddStates(411, 413); }
                  break;
               case 301:
               case 305:
                  if (curChar == 13)
                     { jjCheckNAdd(300); }
                  break;
               case 302:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(411, 413); }
                  break;
               case 303:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(414, 423); }
                  break;
               case 304:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(424, 428); }
                  break;
               case 306:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(411, 413); }
                  break;
               case 307:
               case 309:
               case 312:
               case 316:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(304); }
                  break;
               case 308:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 309;
                  break;
               case 310:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 311;
                  break;
               case 311:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 312;
                  break;
               case 313:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 314;
                  break;
               case 314:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 315;
                  break;
               case 315:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 316;
                  break;
               case 317:
                  if ((0xfffffffbffffcbffL & l) == 0L)
                     break;
                  if (kind > 25)
                     kind = 25;
                  { jjCheckNAddTwoStates(317, 318); }
                  break;
               case 319:
                  if ((0x3400L & l) == 0L)
                     break;
                  if (kind > 25)
                     kind = 25;
                  { jjCheckNAddTwoStates(317, 318); }
                  break;
               case 320:
                  if (curChar != 10)
                     break;
                  if (kind > 25)
                     kind = 25;
                  { jjCheckNAddTwoStates(317, 318); }
                  break;
               case 321:
               case 325:
                  if (curChar == 13)
                     { jjCheckNAdd(320); }
                  break;
               case 322:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 25)
                     kind = 25;
                  { jjCheckNAddTwoStates(317, 318); }
                  break;
               case 323:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 25)
                     kind = 25;
                  { jjCheckNAddStates(429, 437); }
                  break;
               case 324:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 25)
                     kind = 25;
                  { jjCheckNAddStates(438, 441); }
                  break;
               case 326:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 25)
                     kind = 25;
                  { jjCheckNAddTwoStates(317, 318); }
                  break;
               case 327:
               case 329:
               case 332:
               case 336:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(324); }
                  break;
               case 328:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 329;
                  break;
               case 330:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 331;
                  break;
               case 331:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 332;
                  break;
               case 333:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 334;
                  break;
               case 334:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 335;
                  break;
               case 335:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 336;
                  break;
               case 337:
                  if (curChar != 39)
                     break;
                  if (kind > 26)
                     kind = 26;
                  { jjCheckNAddStates(166, 170); }
                  break;
               case 338:
                  if ((0xffffff7fffffcbffL & l) != 0L)
                     { jjCheckNAddStates(442, 444); }
                  break;
               case 339:
                  if (curChar == 39 && kind > 24)
                     kind = 24;
                  break;
               case 341:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(442, 444); }
                  break;
               case 342:
                  if (curChar == 10)
                     { jjCheckNAddStates(442, 444); }
                  break;
               case 343:
               case 347:
                  if (curChar == 13)
                     { jjCheckNAdd(342); }
                  break;
               case 344:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(442, 444); }
                  break;
               case 345:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(445, 454); }
                  break;
               case 346:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(455, 459); }
                  break;
               case 348:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(442, 444); }
                  break;
               case 349:
               case 351:
               case 354:
               case 358:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(346); }
                  break;
               case 350:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 351;
                  break;
               case 352:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 353;
                  break;
               case 353:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 354;
                  break;
               case 355:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 356;
                  break;
               case 356:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 357;
                  break;
               case 357:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 358;
                  break;
               case 359:
                  if ((0xffffff7fffffcbffL & l) == 0L)
                     break;
                  if (kind > 26)
                     kind = 26;
                  { jjCheckNAddTwoStates(359, 360); }
                  break;
               case 361:
                  if ((0x3400L & l) == 0L)
                     break;
                  if (kind > 26)
                     kind = 26;
                  { jjCheckNAddTwoStates(359, 360); }
                  break;
               case 362:
                  if (curChar != 10)
                     break;
                  if (kind > 26)
                     kind = 26;
                  { jjCheckNAddTwoStates(359, 360); }
                  break;
               case 363:
               case 367:
                  if (curChar == 13)
                     { jjCheckNAdd(362); }
                  break;
               case 364:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 26)
                     kind = 26;
                  { jjCheckNAddTwoStates(359, 360); }
                  break;
               case 365:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 26)
                     kind = 26;
                  { jjCheckNAddStates(460, 468); }
                  break;
               case 366:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 26)
                     kind = 26;
                  { jjCheckNAddStates(469, 472); }
                  break;
               case 368:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 26)
                     kind = 26;
                  { jjCheckNAddTwoStates(359, 360); }
                  break;
               case 369:
               case 371:
               case 374:
               case 378:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(366); }
                  break;
               case 370:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 371;
                  break;
               case 372:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 373;
                  break;
               case 373:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 374;
                  break;
               case 375:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 376;
                  break;
               case 376:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 377;
                  break;
               case 377:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 378;
                  break;
               case 379:
                  if (curChar == 46)
                     { jjCheckNAddStates(140, 165); }
                  break;
               case 380:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 32)
                     kind = 32;
                  { jjCheckNAdd(380); }
                  break;
               case 381:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(381, 383); }
                  break;
               case 384:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(384, 386); }
                  break;
               case 387:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(387, 389); }
                  break;
               case 390:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(390, 393); }
                  break;
               case 394:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(394, 396); }
                  break;
               case 397:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(397, 399); }
                  break;
               case 400:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(400, 404); }
                  break;
               case 405:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(405, 407); }
                  break;
               case 408:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(408, 411); }
                  break;
               case 412:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(412, 416); }
                  break;
               case 417:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(417, 421); }
                  break;
               case 422:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(422, 424); }
                  break;
               case 425:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(425, 427); }
                  break;
               case 428:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(428, 430); }
                  break;
               case 431:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(431, 433); }
                  break;
               case 434:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(434, 436); }
                  break;
               case 437:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(437, 440); }
                  break;
               case 441:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(441, 444); }
                  break;
               case 445:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(445, 449); }
                  break;
               case 450:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(450, 454); }
                  break;
               case 455:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(455, 457); }
                  break;
               case 458:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(458, 459); }
                  break;
               case 460:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(460, 462); }
                  break;
               case 463:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(463, 466); }
                  break;
               case 467:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(467, 468); }
                  break;
               case 468:
                  if (curChar == 37 && kind > 114)
                     kind = 114;
                  break;
               case 469:
                  if (curChar == 45)
                     { jjAddStates(176, 177); }
                  break;
               case 473:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(474, 475); }
                  break;
               case 476:
                  if (curChar == 45)
                     { jjCheckNAddStates(130, 139); }
                  break;
               case 479:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(473, 475); }
                  break;
               case 484:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 483;
                  break;
               case 486:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(473, 475); }
                  break;
               case 487:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(476, 485); }
                  break;
               case 488:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(486, 490); }
                  break;
               case 489:
                  if (curChar == 10)
                     { jjCheckNAddStates(473, 475); }
                  break;
               case 490:
               case 505:
                  if (curChar == 13)
                     { jjCheckNAdd(489); }
                  break;
               case 491:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(473, 475); }
                  break;
               case 492:
               case 494:
               case 497:
               case 501:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(488); }
                  break;
               case 493:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 494;
                  break;
               case 495:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 496;
                  break;
               case 496:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 497;
                  break;
               case 498:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 499;
                  break;
               case 499:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 500;
                  break;
               case 500:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 501;
                  break;
               case 503:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(491, 500); }
                  break;
               case 504:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(501, 505); }
                  break;
               case 506:
               case 508:
               case 511:
               case 515:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(504); }
                  break;
               case 507:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 508;
                  break;
               case 509:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 510;
                  break;
               case 510:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 511;
                  break;
               case 512:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 513;
                  break;
               case 513:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 514;
                  break;
               case 514:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 515;
                  break;
               case 516:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 477;
                  break;
               case 517:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(478, 502); }
                  break;
               case 518:
                  if (curChar == 36)
                     { jjCheckNAddStates(6, 8); }
                  break;
               case 519:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(6, 8); }
                  break;
               case 520:
                  if (curChar == 42)
                     { jjCheckNAddStates(3, 5); }
                  break;
               case 521:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(3, 5); }
                  break;
               case 522:
                  if (curChar == 36)
                     { jjCheckNAddStates(124, 129); }
                  break;
               case 523:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(181, 183); }
                  break;
               case 524:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(178, 180); }
                  break;
               case 525:
                  if (curChar == 42)
                     { jjCheckNAddStates(118, 123); }
                  break;
               case 526:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(205, 207); }
                  break;
               case 527:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(202, 204); }
                  break;
               case 530:
                  if (curChar == 40)
                     { jjCheckNAddStates(506, 511); }
                  break;
               case 531:
                  if (curChar == 34)
                     { jjCheckNAddStates(512, 514); }
                  break;
               case 532:
                  if ((0xfffffffbffffcbffL & l) != 0L)
                     { jjCheckNAddStates(512, 514); }
                  break;
               case 533:
                  if (curChar == 34)
                     { jjCheckNAddTwoStates(534, 535); }
                  break;
               case 534:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(534, 535); }
                  break;
               case 535:
                  if (curChar == 41 && kind > 116)
                     kind = 116;
                  break;
               case 537:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(512, 514); }
                  break;
               case 538:
                  if (curChar == 10)
                     { jjCheckNAddStates(512, 514); }
                  break;
               case 539:
               case 543:
                  if (curChar == 13)
                     { jjCheckNAdd(538); }
                  break;
               case 540:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(512, 514); }
                  break;
               case 541:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(515, 524); }
                  break;
               case 542:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(525, 529); }
                  break;
               case 544:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(512, 514); }
                  break;
               case 545:
               case 547:
               case 550:
               case 554:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(542); }
                  break;
               case 546:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 547;
                  break;
               case 548:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 549;
                  break;
               case 549:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 550;
                  break;
               case 551:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 552;
                  break;
               case 552:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 553;
                  break;
               case 553:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 554;
                  break;
               case 555:
                  if (curChar == 39)
                     { jjCheckNAddStates(530, 532); }
                  break;
               case 556:
                  if ((0xffffff7fffffcbffL & l) != 0L)
                     { jjCheckNAddStates(530, 532); }
                  break;
               case 557:
                  if (curChar == 39)
                     { jjCheckNAddTwoStates(534, 535); }
                  break;
               case 559:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(530, 532); }
                  break;
               case 560:
                  if (curChar == 10)
                     { jjCheckNAddStates(530, 532); }
                  break;
               case 561:
               case 565:
                  if (curChar == 13)
                     { jjCheckNAdd(560); }
                  break;
               case 562:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(530, 532); }
                  break;
               case 563:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(533, 542); }
                  break;
               case 564:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(543, 547); }
                  break;
               case 566:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(530, 532); }
                  break;
               case 567:
               case 569:
               case 572:
               case 576:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(564); }
                  break;
               case 568:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 569;
                  break;
               case 570:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 571;
                  break;
               case 571:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 572;
                  break;
               case 573:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 574;
                  break;
               case 574:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 575;
                  break;
               case 575:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 576;
                  break;
               case 577:
                  if ((0xfffffc7a00000000L & l) != 0L)
                     { jjCheckNAddStates(548, 551); }
                  break;
               case 579:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(548, 551); }
                  break;
               case 580:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(552, 561); }
                  break;
               case 581:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(562, 566); }
                  break;
               case 582:
                  if (curChar == 10)
                     { jjCheckNAddStates(548, 551); }
                  break;
               case 583:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 582;
                  break;
               case 584:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(548, 551); }
                  break;
               case 585:
               case 587:
               case 590:
               case 594:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(581); }
                  break;
               case 586:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 587;
                  break;
               case 588:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 589;
                  break;
               case 589:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 590;
                  break;
               case 591:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 592;
                  break;
               case 592:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 593;
                  break;
               case 593:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 594;
                  break;
               case 595:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(567, 573); }
                  break;
               case 598:
                  if (curChar == 43)
                     { jjAddStates(574, 575); }
                  break;
               case 599:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(576, 586); }
                  break;
               case 600:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(601); }
                  break;
               case 601:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 602;
                  break;
               case 602:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 122)
                     kind = 122;
                  { jjCheckNAddStates(587, 591); }
                  break;
               case 603:
                  if ((0x3ff000000000000L & l) != 0L && kind > 122)
                     kind = 122;
                  break;
               case 604:
               case 606:
               case 609:
               case 613:
               case 627:
               case 630:
               case 632:
               case 633:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(603); }
                  break;
               case 605:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 606;
                  break;
               case 607:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 608;
                  break;
               case 608:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 609;
                  break;
               case 610:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 611;
                  break;
               case 611:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 612;
                  break;
               case 612:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 613;
                  break;
               case 614:
               case 616:
               case 619:
               case 623:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(600); }
                  break;
               case 615:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 616;
                  break;
               case 617:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 618;
                  break;
               case 618:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 619;
                  break;
               case 620:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 621;
                  break;
               case 621:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 622;
                  break;
               case 622:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 623;
                  break;
               case 624:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 625;
                  break;
               case 625:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 626;
                  break;
               case 626:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 627;
                  break;
               case 628:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 629;
                  break;
               case 629:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 630;
                  break;
               case 631:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 632;
                  break;
               case 634:
                  if ((0x83ff000000000000L & l) == 0L)
                     break;
                  if (kind > 122)
                     kind = 122;
                  { jjCheckNAddStates(592, 596); }
                  break;
               case 635:
                  if ((0x83ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 636;
                  break;
               case 636:
                  if ((0x83ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 637;
                  break;
               case 637:
                  if ((0x83ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 638;
                  break;
               case 638:
               case 642:
               case 644:
               case 645:
                  if ((0x83ff000000000000L & l) != 0L)
                     { jjCheckNAdd(639); }
                  break;
               case 639:
                  if ((0x83ff000000000000L & l) != 0L && kind > 122)
                     kind = 122;
                  break;
               case 640:
                  if ((0x83ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 641;
                  break;
               case 641:
                  if ((0x83ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 642;
                  break;
               case 643:
                  if ((0x83ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 644;
                  break;
               case 646:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 32)
                     kind = 32;
                  { jjCheckNAddStates(9, 111); }
                  break;
               case 647:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 32)
                     kind = 32;
                  { jjCheckNAdd(647); }
                  break;
               case 648:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(648, 649); }
                  break;
               case 649:
                  if (curChar == 46)
                     { jjCheckNAdd(380); }
                  break;
               case 650:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(650, 383); }
                  break;
               case 651:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(651, 652); }
                  break;
               case 652:
                  if (curChar == 46)
                     { jjCheckNAdd(381); }
                  break;
               case 653:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(653, 386); }
                  break;
               case 654:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(654, 655); }
                  break;
               case 655:
                  if (curChar == 46)
                     { jjCheckNAdd(384); }
                  break;
               case 656:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(656, 389); }
                  break;
               case 657:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(657, 658); }
                  break;
               case 658:
                  if (curChar == 46)
                     { jjCheckNAdd(387); }
                  break;
               case 659:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(659, 393); }
                  break;
               case 660:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(660, 661); }
                  break;
               case 661:
                  if (curChar == 46)
                     { jjCheckNAdd(390); }
                  break;
               case 662:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(662, 396); }
                  break;
               case 663:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(663, 664); }
                  break;
               case 664:
                  if (curChar == 46)
                     { jjCheckNAdd(394); }
                  break;
               case 665:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(665, 399); }
                  break;
               case 666:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(666, 667); }
                  break;
               case 667:
                  if (curChar == 46)
                     { jjCheckNAdd(397); }
                  break;
               case 668:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(668, 404); }
                  break;
               case 669:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(669, 670); }
                  break;
               case 670:
                  if (curChar == 46)
                     { jjCheckNAdd(400); }
                  break;
               case 671:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(671, 407); }
                  break;
               case 672:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(672, 673); }
                  break;
               case 673:
                  if (curChar == 46)
                     { jjCheckNAdd(405); }
                  break;
               case 674:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(674, 411); }
                  break;
               case 675:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(675, 676); }
                  break;
               case 676:
                  if (curChar == 46)
                     { jjCheckNAdd(408); }
                  break;
               case 677:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(677, 416); }
                  break;
               case 678:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(678, 679); }
                  break;
               case 679:
                  if (curChar == 46)
                     { jjCheckNAdd(412); }
                  break;
               case 680:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(680, 421); }
                  break;
               case 681:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(681, 682); }
                  break;
               case 682:
                  if (curChar == 46)
                     { jjCheckNAdd(417); }
                  break;
               case 683:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(683, 424); }
                  break;
               case 684:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(684, 685); }
                  break;
               case 685:
                  if (curChar == 46)
                     { jjCheckNAdd(422); }
                  break;
               case 686:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(686, 427); }
                  break;
               case 687:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(687, 688); }
                  break;
               case 688:
                  if (curChar == 46)
                     { jjCheckNAdd(425); }
                  break;
               case 689:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(689, 430); }
                  break;
               case 690:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(690, 691); }
                  break;
               case 691:
                  if (curChar == 46)
                     { jjCheckNAdd(428); }
                  break;
               case 692:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(692, 433); }
                  break;
               case 693:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(693, 694); }
                  break;
               case 694:
                  if (curChar == 46)
                     { jjCheckNAdd(431); }
                  break;
               case 695:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(695, 436); }
                  break;
               case 696:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(696, 697); }
                  break;
               case 697:
                  if (curChar == 46)
                     { jjCheckNAdd(434); }
                  break;
               case 698:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(698, 440); }
                  break;
               case 699:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(699, 700); }
                  break;
               case 700:
                  if (curChar == 46)
                     { jjCheckNAdd(437); }
                  break;
               case 701:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(701, 444); }
                  break;
               case 702:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(702, 703); }
                  break;
               case 703:
                  if (curChar == 46)
                     { jjCheckNAdd(441); }
                  break;
               case 704:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(704, 449); }
                  break;
               case 705:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(705, 706); }
                  break;
               case 706:
                  if (curChar == 46)
                     { jjCheckNAdd(445); }
                  break;
               case 707:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(707, 454); }
                  break;
               case 708:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(708, 709); }
                  break;
               case 709:
                  if (curChar == 46)
                     { jjCheckNAdd(450); }
                  break;
               case 710:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(710, 457); }
                  break;
               case 711:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(711, 712); }
                  break;
               case 712:
                  if (curChar == 46)
                     { jjCheckNAdd(455); }
                  break;
               case 713:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(713, 459); }
                  break;
               case 714:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(714, 715); }
                  break;
               case 715:
                  if (curChar == 46)
                     { jjCheckNAdd(458); }
                  break;
               case 716:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(716, 462); }
                  break;
               case 717:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(717, 718); }
                  break;
               case 718:
                  if (curChar == 46)
                     { jjCheckNAdd(460); }
                  break;
               case 719:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(719, 466); }
                  break;
               case 720:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(720, 721); }
                  break;
               case 721:
                  if (curChar == 46)
                     { jjCheckNAdd(463); }
                  break;
               case 722:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(722, 468); }
                  break;
               case 723:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(723, 724); }
                  break;
               case 724:
                  if (curChar == 46)
                     { jjCheckNAdd(467); }
                  break;
               case 727:
               case 772:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(728, 757); }
                  break;
               case 729:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(597, 599); }
                  break;
               case 739:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 738;
                  break;
               case 741:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(597, 599); }
                  break;
               case 742:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(600, 609); }
                  break;
               case 743:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(610, 614); }
                  break;
               case 744:
                  if (curChar == 10)
                     { jjCheckNAddStates(597, 599); }
                  break;
               case 745:
               case 760:
                  if (curChar == 13)
                     { jjCheckNAdd(744); }
                  break;
               case 746:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(597, 599); }
                  break;
               case 747:
               case 749:
               case 752:
               case 756:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(743); }
                  break;
               case 748:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 749;
                  break;
               case 750:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 751;
                  break;
               case 751:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 752;
                  break;
               case 753:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 754;
                  break;
               case 754:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 755;
                  break;
               case 755:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 756;
                  break;
               case 758:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(615, 624); }
                  break;
               case 759:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(625, 629); }
                  break;
               case 761:
               case 763:
               case 766:
               case 770:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(759); }
                  break;
               case 762:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 763;
                  break;
               case 764:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 765;
                  break;
               case 765:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 766;
                  break;
               case 767:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 768;
                  break;
               case 768:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 769;
                  break;
               case 769:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 770;
                  break;
               case 771:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 727;
                  break;
               case 773:
                  if (curChar == 36)
                     { jjCheckNAddStates(630, 632); }
                  break;
               case 774:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(630, 632); }
                  break;
               case 775:
                  if (curChar == 42)
                     { jjCheckNAddStates(633, 635); }
                  break;
               case 776:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(633, 635); }
                  break;
               case 785:
                  if (curChar == 45)
                     { jjCheckNAddStates(190, 195); }
                  break;
               case 786:
               case 830:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(787, 815); }
                  break;
               case 788:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(636, 638); }
                  break;
               case 797:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 796;
                  break;
               case 799:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(636, 638); }
                  break;
               case 800:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(639, 648); }
                  break;
               case 801:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(649, 653); }
                  break;
               case 802:
                  if (curChar == 10)
                     { jjCheckNAddStates(636, 638); }
                  break;
               case 803:
               case 818:
                  if (curChar == 13)
                     { jjCheckNAdd(802); }
                  break;
               case 804:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(636, 638); }
                  break;
               case 805:
               case 807:
               case 810:
               case 814:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(801); }
                  break;
               case 806:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 807;
                  break;
               case 808:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 809;
                  break;
               case 809:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 810;
                  break;
               case 811:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 812;
                  break;
               case 812:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 813;
                  break;
               case 813:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 814;
                  break;
               case 816:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(654, 663); }
                  break;
               case 817:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(664, 668); }
                  break;
               case 819:
               case 821:
               case 824:
               case 828:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(817); }
                  break;
               case 820:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 821;
                  break;
               case 822:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 823;
                  break;
               case 823:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 824;
                  break;
               case 825:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 826;
                  break;
               case 826:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 827;
                  break;
               case 827:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 828;
                  break;
               case 829:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 786;
                  break;
               case 831:
                  if (curChar == 36)
                     { jjCheckNAddStates(669, 671); }
                  break;
               case 832:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(669, 671); }
                  break;
               case 833:
                  if (curChar == 42)
                     { jjCheckNAddStates(672, 674); }
                  break;
               case 834:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(672, 674); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 842:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(0, 2); }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(233, 236); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 89)
                        kind = 89;
                     { jjCheckNAddTwoStates(234, 235); }
                  }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(251, 254); }
                  break;
               case 470:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(0, 2); }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(233, 282); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(473, 475); }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(486, 503); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 89)
                        kind = 89;
                     { jjCheckNAddTwoStates(234, 235); }
                  }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(251, 269); }
                  break;
               case 846:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 80)
                        kind = 80;
                     { jjCheckNAddTwoStates(186, 187); }
                  }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(188, 189); }
                  break;
               case 2:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 89)
                        kind = 89;
                     { jjCheckNAddStates(675, 679); }
                  }
                  else if (curChar == 64)
                     { jjAddStates(680, 683); }
                  else if (curChar == 92)
                     { jjCheckNAddStates(684, 689); }
                  else if (curChar == 123)
                  {
                     if (kind > 33)
                        kind = 33;
                  }
                  if ((0x20000000200000L & l) != 0L)
                     { jjAddStates(690, 691); }
                  else if ((0x400000004000L & l) != 0L)
                     { jjAddStates(692, 695); }
                  else if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 127;
                  else if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 35;
                  else if (curChar == 64)
                  {
                     if (kind > 80)
                        kind = 80;
                     { jjAddStates(696, 701); }
                  }
                  break;
               case 844:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(0, 2); }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(233, 282); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 89)
                        kind = 89;
                     { jjCheckNAddTwoStates(234, 235); }
                  }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(251, 269); }
                  break;
               case 726:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 80)
                        kind = 80;
                     { jjCheckNAddTwoStates(186, 187); }
                  }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(188, 205); }
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 840;
                  else if ((0x80000000800L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 783;
                  break;
               case 144:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(0, 2); }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(233, 236); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 89)
                        kind = 89;
                     { jjCheckNAddTwoStates(234, 235); }
                  }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(251, 254); }
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 181;
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 166;
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 156;
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 143;
                  break;
               case 477:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(0, 2); }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(233, 282); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(473, 475); }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(486, 503); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 89)
                        kind = 89;
                     { jjCheckNAddTwoStates(234, 235); }
                  }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(251, 269); }
                  break;
               case 843:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(0, 2); }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(233, 282); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 89)
                        kind = 89;
                     { jjCheckNAddTwoStates(234, 235); }
                  }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(251, 269); }
                  break;
               case 0:
                  if (curChar == 123 && kind > 33)
                     kind = 33;
                  break;
               case 3:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 47)
                     kind = 47;
                  { jjCheckNAddTwoStates(3, 4); }
                  break;
               case 4:
                  if (curChar == 92)
                     { jjAddStates(702, 703); }
                  break;
               case 5:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 47)
                     kind = 47;
                  { jjCheckNAddTwoStates(3, 4); }
                  break;
               case 6:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 47)
                     kind = 47;
                  { jjCheckNAddStates(208, 216); }
                  break;
               case 7:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 47)
                     kind = 47;
                  { jjCheckNAddStates(217, 220); }
                  break;
               case 11:
               case 13:
               case 16:
               case 20:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(7); }
                  break;
               case 12:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 13;
                  break;
               case 14:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 15;
                  break;
               case 15:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 16;
                  break;
               case 17:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 18;
                  break;
               case 18:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 19;
                  break;
               case 19:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 20;
                  break;
               case 23:
                  if ((0x10000000100000L & l) != 0L && kind > 81)
                     kind = 81;
                  break;
               case 24:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 23;
                  break;
               case 25:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 24;
                  break;
               case 26:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 25;
                  break;
               case 27:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 26;
                  break;
               case 28:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 27;
                  break;
               case 29:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 28;
                  break;
               case 30:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 29;
                  break;
               case 31:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 30;
                  break;
               case 33:
               case 480:
                  if ((0x800000008L & l) != 0L)
                     { jjCheckNAdd(32); }
                  break;
               case 34:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 33;
                  break;
               case 35:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 34;
                  break;
               case 36:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 35;
                  break;
               case 37:
                  if ((0x1000000010L & l) != 0L)
                     { jjAddStates(221, 222); }
                  break;
               case 42:
               case 43:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(230, 234); }
                  break;
               case 46:
               case 47:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(241, 245); }
                  break;
               case 50:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(51, 52); }
                  break;
               case 51:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(241, 245); }
                  break;
               case 52:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(246, 256); }
                  break;
               case 53:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(257, 262); }
                  break;
               case 57:
               case 59:
               case 62:
               case 66:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(53); }
                  break;
               case 58:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 59;
                  break;
               case 60:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 61;
                  break;
               case 61:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 62;
                  break;
               case 63:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 64;
                  break;
               case 64:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 65;
                  break;
               case 65:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 66;
                  break;
               case 67:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(51, 68); }
                  break;
               case 68:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(263, 273); }
                  break;
               case 69:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(274, 279); }
                  break;
               case 71:
               case 73:
               case 76:
               case 80:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(69); }
                  break;
               case 72:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 73;
                  break;
               case 74:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 75;
                  break;
               case 75:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 76;
                  break;
               case 77:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 78;
                  break;
               case 78:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 79;
                  break;
               case 79:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 80;
                  break;
               case 87:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(88, 89); }
                  break;
               case 88:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(230, 234); }
                  break;
               case 89:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(286, 296); }
                  break;
               case 90:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(297, 302); }
                  break;
               case 94:
               case 96:
               case 99:
               case 103:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(90); }
                  break;
               case 95:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 96;
                  break;
               case 97:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 98;
                  break;
               case 98:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 99;
                  break;
               case 100:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 101;
                  break;
               case 101:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 102;
                  break;
               case 102:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 103;
                  break;
               case 104:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(88, 105); }
                  break;
               case 105:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(303, 313); }
                  break;
               case 106:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(314, 319); }
                  break;
               case 108:
               case 110:
               case 113:
               case 117:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(106); }
                  break;
               case 109:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 110;
                  break;
               case 111:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 112;
                  break;
               case 112:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 113;
                  break;
               case 114:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 115;
                  break;
               case 115:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 116;
                  break;
               case 116:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 117;
                  break;
               case 124:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 37;
                  break;
               case 125:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 124;
                  break;
               case 126:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 125;
                  break;
               case 127:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 126;
                  break;
               case 128:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 127;
                  break;
               case 130:
                  if ((0xdfffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 123)
                     kind = 123;
                  { jjAddStates(326, 328); }
                  break;
               case 135:
                  if ((0x400000004000L & l) != 0L)
                     { jjAddStates(692, 695); }
                  break;
               case 137:
               case 145:
                  if ((0x1000000010L & l) != 0L)
                     { jjCheckNAdd(136); }
                  break;
               case 138:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 137;
                  break;
               case 139:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 138;
                  break;
               case 140:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 139;
                  break;
               case 141:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 140;
                  break;
               case 143:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 142;
                  break;
               case 146:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 145;
                  break;
               case 147:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 146;
                  break;
               case 148:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 147;
                  break;
               case 149:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 148;
                  break;
               case 151:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 150;
                  break;
               case 152:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 151;
                  break;
               case 153:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 152;
                  break;
               case 154:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 153;
                  break;
               case 156:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 155;
                  break;
               case 157:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 156;
                  break;
               case 158:
               case 168:
                  if ((0x2000000020L & l) != 0L)
                     { jjCheckNAdd(136); }
                  break;
               case 159:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 158;
                  break;
               case 160:
                  if ((0x200000002000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 159;
                  break;
               case 161:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 160;
                  break;
               case 163:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 162;
                  break;
               case 164:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 163;
                  break;
               case 166:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 165;
                  break;
               case 167:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 166;
                  break;
               case 169:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 168;
                  break;
               case 170:
                  if ((0x200000002000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 169;
                  break;
               case 171:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 170;
                  break;
               case 173:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 172;
                  break;
               case 174:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 173;
                  break;
               case 176:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 175;
                  break;
               case 177:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 176;
                  break;
               case 178:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 177;
                  break;
               case 179:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 178;
                  break;
               case 181:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 180;
                  break;
               case 182:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 181;
                  break;
               case 183:
                  if (curChar != 64)
                     break;
                  if (kind > 80)
                     kind = 80;
                  { jjAddStates(696, 701); }
                  break;
               case 185:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  { jjCheckNAddTwoStates(186, 187); }
                  break;
               case 186:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  { jjCheckNAddTwoStates(186, 187); }
                  break;
               case 187:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(188, 189); }
                  break;
               case 188:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  { jjCheckNAddTwoStates(186, 187); }
                  break;
               case 189:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  { jjCheckNAddStates(329, 337); }
                  break;
               case 190:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  { jjCheckNAddStates(338, 341); }
                  break;
               case 194:
               case 196:
               case 199:
               case 203:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(190); }
                  break;
               case 195:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 196;
                  break;
               case 197:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 198;
                  break;
               case 198:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 199;
                  break;
               case 200:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 201;
                  break;
               case 201:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 202;
                  break;
               case 202:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 203;
                  break;
               case 204:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(188, 205); }
                  break;
               case 205:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  { jjCheckNAddStates(342, 350); }
                  break;
               case 206:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  { jjCheckNAddStates(351, 354); }
                  break;
               case 208:
               case 210:
               case 213:
               case 217:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(206); }
                  break;
               case 209:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 210;
                  break;
               case 211:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 212;
                  break;
               case 212:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 213;
                  break;
               case 214:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 215;
                  break;
               case 215:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 216;
                  break;
               case 216:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 217;
                  break;
               case 229:
                  if (curChar == 92)
                     { jjCheckNAddStates(684, 689); }
                  break;
               case 233:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 89)
                     kind = 89;
                  { jjCheckNAddTwoStates(234, 235); }
                  break;
               case 234:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 89)
                     kind = 89;
                  { jjCheckNAddTwoStates(234, 235); }
                  break;
               case 235:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(233, 236); }
                  break;
               case 236:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 89)
                     kind = 89;
                  { jjCheckNAddStates(355, 363); }
                  break;
               case 237:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 89)
                     kind = 89;
                  { jjCheckNAddStates(364, 367); }
                  break;
               case 241:
               case 243:
               case 246:
               case 250:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(237); }
                  break;
               case 242:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 243;
                  break;
               case 244:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 245;
                  break;
               case 245:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 246;
                  break;
               case 247:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 248;
                  break;
               case 248:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 249;
                  break;
               case 249:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 250;
                  break;
               case 251:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(0, 2); }
                  break;
               case 252:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(0, 2); }
                  break;
               case 253:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(251, 254); }
                  break;
               case 254:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(368, 377); }
                  break;
               case 255:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(378, 382); }
                  break;
               case 259:
               case 261:
               case 264:
               case 268:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(255); }
                  break;
               case 260:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 261;
                  break;
               case 262:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 263;
                  break;
               case 263:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 264;
                  break;
               case 265:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 266;
                  break;
               case 266:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 267;
                  break;
               case 267:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 268;
                  break;
               case 269:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(383, 392); }
                  break;
               case 270:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(393, 397); }
                  break;
               case 272:
               case 274:
               case 277:
               case 281:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(270); }
                  break;
               case 273:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 274;
                  break;
               case 275:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 276;
                  break;
               case 276:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 277;
                  break;
               case 278:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 279;
                  break;
               case 279:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 280;
                  break;
               case 280:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 281;
                  break;
               case 282:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 89)
                     kind = 89;
                  { jjCheckNAddStates(398, 406); }
                  break;
               case 283:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 89)
                     kind = 89;
                  { jjCheckNAddStates(407, 410); }
                  break;
               case 285:
               case 287:
               case 290:
               case 294:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(283); }
                  break;
               case 286:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 287;
                  break;
               case 288:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 289;
                  break;
               case 289:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 290;
                  break;
               case 291:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 292;
                  break;
               case 292:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 293;
                  break;
               case 293:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 294;
                  break;
               case 296:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(411, 413); }
                  break;
               case 298:
                  if (curChar == 92)
                     { jjAddStates(704, 707); }
                  break;
               case 302:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(411, 413); }
                  break;
               case 303:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(414, 423); }
                  break;
               case 304:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(424, 428); }
                  break;
               case 307:
               case 309:
               case 312:
               case 316:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(304); }
                  break;
               case 308:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 309;
                  break;
               case 310:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 311;
                  break;
               case 311:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 312;
                  break;
               case 313:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 314;
                  break;
               case 314:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 315;
                  break;
               case 315:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 316;
                  break;
               case 317:
                  if ((0xffffffffefffffffL & l) == 0L)
                     break;
                  if (kind > 25)
                     kind = 25;
                  { jjCheckNAddTwoStates(317, 318); }
                  break;
               case 318:
                  if (curChar == 92)
                     { jjAddStates(708, 711); }
                  break;
               case 322:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 25)
                     kind = 25;
                  { jjCheckNAddTwoStates(317, 318); }
                  break;
               case 323:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 25)
                     kind = 25;
                  { jjCheckNAddStates(429, 437); }
                  break;
               case 324:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 25)
                     kind = 25;
                  { jjCheckNAddStates(438, 441); }
                  break;
               case 327:
               case 329:
               case 332:
               case 336:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(324); }
                  break;
               case 328:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 329;
                  break;
               case 330:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 331;
                  break;
               case 331:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 332;
                  break;
               case 333:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 334;
                  break;
               case 334:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 335;
                  break;
               case 335:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 336;
                  break;
               case 338:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(442, 444); }
                  break;
               case 340:
                  if (curChar == 92)
                     { jjAddStates(712, 715); }
                  break;
               case 344:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(442, 444); }
                  break;
               case 345:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(445, 454); }
                  break;
               case 346:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(455, 459); }
                  break;
               case 349:
               case 351:
               case 354:
               case 358:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(346); }
                  break;
               case 350:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 351;
                  break;
               case 352:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 353;
                  break;
               case 353:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 354;
                  break;
               case 355:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 356;
                  break;
               case 356:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 357;
                  break;
               case 357:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 358;
                  break;
               case 359:
                  if ((0xffffffffefffffffL & l) == 0L)
                     break;
                  if (kind > 26)
                     kind = 26;
                  { jjCheckNAddTwoStates(359, 360); }
                  break;
               case 360:
                  if (curChar == 92)
                     { jjAddStates(716, 719); }
                  break;
               case 364:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 26)
                     kind = 26;
                  { jjCheckNAddTwoStates(359, 360); }
                  break;
               case 365:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 26)
                     kind = 26;
                  { jjCheckNAddStates(460, 468); }
                  break;
               case 366:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 26)
                     kind = 26;
                  { jjCheckNAddStates(469, 472); }
                  break;
               case 369:
               case 371:
               case 374:
               case 378:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(366); }
                  break;
               case 370:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 371;
                  break;
               case 372:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 373;
                  break;
               case 373:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 374;
                  break;
               case 375:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 376;
                  break;
               case 376:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 377;
                  break;
               case 377:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 378;
                  break;
               case 382:
                  if ((0x200000002000L & l) != 0L && kind > 90)
                     kind = 90;
                  break;
               case 383:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 382;
                  break;
               case 385:
                  if ((0x100000001000000L & l) != 0L && kind > 91)
                     kind = 91;
                  break;
               case 386:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 385;
                  break;
               case 388:
                  if ((0x100000001000000L & l) != 0L && kind > 92)
                     kind = 92;
                  break;
               case 389:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 388;
                  break;
               case 391:
                  if ((0x200000002000L & l) != 0L && kind > 93)
                     kind = 93;
                  break;
               case 392:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 391;
                  break;
               case 393:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 392;
                  break;
               case 395:
                  if ((0x80000000800000L & l) != 0L && kind > 94)
                     kind = 94;
                  break;
               case 396:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 395;
                  break;
               case 398:
                  if ((0x10000000100L & l) != 0L && kind > 95)
                     kind = 95;
                  break;
               case 399:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 398;
                  break;
               case 401:
                  if ((0x400000004000L & l) != 0L && kind > 96)
                     kind = 96;
                  break;
               case 402:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 401;
                  break;
               case 403:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 402;
                  break;
               case 404:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 403;
                  break;
               case 406:
                  if ((0x10000000100L & l) != 0L && kind > 97)
                     kind = 97;
                  break;
               case 407:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 406;
                  break;
               case 409:
                  if ((0x20000000200L & l) != 0L && kind > 98)
                     kind = 98;
                  break;
               case 410:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 409;
                  break;
               case 411:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 410;
                  break;
               case 413:
                  if ((0x200000002000L & l) != 0L && kind > 99)
                     kind = 99;
                  break;
               case 414:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 413;
                  break;
               case 415:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 414;
                  break;
               case 416:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 415;
                  break;
               case 418:
                  if ((0x100000001000000L & l) != 0L && kind > 100)
                     kind = 100;
                  break;
               case 419:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 418;
                  break;
               case 420:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 419;
                  break;
               case 421:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 420;
                  break;
               case 423:
                  if ((0x200000002000L & l) != 0L && kind > 101)
                     kind = 101;
                  break;
               case 424:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 423;
                  break;
               case 426:
                  if ((0x200000002000L & l) != 0L && kind > 102)
                     kind = 102;
                  break;
               case 427:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 426;
                  break;
               case 429:
                  if ((0x400000004000L & l) != 0L && kind > 103)
                     kind = 103;
                  break;
               case 430:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 429;
                  break;
               case 432:
                  if ((0x10000000100000L & l) != 0L && kind > 104)
                     kind = 104;
                  break;
               case 433:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 432;
                  break;
               case 435:
                  if ((0x800000008L & l) != 0L && kind > 105)
                     kind = 105;
                  break;
               case 436:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 435;
                  break;
               case 438:
                  if ((0x8000000080L & l) != 0L && kind > 106)
                     kind = 106;
                  break;
               case 439:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 438;
                  break;
               case 440:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 439;
                  break;
               case 442:
                  if ((0x1000000010L & l) != 0L && kind > 107)
                     kind = 107;
                  break;
               case 443:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 442;
                  break;
               case 444:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 443;
                  break;
               case 446:
                  if ((0x1000000010L & l) != 0L && kind > 108)
                     kind = 108;
                  break;
               case 447:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 446;
                  break;
               case 448:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 447;
                  break;
               case 449:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 448;
                  break;
               case 451:
                  if ((0x400000004000L & l) != 0L && kind > 109)
                     kind = 109;
                  break;
               case 452:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 451;
                  break;
               case 453:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 452;
                  break;
               case 454:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 453;
                  break;
               case 456:
                  if ((0x8000000080000L & l) != 0L && kind > 110)
                     kind = 110;
                  break;
               case 457:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 456;
                  break;
               case 459:
                  if ((0x8000000080000L & l) != 0L && kind > 111)
                     kind = 111;
                  break;
               case 461:
                  if ((0x400000004000000L & l) != 0L && kind > 112)
                     kind = 112;
                  break;
               case 462:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 461;
                  break;
               case 464:
                  if ((0x400000004000000L & l) != 0L && kind > 113)
                     kind = 113;
                  break;
               case 465:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 464;
                  break;
               case 466:
                  if ((0x80000000800L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 465;
                  break;
               case 471:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 89)
                     kind = 89;
                  { jjCheckNAddTwoStates(234, 235); }
                  break;
               case 472:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(233, 282); }
                  break;
               case 474:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(0, 2); }
                  break;
               case 475:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(251, 269); }
                  break;
               case 478:
               case 479:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(473, 475); }
                  break;
               case 481:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 480;
                  break;
               case 482:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 481;
                  break;
               case 483:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 482;
                  break;
               case 485:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(486, 487); }
                  break;
               case 486:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(473, 475); }
                  break;
               case 487:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(476, 485); }
                  break;
               case 488:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(486, 490); }
                  break;
               case 492:
               case 494:
               case 497:
               case 501:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(488); }
                  break;
               case 493:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 494;
                  break;
               case 495:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 496;
                  break;
               case 496:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 497;
                  break;
               case 498:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 499;
                  break;
               case 499:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 500;
                  break;
               case 500:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 501;
                  break;
               case 502:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(486, 503); }
                  break;
               case 503:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(491, 500); }
                  break;
               case 504:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(501, 505); }
                  break;
               case 506:
               case 508:
               case 511:
               case 515:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(504); }
                  break;
               case 507:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 508;
                  break;
               case 509:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 510;
                  break;
               case 510:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 511;
                  break;
               case 512:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 513;
                  break;
               case 513:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 514;
                  break;
               case 514:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 515;
                  break;
               case 528:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 89)
                     kind = 89;
                  { jjCheckNAddStates(675, 679); }
                  break;
               case 529:
                  if ((0x20000000200000L & l) != 0L)
                     { jjAddStates(690, 691); }
                  break;
               case 532:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(512, 514); }
                  break;
               case 536:
                  if (curChar == 92)
                     { jjAddStates(720, 723); }
                  break;
               case 540:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(512, 514); }
                  break;
               case 541:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(515, 524); }
                  break;
               case 542:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(525, 529); }
                  break;
               case 545:
               case 547:
               case 550:
               case 554:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(542); }
                  break;
               case 546:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 547;
                  break;
               case 548:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 549;
                  break;
               case 549:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 550;
                  break;
               case 551:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 552;
                  break;
               case 552:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 553;
                  break;
               case 553:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 554;
                  break;
               case 556:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(530, 532); }
                  break;
               case 558:
                  if (curChar == 92)
                     { jjAddStates(724, 727); }
                  break;
               case 562:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(530, 532); }
                  break;
               case 563:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(533, 542); }
                  break;
               case 564:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(543, 547); }
                  break;
               case 567:
               case 569:
               case 572:
               case 576:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(564); }
                  break;
               case 568:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 569;
                  break;
               case 570:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 571;
                  break;
               case 571:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 572;
                  break;
               case 573:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 574;
                  break;
               case 574:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 575;
                  break;
               case 575:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 576;
                  break;
               case 577:
                  if ((0x7fffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(548, 551); }
                  break;
               case 578:
                  if (curChar == 92)
                     { jjAddStates(728, 729); }
                  break;
               case 579:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(548, 551); }
                  break;
               case 580:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(552, 561); }
                  break;
               case 581:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(562, 566); }
                  break;
               case 585:
               case 587:
               case 590:
               case 594:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(581); }
                  break;
               case 586:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 587;
                  break;
               case 588:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 589;
                  break;
               case 589:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 590;
                  break;
               case 591:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 592;
                  break;
               case 592:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 593;
                  break;
               case 593:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 594;
                  break;
               case 596:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 530;
                  break;
               case 597:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 596;
                  break;
               case 599:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(576, 586); }
                  break;
               case 600:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(601); }
                  break;
               case 602:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 122)
                     kind = 122;
                  { jjCheckNAddStates(587, 591); }
                  break;
               case 603:
               case 639:
                  if ((0x7e0000007eL & l) != 0L && kind > 122)
                     kind = 122;
                  break;
               case 604:
               case 606:
               case 609:
               case 613:
               case 627:
               case 630:
               case 632:
               case 633:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(603); }
                  break;
               case 605:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 606;
                  break;
               case 607:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 608;
                  break;
               case 608:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 609;
                  break;
               case 610:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 611;
                  break;
               case 611:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 612;
                  break;
               case 612:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 613;
                  break;
               case 614:
               case 616:
               case 619:
               case 623:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(600); }
                  break;
               case 615:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 616;
                  break;
               case 617:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 618;
                  break;
               case 618:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 619;
                  break;
               case 620:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 621;
                  break;
               case 621:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 622;
                  break;
               case 622:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 623;
                  break;
               case 624:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 625;
                  break;
               case 625:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 626;
                  break;
               case 626:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 627;
                  break;
               case 628:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 629;
                  break;
               case 629:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 630;
                  break;
               case 631:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 632;
                  break;
               case 634:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 122)
                     kind = 122;
                  { jjCheckNAddStates(592, 596); }
                  break;
               case 635:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 636;
                  break;
               case 636:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 637;
                  break;
               case 637:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 638;
                  break;
               case 638:
               case 642:
               case 644:
               case 645:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(639); }
                  break;
               case 640:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 641;
                  break;
               case 641:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 642;
                  break;
               case 643:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 644;
                  break;
               case 725:
                  if (curChar == 64)
                     { jjAddStates(680, 683); }
                  break;
               case 728:
               case 729:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(597, 599); }
                  break;
               case 730:
                  if ((0x8000000080000L & l) != 0L && kind > 77)
                     kind = 77;
                  break;
               case 731:
               case 777:
                  if ((0x2000000020L & l) != 0L)
                     { jjCheckNAdd(730); }
                  break;
               case 732:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 731;
                  break;
               case 733:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 732;
                  break;
               case 734:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 733;
                  break;
               case 735:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 734;
                  break;
               case 736:
                  if ((0x200000002000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 735;
                  break;
               case 737:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 736;
                  break;
               case 738:
                  if ((0x80000000800L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 737;
                  break;
               case 740:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(741, 742); }
                  break;
               case 741:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(597, 599); }
                  break;
               case 742:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(600, 609); }
                  break;
               case 743:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(610, 614); }
                  break;
               case 747:
               case 749:
               case 752:
               case 756:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(743); }
                  break;
               case 748:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 749;
                  break;
               case 750:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 751;
                  break;
               case 751:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 752;
                  break;
               case 753:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 754;
                  break;
               case 754:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 755;
                  break;
               case 755:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 756;
                  break;
               case 757:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(741, 758); }
                  break;
               case 758:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(615, 624); }
                  break;
               case 759:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(625, 629); }
                  break;
               case 761:
               case 763:
               case 766:
               case 770:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(759); }
                  break;
               case 762:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 763;
                  break;
               case 764:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 765;
                  break;
               case 765:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 766;
                  break;
               case 767:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 768;
                  break;
               case 768:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 769;
                  break;
               case 769:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 770;
                  break;
               case 778:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 777;
                  break;
               case 779:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 778;
                  break;
               case 780:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 779;
                  break;
               case 781:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 780;
                  break;
               case 782:
                  if ((0x200000002000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 781;
                  break;
               case 783:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 782;
                  break;
               case 784:
                  if ((0x80000000800L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 783;
                  break;
               case 787:
               case 788:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(636, 638); }
                  break;
               case 789:
                  if ((0x10000000100000L & l) != 0L && kind > 78)
                     kind = 78;
                  break;
               case 790:
               case 835:
                  if ((0x4000000040000L & l) != 0L)
                     { jjCheckNAdd(789); }
                  break;
               case 791:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 790;
                  break;
               case 792:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 791;
                  break;
               case 793:
                  if ((0x80000000800000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 792;
                  break;
               case 794:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 793;
                  break;
               case 795:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 794;
                  break;
               case 796:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 795;
                  break;
               case 798:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(799, 800); }
                  break;
               case 799:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(636, 638); }
                  break;
               case 800:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(639, 648); }
                  break;
               case 801:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(649, 653); }
                  break;
               case 805:
               case 807:
               case 810:
               case 814:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(801); }
                  break;
               case 806:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 807;
                  break;
               case 808:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 809;
                  break;
               case 809:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 810;
                  break;
               case 811:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 812;
                  break;
               case 812:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 813;
                  break;
               case 813:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 814;
                  break;
               case 815:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(799, 816); }
                  break;
               case 816:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(654, 663); }
                  break;
               case 817:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(664, 668); }
                  break;
               case 819:
               case 821:
               case 824:
               case 828:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(817); }
                  break;
               case 820:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 821;
                  break;
               case 822:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 823;
                  break;
               case 823:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 824;
                  break;
               case 825:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 826;
                  break;
               case 826:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 827;
                  break;
               case 827:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 828;
                  break;
               case 836:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 835;
                  break;
               case 837:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 836;
                  break;
               case 838:
                  if ((0x80000000800000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 837;
                  break;
               case 839:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 838;
                  break;
               case 840:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 839;
                  break;
               case 841:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 840;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 842:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 89)
                        kind = 89;
                     { jjCheckNAddTwoStates(234, 235); }
                  }
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(0, 2); }
                  break;
               case 470:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 89)
                        kind = 89;
                     { jjCheckNAddTwoStates(234, 235); }
                  }
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(473, 475); }
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(0, 2); }
                  break;
               case 846:
               case 186:
               case 188:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 80)
                     kind = 80;
                  { jjCheckNAddTwoStates(186, 187); }
                  break;
               case 2:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 89)
                     kind = 89;
                  { jjCheckNAddStates(675, 679); }
                  break;
               case 844:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 89)
                        kind = 89;
                     { jjCheckNAddTwoStates(234, 235); }
                  }
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(0, 2); }
                  break;
               case 726:
               case 185:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 80)
                     kind = 80;
                  { jjCheckNAddTwoStates(186, 187); }
                  break;
               case 144:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 89)
                        kind = 89;
                     { jjCheckNAddTwoStates(234, 235); }
                  }
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(0, 2); }
                  break;
               case 477:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 89)
                        kind = 89;
                     { jjCheckNAddTwoStates(234, 235); }
                  }
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(473, 475); }
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(0, 2); }
                  break;
               case 843:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 89)
                        kind = 89;
                     { jjCheckNAddTwoStates(234, 235); }
                  }
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(0, 2); }
                  break;
               case 3:
               case 5:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 47)
                     kind = 47;
                  { jjCheckNAddTwoStates(3, 4); }
                  break;
               case 42:
               case 43:
               case 88:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(230, 234); }
                  break;
               case 46:
               case 47:
               case 51:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(241, 245); }
                  break;
               case 130:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 123)
                     kind = 123;
                  { jjAddStates(326, 328); }
                  break;
               case 233:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 89)
                     kind = 89;
                  { jjCheckNAddTwoStates(234, 235); }
                  break;
               case 234:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 89)
                     kind = 89;
                  { jjCheckNAddTwoStates(234, 235); }
                  break;
               case 251:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(0, 2); }
                  break;
               case 252:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(0, 2); }
                  break;
               case 296:
               case 302:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(411, 413); }
                  break;
               case 317:
               case 322:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 25)
                     kind = 25;
                  { jjCheckNAddTwoStates(317, 318); }
                  break;
               case 338:
               case 344:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(442, 444); }
                  break;
               case 359:
               case 364:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 26)
                     kind = 26;
                  { jjCheckNAddTwoStates(359, 360); }
                  break;
               case 471:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 89)
                     kind = 89;
                  { jjCheckNAddTwoStates(234, 235); }
                  break;
               case 474:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(0, 2); }
                  break;
               case 478:
               case 479:
               case 486:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(473, 475); }
                  break;
               case 532:
               case 540:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(512, 514); }
                  break;
               case 556:
               case 562:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(530, 532); }
                  break;
               case 577:
               case 579:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(548, 551); }
                  break;
               case 728:
               case 729:
               case 741:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(597, 599); }
                  break;
               case 787:
               case 788:
               case 799:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(636, 638); }
                  break;
               default : if (i1 == 0 || l1 == 0 || i2 == 0 ||  l2 == 0) break; else break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 842 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_2(int pos, long active0){
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_2(int pos, long active0){
   return jjMoveNfa_2(jjStopStringLiteralDfa_2(pos, active0), pos + 1);
}
private int jjMoveStringLiteralDfa0_2(){
   switch(curChar)
   {
      case 40:
         return jjStopAtPos(0, 12);
      case 41:
         return jjStopAtPos(0, 13);
      case 43:
         return jjStopAtPos(0, 10);
      case 45:
         return jjStopAtPos(0, 11);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa1_2(0x100L);
      case 78:
      case 110:
         return jjStopAtPos(0, 6);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa1_2(0x80L);
      default :
         return jjMoveNfa_2(6, 0);
   }
}
private int jjMoveStringLiteralDfa1_2(long active0){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(0, active0);
      return 1;
   }
   switch(curChar)
   {
      case 68:
      case 100:
         return jjMoveStringLiteralDfa2_2(active0, 0x80L);
      case 86:
      case 118:
         return jjMoveStringLiteralDfa2_2(active0, 0x100L);
      default :
         break;
   }
   return jjStartNfa_2(0, active0);
}
private int jjMoveStringLiteralDfa2_2(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_2(0, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(1, active0);
      return 2;
   }
   switch(curChar)
   {
      case 68:
      case 100:
         if ((active0 & 0x80L) != 0L)
            return jjStopAtPos(2, 7);
         break;
      case 69:
      case 101:
         return jjMoveStringLiteralDfa3_2(active0, 0x100L);
      default :
         break;
   }
   return jjStartNfa_2(1, active0);
}
private int jjMoveStringLiteralDfa3_2(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_2(1, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(2, active0);
      return 3;
   }
   switch(curChar)
   {
      case 78:
      case 110:
         if ((active0 & 0x100L) != 0L)
            return jjStopAtPos(3, 8);
         break;
      default :
         break;
   }
   return jjStartNfa_2(2, active0);
}
private int jjMoveNfa_2(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 10;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 6:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 9)
                        kind = 9;
                     { jjCheckNAdd(0); }
                  }
                  else if ((0x100003600L & l) != 0L)
                  {
                     if (kind > 4)
                        kind = 4;
                     { jjCheckNAddTwoStates(8, 9); }
                  }
                  else if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 0:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 9)
                     kind = 9;
                  { jjCheckNAdd(0); }
                  break;
               case 1:
                  if (curChar != 47)
                     break;
                  if (kind > 123)
                     kind = 123;
                  { jjCheckNAddStates(730, 732); }
                  break;
               case 2:
                  if ((0xf7ffffffffffdbffL & l) == 0L)
                     break;
                  if (kind > 123)
                     kind = 123;
                  { jjCheckNAddStates(730, 732); }
                  break;
               case 3:
                  if ((0x2400L & l) != 0L && kind > 123)
                     kind = 123;
                  break;
               case 4:
                  if (curChar == 10 && kind > 123)
                     kind = 123;
                  break;
               case 5:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 4;
                  break;
               case 7:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 4)
                     kind = 4;
                  { jjCheckNAddTwoStates(8, 9); }
                  break;
               case 8:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 4)
                     kind = 4;
                  { jjCheckNAdd(8); }
                  break;
               case 9:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 5)
                     kind = 5;
                  { jjCheckNAdd(9); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 2:
                  if ((0xdfffffffffffffffL & l) == 0L)
                     break;
                  kind = 123;
                  { jjAddStates(730, 732); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 2:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 123)
                     kind = 123;
                  { jjAddStates(730, 732); }
                  break;
               default : if (i1 == 0 || l1 == 0 || i2 == 0 ||  l2 == 0) break; else break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 10 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_3(int pos, long active0, long active1){
   switch (pos)
   {
      case 0:
         if ((active0 & 0x10020000000000L) != 0L)
            return 836;
         if ((active0 & 0x2000000000L) != 0L)
            return 837;
         if ((active0 & 0x8000000000000L) != 0L)
            return 838;
         if ((active0 & 0xff80000000000000L) != 0L || (active1 & 0x9fffL) != 0L)
         {
            jjmatchedKind = 80;
            jjmatchedPos = 0;
            return 720;
         }
         if ((active0 & 0x40000000000800L) != 0L)
            return 464;
         if ((active1 & 0x100000L) != 0L)
         {
            jjmatchedKind = 89;
            jjmatchedPos = 0;
            return 138;
         }
         if ((active1 & 0x100000001ec0000L) != 0L)
         {
            jjmatchedKind = 89;
            jjmatchedPos = 0;
            return 839;
         }
         return -1;
      case 1:
         if ((active1 & 0x1800000L) != 0L)
            return 839;
         if ((active1 & 0x1000000007c0000L) != 0L)
         {
            jjmatchedKind = 89;
            jjmatchedPos = 1;
            return 839;
         }
         if ((active0 & 0x40000000000000L) != 0L)
            return 471;
         if ((active0 & 0xff80000000000000L) != 0L || (active1 & 0x9fffL) != 0L)
         {
            jjmatchedKind = 80;
            jjmatchedPos = 1;
            return 840;
         }
         return -1;
      case 2:
         if ((active1 & 0x100000000640000L) != 0L)
         {
            jjmatchedKind = 89;
            jjmatchedPos = 2;
            return 839;
         }
         if ((active1 & 0x180000L) != 0L)
            return 839;
         if ((active0 & 0xff80000000000000L) != 0L || (active1 & 0x9fffL) != 0L)
         {
            jjmatchedKind = 80;
            jjmatchedPos = 2;
            return 840;
         }
         return -1;
      case 3:
         if ((active1 & 0x100000000040000L) != 0L)
         {
            jjmatchedKind = 89;
            jjmatchedPos = 3;
            return 839;
         }
         if ((active0 & 0xff80000000000000L) != 0L || (active1 & 0x9fffL) != 0L)
         {
            jjmatchedKind = 80;
            jjmatchedPos = 3;
            return 840;
         }
         if ((active1 & 0x600000L) != 0L)
            return 839;
         return -1;
      case 4:
         if ((active0 & 0x400000000000000L) != 0L)
            return 840;
         if ((active0 & 0xfb80000000000000L) != 0L || (active1 & 0x9fffL) != 0L)
         {
            jjmatchedKind = 80;
            jjmatchedPos = 4;
            return 840;
         }
         if ((active1 & 0x100000000040000L) != 0L)
         {
            jjmatchedKind = 89;
            jjmatchedPos = 4;
            return 839;
         }
         return -1;
      case 5:
         if ((active1 & 0x800L) != 0L)
            return 840;
         if ((active1 & 0x100000000040000L) != 0L)
         {
            jjmatchedKind = 89;
            jjmatchedPos = 5;
            return 839;
         }
         if ((active0 & 0xfb80000000000000L) != 0L || (active1 & 0x97ffL) != 0L)
         {
            jjmatchedKind = 80;
            jjmatchedPos = 5;
            return 840;
         }
         return -1;
      case 6:
         if ((active0 & 0x100000000000000L) != 0L)
            return 840;
         if ((active1 & 0x40000L) != 0L)
            return 839;
         if ((active0 & 0xfa80000000000000L) != 0L || (active1 & 0x97ffL) != 0L)
         {
            jjmatchedKind = 80;
            jjmatchedPos = 6;
            return 840;
         }
         if ((active1 & 0x100000000000000L) != 0L)
         {
            jjmatchedKind = 89;
            jjmatchedPos = 6;
            return 839;
         }
         return -1;
      case 7:
         if ((active0 & 0x80000000000000L) != 0L)
            return 840;
         if ((active1 & 0x100000000000000L) != 0L)
         {
            jjmatchedKind = 89;
            jjmatchedPos = 7;
            return 839;
         }
         if ((active0 & 0xfa00000000000000L) != 0L || (active1 & 0x97ffL) != 0L)
         {
            jjmatchedKind = 80;
            jjmatchedPos = 7;
            return 840;
         }
         return -1;
      case 8:
         if ((active0 & 0x1800000000000000L) != 0L || (active1 & 0x8020L) != 0L)
            return 840;
         if ((active1 & 0x100000000000000L) != 0L)
         {
            if (jjmatchedPos != 8)
            {
               jjmatchedKind = 89;
               jjmatchedPos = 8;
            }
            return 839;
         }
         if ((active0 & 0xe200000000000000L) != 0L || (active1 & 0x17dfL) != 0L)
         {
            if (jjmatchedPos != 8)
            {
               jjmatchedKind = 80;
               jjmatchedPos = 8;
            }
            return 840;
         }
         return -1;
      case 9:
         if ((active1 & 0x100000000000000L) != 0L)
         {
            if (jjmatchedPos != 9)
            {
               jjmatchedKind = 89;
               jjmatchedPos = 9;
            }
            return 839;
         }
         if ((active0 & 0xc200000000000000L) != 0L || (active1 & 0x1100L) != 0L)
            return 840;
         if ((active0 & 0x2800000000000000L) != 0L || (active1 & 0x6dfL) != 0L)
         {
            if (jjmatchedPos != 9)
            {
               jjmatchedKind = 80;
               jjmatchedPos = 9;
            }
            return 840;
         }
         return -1;
      case 10:
         if ((active0 & 0x2000000000000000L) != 0L)
            return 840;
         if ((active0 & 0x8800000000000000L) != 0L || (active1 & 0x6dfL) != 0L)
         {
            jjmatchedKind = 80;
            jjmatchedPos = 10;
            return 840;
         }
         return -1;
      case 11:
         if ((active1 & 0xc3L) != 0L)
            return 840;
         if ((active0 & 0x8800000000000000L) != 0L || (active1 & 0x61cL) != 0L)
         {
            if (jjmatchedPos != 11)
            {
               jjmatchedKind = 80;
               jjmatchedPos = 11;
            }
            return 840;
         }
         return -1;
      case 12:
         if ((active1 & 0x618L) != 0L)
            return 840;
         if ((active0 & 0x8800000000000000L) != 0L || (active1 & 0x5L) != 0L)
         {
            if (jjmatchedPos != 12)
            {
               jjmatchedKind = 80;
               jjmatchedPos = 12;
            }
            return 840;
         }
         return -1;
      case 13:
         if ((active1 & 0x4L) != 0L)
            return 840;
         if ((active0 & 0x8800000000000000L) != 0L || (active1 & 0x11L) != 0L)
         {
            jjmatchedKind = 80;
            jjmatchedPos = 13;
            return 840;
         }
         return -1;
      case 14:
         if ((active0 & 0x8800000000000000L) != 0L || (active1 & 0x11L) != 0L)
         {
            jjmatchedKind = 80;
            jjmatchedPos = 14;
            return 840;
         }
         return -1;
      case 15:
         if ((active0 & 0x800000000000000L) != 0L)
            return 840;
         if ((active0 & 0x8000000000000000L) != 0L || (active1 & 0x11L) != 0L)
         {
            jjmatchedKind = 80;
            jjmatchedPos = 15;
            return 840;
         }
         return -1;
      case 16:
         if ((active0 & 0x8000000000000000L) != 0L)
            return 840;
         if ((active1 & 0x11L) != 0L)
         {
            jjmatchedKind = 80;
            jjmatchedPos = 16;
            return 840;
         }
         return -1;
      case 17:
         if ((active1 & 0x11L) != 0L)
         {
            jjmatchedKind = 80;
            jjmatchedPos = 17;
            return 840;
         }
         return -1;
      case 18:
         if ((active1 & 0x1L) != 0L)
            return 840;
         if ((active1 & 0x10L) != 0L)
         {
            jjmatchedKind = 80;
            jjmatchedPos = 18;
            return 840;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_3(int pos, long active0, long active1){
   return jjMoveNfa_3(jjStopStringLiteralDfa_3(pos, active0, active1), pos + 1);
}
private int jjMoveStringLiteralDfa0_3(){
   switch(curChar)
   {
      case 36:
         return jjMoveStringLiteralDfa1_3(0x8000000000000L, 0x0L);
      case 40:
         return jjStopAtPos(0, 12);
      case 41:
         return jjStopAtPos(0, 13);
      case 42:
         {
         jjmatchedKind = 41;
         jjmatchedPos = 0;
         }
         return jjMoveStringLiteralDfa1_3(0x10000000000000L, 0x0L);
      case 43:
         return jjStopAtPos(0, 10);
      case 45:
         {
         jjmatchedKind = 11;
         jjmatchedPos = 0;
         }
         return jjMoveStringLiteralDfa1_3(0x40000000000000L, 0x0L);
      case 46:
         return jjStartNfaWithStates_3(0, 37, 837);
      case 47:
         return jjStopAtPos(0, 42);
      case 58:
         {
         jjmatchedKind = 40;
         jjmatchedPos = 0;
         }
         return jjMoveStringLiteralDfa1_3(0x0L, 0x40000000000000L);
      case 59:
         return jjStopAtPos(0, 39);
      case 60:
         return jjMoveStringLiteralDfa1_3(0x20000000000000L, 0x0L);
      case 61:
         return jjStopAtPos(0, 43);
      case 62:
         return jjStopAtPos(0, 45);
      case 64:
         return jjMoveStringLiteralDfa1_3(0xff80000000000000L, 0x9fffL);
      case 91:
         return jjStopAtPos(0, 35);
      case 93:
         return jjStopAtPos(0, 36);
      case 94:
         return jjMoveStringLiteralDfa1_3(0x4000000000000L, 0x0L);
      case 65:
      case 97:
         return jjMoveStringLiteralDfa1_3(0x0L, 0x80000L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa1_3(0x0L, 0x100000000000000L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa1_3(0x0L, 0x400000L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa1_3(0x0L, 0x40000L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa1_3(0x0L, 0x100000L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa1_3(0x0L, 0x1200000L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa1_3(0x0L, 0x800000L);
      case 124:
         {
         jjmatchedKind = 44;
         jjmatchedPos = 0;
         }
         return jjMoveStringLiteralDfa1_3(0x2000000000000L, 0x0L);
      case 125:
         return jjStopAtPos(0, 34);
      case 126:
         {
         jjmatchedKind = 46;
         jjmatchedPos = 0;
         }
         return jjMoveStringLiteralDfa1_3(0x1000000000000L, 0x0L);
      default :
         return jjMoveNfa_3(2, 0);
   }
}
private int jjMoveStringLiteralDfa1_3(long active0, long active1){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(0, active0, active1);
      return 1;
   }
   switch(curChar)
   {
      case 33:
         return jjMoveStringLiteralDfa2_3(active0, 0x20000000000000L, active1, 0L);
      case 45:
         return jjMoveStringLiteralDfa2_3(active0, 0x40000000000000L, active1, 0L);
      case 61:
         if ((active0 & 0x1000000000000L) != 0L)
            return jjStopAtPos(1, 48);
         else if ((active0 & 0x2000000000000L) != 0L)
            return jjStopAtPos(1, 49);
         else if ((active0 & 0x4000000000000L) != 0L)
            return jjStopAtPos(1, 50);
         else if ((active0 & 0x8000000000000L) != 0L)
            return jjStopAtPos(1, 51);
         else if ((active0 & 0x10000000000000L) != 0L)
            return jjStopAtPos(1, 52);
         break;
      case 66:
      case 98:
         return jjMoveStringLiteralDfa2_3(active0, 0L, active1, 0x1fL);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa2_3(active0, 0x80000000000000L, active1, 0L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa2_3(active0, 0L, active1, 0x1000L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa2_3(active0, 0x100000000000000L, active1, 0L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa2_3(active0, 0L, active1, 0xe0L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa2_3(active0, 0L, active1, 0x800L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa2_3(active0, 0x200000000000000L, active1, 0x400000002c0000L);
      case 79:
      case 111:
         if ((active1 & 0x800000L) != 0L)
            return jjStartNfaWithStates_3(1, 87, 839);
         return jjMoveStringLiteralDfa2_3(active0, 0L, active1, 0x100000L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa2_3(active0, 0x400000000000000L, active1, 0L);
      case 82:
      case 114:
         if ((active1 & 0x1000000L) != 0L)
            return jjStartNfaWithStates_3(1, 88, 839);
         return jjMoveStringLiteralDfa2_3(active0, 0L, active1, 0x400700L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa2_3(active0, 0L, active1, 0x8000L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa2_3(active0, 0xf800000000000000L, active1, 0L);
      case 88:
      case 120:
         return jjMoveStringLiteralDfa2_3(active0, 0L, active1, 0x100000000000000L);
      default :
         break;
   }
   return jjStartNfa_3(0, active0, active1);
}
private int jjMoveStringLiteralDfa2_3(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_3(0, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(1, active0, active1);
      return 2;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa3_3(active0, 0x20000000000000L, active1, 0L);
      case 62:
         if ((active0 & 0x40000000000000L) != 0L)
            return jjStopAtPos(2, 54);
         break;
      case 65:
      case 97:
         return jjMoveStringLiteralDfa3_3(active0, 0x600000000000000L, active1, 0L);
      case 68:
      case 100:
         if ((active1 & 0x80000L) != 0L)
            return jjStartNfaWithStates_3(2, 83, 839);
         break;
      case 69:
      case 101:
         return jjMoveStringLiteralDfa3_3(active0, 0L, active1, 0x8e0L);
      case 72:
      case 104:
         return jjMoveStringLiteralDfa3_3(active0, 0x80000000000000L, active1, 0x40000L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa3_3(active0, 0L, active1, 0x700L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa3_3(active0, 0L, active1, 0x200000L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa3_3(active0, 0x100000000000000L, active1, 0L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa3_3(active0, 0xf800000000000000L, active1, 0x4000000040101fL);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa3_3(active0, 0L, active1, 0x100000000000000L);
      case 84:
      case 116:
         if ((active1 & 0x100000L) != 0L)
            return jjStartNfaWithStates_3(2, 84, 839);
         break;
      case 85:
      case 117:
         return jjMoveStringLiteralDfa3_3(active0, 0L, active1, 0x8000L);
      default :
         break;
   }
   return jjStartNfa_3(1, active0, active1);
}
private int jjMoveStringLiteralDfa3_3(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_3(1, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(2, active0, active1);
      return 3;
   }
   switch(curChar)
   {
      case 45:
         if ((active0 & 0x20000000000000L) != 0L)
            return jjStopAtPos(3, 53);
         break;
      case 65:
      case 97:
         return jjMoveStringLiteralDfa4_3(active0, 0x80000000000000L, active1, 0L);
      case 68:
      case 100:
         return jjMoveStringLiteralDfa4_3(active0, 0L, active1, 0x800L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa4_3(active0, 0L, active1, 0x40000L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa4_3(active0, 0L, active1, 0xe0L);
      case 71:
      case 103:
         return jjMoveStringLiteralDfa4_3(active0, 0x400000000000000L, active1, 0x700L);
      case 77:
      case 109:
         if ((active1 & 0x400000L) != 0L)
            return jjStartNfaWithStates_3(3, 86, 839);
         return jjMoveStringLiteralDfa4_3(active0, 0x200000000000000L, active1, 0L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa4_3(active0, 0L, active1, 0x1000L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa4_3(active0, 0xf900000000000000L, active1, 0x8000L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa4_3(active0, 0L, active1, 0x100000000000000L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa4_3(active0, 0L, active1, 0x4000000000001fL);
      case 89:
      case 121:
         if ((active1 & 0x200000L) != 0L)
            return jjStartNfaWithStates_3(3, 85, 839);
         break;
      default :
         break;
   }
   return jjStartNfa_3(2, active0, active1);
}
private int jjMoveStringLiteralDfa4_3(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_3(2, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(3, active0, active1);
      return 4;
   }
   switch(curChar)
   {
      case 40:
         if ((active1 & 0x40000000000000L) != 0L)
            return jjStopAtPos(4, 118);
         break;
      case 45:
         return jjMoveStringLiteralDfa5_3(active0, 0xf800000000000000L, active1, 0L);
      case 69:
      case 101:
         if ((active0 & 0x400000000000000L) != 0L)
            return jjStartNfaWithStates_3(4, 58, 840);
         return jjMoveStringLiteralDfa5_3(active0, 0x200000000000000L, active1, 0x100000000000000L);
      case 72:
      case 104:
         return jjMoveStringLiteralDfa5_3(active0, 0L, active1, 0x700L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa5_3(active0, 0L, active1, 0x800L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa5_3(active0, 0x100000000000000L, active1, 0L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa5_3(active0, 0L, active1, 0x8000L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa5_3(active0, 0x80000000000000L, active1, 0x40000L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa5_3(active0, 0L, active1, 0x10ffL);
      default :
         break;
   }
   return jjStartNfa_3(3, active0, active1);
}
private int jjMoveStringLiteralDfa5_3(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_3(3, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(4, active0, active1);
      return 5;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa6_3(active0, 0L, active1, 0x10e0L);
      case 65:
      case 97:
         if ((active1 & 0x800L) != 0L)
            return jjStartNfaWithStates_3(5, 75, 840);
         break;
      case 67:
      case 99:
         return jjMoveStringLiteralDfa6_3(active0, 0x2000000000000000L, active1, 0L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa6_3(active0, 0L, active1, 0x40000L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa6_3(active0, 0x1800000000000000L, active1, 0L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa6_3(active0, 0L, active1, 0x801fL);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa6_3(active0, 0xc100000000000000L, active1, 0L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa6_3(active0, 0x280000000000000L, active1, 0x100000000000000L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa6_3(active0, 0L, active1, 0x700L);
      default :
         break;
   }
   return jjStartNfa_3(4, active0, active1);
}
private int jjMoveStringLiteralDfa6_3(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_3(4, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(5, active0, active1);
      return 6;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa7_3(active0, 0L, active1, 0x700L);
      case 66:
      case 98:
         return jjMoveStringLiteralDfa7_3(active0, 0L, active1, 0x80L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa7_3(active0, 0x3880000000000000L, active1, 0L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa7_3(active0, 0L, active1, 0x1000L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa7_3(active0, 0xc000000000000000L, active1, 0L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa7_3(active0, 0L, active1, 0x5fL);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa7_3(active0, 0x200000000000000L, active1, 0L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa7_3(active0, 0L, active1, 0x8000L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa7_3(active0, 0L, active1, 0x100000000000000L);
      case 84:
      case 116:
         if ((active0 & 0x100000000000000L) != 0L)
            return jjStartNfaWithStates_3(6, 56, 840);
         else if ((active1 & 0x40000L) != 0L)
            return jjStartNfaWithStates_3(6, 82, 839);
         return jjMoveStringLiteralDfa7_3(active0, 0L, active1, 0x20L);
      default :
         break;
   }
   return jjStartNfa_3(5, active0, active1);
}
private int jjMoveStringLiteralDfa7_3(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_3(5, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(6, active0, active1);
      return 7;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa8_3(active0, 0L, active1, 0x1fL);
      case 65:
      case 97:
         return jjMoveStringLiteralDfa8_3(active0, 0x200000000000000L, active1, 0x1000L);
      case 66:
      case 98:
         return jjMoveStringLiteralDfa8_3(active0, 0L, active1, 0x400L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa8_3(active0, 0x1800000000000000L, active1, 0L);
      case 71:
      case 103:
         return jjMoveStringLiteralDfa8_3(active0, 0xc000000000000000L, active1, 0L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa8_3(active0, 0L, active1, 0x100000000000040L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa8_3(active0, 0L, active1, 0x200L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa8_3(active0, 0x2000000000000000L, active1, 0L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa8_3(active0, 0L, active1, 0xa0L);
      case 84:
      case 116:
         if ((active0 & 0x80000000000000L) != 0L)
            return jjStartNfaWithStates_3(7, 55, 840);
         return jjMoveStringLiteralDfa8_3(active0, 0L, active1, 0x8100L);
      default :
         break;
   }
   return jjStartNfa_3(6, active0, active1);
}
private int jjMoveStringLiteralDfa8_3(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_3(6, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(7, active0, active1);
      return 8;
   }
   switch(curChar)
   {
      case 67:
      case 99:
         return jjMoveStringLiteralDfa9_3(active0, 0x200000000000000L, active1, 0x1004L);
      case 68:
      case 100:
         return jjMoveStringLiteralDfa9_3(active0, 0L, active1, 0x40L);
      case 72:
      case 104:
         return jjMoveStringLiteralDfa9_3(active0, 0xc000000000000000L, active1, 0L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa9_3(active0, 0L, active1, 0x200L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa9_3(active0, 0L, active1, 0x3L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa9_3(active0, 0L, active1, 0x100000000000500L);
      case 80:
      case 112:
         if ((active1 & 0x20L) != 0L)
            return jjStartNfaWithStates_3(8, 69, 840);
         break;
      case 82:
      case 114:
         return jjMoveStringLiteralDfa9_3(active0, 0L, active1, 0x18L);
      case 83:
      case 115:
         if ((active1 & 0x8000L) != 0L)
            return jjStartNfaWithStates_3(8, 79, 840);
         break;
      case 84:
      case 116:
         if ((active0 & 0x1000000000000000L) != 0L)
         {
            jjmatchedKind = 60;
            jjmatchedPos = 8;
         }
         return jjMoveStringLiteralDfa9_3(active0, 0x2800000000000000L, active1, 0x80L);
      default :
         break;
   }
   return jjStartNfa_3(7, active0, active1);
}
private int jjMoveStringLiteralDfa9_3(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_3(7, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(8, active0, active1);
      return 9;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa10_3(active0, 0x800000000000000L, active1, 0L);
      case 68:
      case 100:
         return jjMoveStringLiteralDfa10_3(active0, 0L, active1, 0x240L);
      case 69:
      case 101:
         if ((active0 & 0x200000000000000L) != 0L)
            return jjStartNfaWithStates_3(9, 57, 840);
         else if ((active1 & 0x1000L) != 0L)
            return jjStartNfaWithStates_3(9, 76, 840);
         return jjMoveStringLiteralDfa10_3(active0, 0x2000000000000000L, active1, 0x7L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa10_3(active0, 0L, active1, 0x18L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa10_3(active0, 0L, active1, 0x100000000000000L);
      case 80:
      case 112:
         if ((active1 & 0x100L) != 0L)
            return jjStartNfaWithStates_3(9, 72, 840);
         break;
      case 84:
      case 116:
         if ((active0 & 0x4000000000000000L) != 0L)
         {
            jjmatchedKind = 62;
            jjmatchedPos = 9;
         }
         return jjMoveStringLiteralDfa10_3(active0, 0x8000000000000000L, active1, 0x480L);
      default :
         break;
   }
   return jjStartNfa_3(8, active0, active1);
}
private int jjMoveStringLiteralDfa10_3(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_3(8, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(9, active0, active1);
      return 10;
   }
   switch(curChar)
   {
      case 40:
         if ((active1 & 0x100000000000000L) != 0L)
            return jjStopAtPos(10, 120);
         break;
      case 45:
         return jjMoveStringLiteralDfa11_3(active0, 0x8000000000000000L, active1, 0L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa11_3(active0, 0x800000000000000L, active1, 0L);
      case 68:
      case 100:
         return jjMoveStringLiteralDfa11_3(active0, 0L, active1, 0x200L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa11_3(active0, 0L, active1, 0x3L);
      case 71:
      case 103:
         return jjMoveStringLiteralDfa11_3(active0, 0L, active1, 0x18L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa11_3(active0, 0L, active1, 0x40L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa11_3(active0, 0L, active1, 0x4L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa11_3(active0, 0L, active1, 0x80L);
      case 82:
      case 114:
         if ((active0 & 0x2000000000000000L) != 0L)
            return jjStartNfaWithStates_3(10, 61, 840);
         break;
      case 84:
      case 116:
         return jjMoveStringLiteralDfa11_3(active0, 0L, active1, 0x400L);
      default :
         break;
   }
   return jjStartNfa_3(9, active0, active1);
}
private int jjMoveStringLiteralDfa11_3(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_3(9, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(10, active0, active1);
      return 11;
   }
   switch(curChar)
   {
      case 67:
      case 99:
         return jjMoveStringLiteralDfa12_3(active0, 0x8000000000000000L, active1, 0L);
      case 69:
      case 101:
         if ((active1 & 0x40L) != 0L)
            return jjStartNfaWithStates_3(11, 70, 840);
         break;
      case 72:
      case 104:
         return jjMoveStringLiteralDfa12_3(active0, 0L, active1, 0x18L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa12_3(active0, 0L, active1, 0x200L);
      case 77:
      case 109:
         if ((active1 & 0x80L) != 0L)
            return jjStartNfaWithStates_3(11, 71, 840);
         break;
      case 79:
      case 111:
         return jjMoveStringLiteralDfa12_3(active0, 0x800000000000000L, active1, 0x400L);
      case 84:
      case 116:
         if ((active1 & 0x2L) != 0L)
         {
            jjmatchedKind = 65;
            jjmatchedPos = 11;
         }
         return jjMoveStringLiteralDfa12_3(active0, 0L, active1, 0x5L);
      default :
         break;
   }
   return jjStartNfa_3(10, active0, active1);
}
private int jjMoveStringLiteralDfa12_3(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_3(10, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(11, active0, active1);
      return 12;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa13_3(active0, 0L, active1, 0x1L);
      case 69:
      case 101:
         if ((active1 & 0x200L) != 0L)
            return jjStartNfaWithStates_3(12, 73, 840);
         return jjMoveStringLiteralDfa13_3(active0, 0L, active1, 0x4L);
      case 77:
      case 109:
         if ((active1 & 0x400L) != 0L)
            return jjStartNfaWithStates_3(12, 74, 840);
         break;
      case 79:
      case 111:
         return jjMoveStringLiteralDfa13_3(active0, 0x8000000000000000L, active1, 0L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa13_3(active0, 0x800000000000000L, active1, 0L);
      case 84:
      case 116:
         if ((active1 & 0x8L) != 0L)
         {
            jjmatchedKind = 67;
            jjmatchedPos = 12;
         }
         return jjMoveStringLiteralDfa13_3(active0, 0L, active1, 0x10L);
      default :
         break;
   }
   return jjStartNfa_3(11, active0, active1);
}
private int jjMoveStringLiteralDfa13_3(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_3(11, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(12, active0, active1);
      return 13;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa14_3(active0, 0L, active1, 0x10L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa14_3(active0, 0L, active1, 0x1L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa14_3(active0, 0x800000000000000L, active1, 0L);
      case 82:
      case 114:
         if ((active1 & 0x4L) != 0L)
            return jjStartNfaWithStates_3(13, 66, 840);
         return jjMoveStringLiteralDfa14_3(active0, 0x8000000000000000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_3(12, active0, active1);
}
private int jjMoveStringLiteralDfa14_3(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_3(12, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(13, active0, active1);
      return 14;
   }
   switch(curChar)
   {
      case 67:
      case 99:
         return jjMoveStringLiteralDfa15_3(active0, 0L, active1, 0x10L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa15_3(active0, 0x800000000000000L, active1, 0L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa15_3(active0, 0x8000000000000000L, active1, 0L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa15_3(active0, 0L, active1, 0x1L);
      default :
         break;
   }
   return jjStartNfa_3(13, active0, active1);
}
private int jjMoveStringLiteralDfa15_3(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_3(13, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(14, active0, active1);
      return 15;
   }
   switch(curChar)
   {
      case 69:
      case 101:
         return jjMoveStringLiteralDfa16_3(active0, 0x8000000000000000L, active1, 0L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa16_3(active0, 0L, active1, 0x10L);
      case 82:
      case 114:
         if ((active0 & 0x800000000000000L) != 0L)
            return jjStartNfaWithStates_3(15, 59, 840);
         return jjMoveStringLiteralDfa16_3(active0, 0L, active1, 0x1L);
      default :
         break;
   }
   return jjStartNfa_3(14, active0, active1);
}
private int jjMoveStringLiteralDfa16_3(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_3(14, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(15, active0, active1);
      return 16;
   }
   switch(curChar)
   {
      case 78:
      case 110:
         return jjMoveStringLiteralDfa17_3(active0, 0L, active1, 0x1L);
      case 82:
      case 114:
         if ((active0 & 0x8000000000000000L) != 0L)
            return jjStartNfaWithStates_3(16, 63, 840);
         return jjMoveStringLiteralDfa17_3(active0, 0L, active1, 0x10L);
      default :
         break;
   }
   return jjStartNfa_3(15, active0, active1);
}
private int jjMoveStringLiteralDfa17_3(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_3(15, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(16, 0L, active1);
      return 17;
   }
   switch(curChar)
   {
      case 69:
      case 101:
         return jjMoveStringLiteralDfa18_3(active1, 0x1L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa18_3(active1, 0x10L);
      default :
         break;
   }
   return jjStartNfa_3(16, 0L, active1);
}
private int jjMoveStringLiteralDfa18_3(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_3(16, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(17, 0L, active1);
      return 18;
   }
   switch(curChar)
   {
      case 69:
      case 101:
         return jjMoveStringLiteralDfa19_3(active1, 0x10L);
      case 82:
      case 114:
         if ((active1 & 0x1L) != 0L)
            return jjStartNfaWithStates_3(18, 64, 840);
         break;
      default :
         break;
   }
   return jjStartNfa_3(17, 0L, active1);
}
private int jjMoveStringLiteralDfa19_3(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_3(17, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(18, 0L, active1);
      return 19;
   }
   switch(curChar)
   {
      case 82:
      case 114:
         if ((active1 & 0x10L) != 0L)
            return jjStartNfaWithStates_3(19, 68, 840);
         break;
      default :
         break;
   }
   return jjStartNfa_3(18, 0L, active1);
}
private int jjStartNfaWithStates_3(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_3(state, pos + 1);
}
private int jjMoveNfa_3(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 836;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 836:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(733, 735); }
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(736, 738); }
                  break;
               case 720:
                  if (curChar == 42)
                     { jjCheckNAddStates(739, 741); }
                  else if (curChar == 36)
                     { jjCheckNAddStates(742, 744); }
                  else if (curChar == 45)
                     { jjCheckNAddTwoStates(179, 198); }
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 178;
                  if (curChar == 45)
                     { jjCheckNAddStates(745, 750); }
                  if (curChar == 45)
                     { jjCheckNAddStates(751, 756); }
                  break;
               case 471:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(472, 496); }
                  break;
               case 138:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(757, 759); }
                  else if (curChar == 40)
                  {
                     if (kind > 121)
                        kind = 121;
                  }
                  if ((0x3ff200000000000L & l) != 0L)
                  {
                     if (kind > 89)
                        kind = 89;
                     { jjCheckNAddTwoStates(228, 229); }
                  }
                  break;
               case 837:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(461, 462); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(457, 460); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(454, 456); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(452, 453); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(449, 451); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(444, 448); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(439, 443); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(435, 438); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(431, 434); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(428, 430); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(425, 427); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(422, 424); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(419, 421); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(416, 418); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(411, 415); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(406, 410); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(402, 405); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(399, 401); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(394, 398); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(391, 393); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(388, 390); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(384, 387); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(381, 383); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(378, 380); }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(375, 377); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 32)
                        kind = 32;
                     { jjCheckNAdd(374); }
                  }
                  break;
               case 464:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(468, 469); }
                  else if (curChar == 42)
                     { jjCheckNAddStates(760, 762); }
                  else if (curChar == 36)
                     { jjCheckNAddStates(763, 765); }
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(472, 496); }
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 471;
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(465, 466); }
                  break;
               case 840:
               case 180:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  { jjCheckNAddTwoStates(180, 181); }
                  break;
               case 2:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 32)
                        kind = 32;
                     { jjCheckNAddStates(766, 868); }
                  }
                  else if ((0x100003600L & l) != 0L)
                  {
                     if (kind > 4)
                        kind = 4;
                     { jjCheckNAddStates(869, 874); }
                  }
                  else if (curChar == 42)
                     { jjCheckNAddStates(875, 880); }
                  else if (curChar == 36)
                     { jjCheckNAddStates(881, 886); }
                  else if (curChar == 45)
                     { jjCheckNAddStates(887, 896); }
                  else if (curChar == 46)
                     { jjCheckNAddStates(897, 922); }
                  else if (curChar == 39)
                  {
                     if (kind > 26)
                        kind = 26;
                     { jjCheckNAddStates(923, 927); }
                  }
                  else if (curChar == 34)
                  {
                     if (kind > 25)
                        kind = 25;
                     { jjCheckNAddStates(928, 932); }
                  }
                  else if (curChar == 33)
                     { jjCheckNAddTwoStates(22, 31); }
                  else if (curChar == 35)
                     { jjCheckNAddTwoStates(3, 4); }
                  else if (curChar == 44)
                  {
                     if (kind > 38)
                        kind = 38;
                  }
                  if (curChar == 45)
                     { jjAddStates(933, 934); }
                  break;
               case 838:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(935, 937); }
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(938, 940); }
                  break;
               case 839:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(757, 759); }
                  else if (curChar == 40)
                  {
                     if (kind > 121)
                        kind = 121;
                  }
                  if ((0x3ff200000000000L & l) != 0L)
                  {
                     if (kind > 89)
                        kind = 89;
                     { jjCheckNAddTwoStates(228, 229); }
                  }
                  break;
               case 1:
                  if (curChar == 44 && kind > 38)
                     kind = 38;
                  break;
               case 3:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 47)
                     kind = 47;
                  { jjCheckNAddTwoStates(3, 4); }
                  break;
               case 5:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 47)
                     kind = 47;
                  { jjCheckNAddTwoStates(3, 4); }
                  break;
               case 6:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 47)
                     kind = 47;
                  { jjCheckNAddStates(208, 216); }
                  break;
               case 7:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 47)
                     kind = 47;
                  { jjCheckNAddStates(217, 220); }
                  break;
               case 8:
                  if (curChar != 10)
                     break;
                  if (kind > 47)
                     kind = 47;
                  { jjCheckNAddTwoStates(3, 4); }
                  break;
               case 9:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 8;
                  break;
               case 10:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 47)
                     kind = 47;
                  { jjCheckNAddTwoStates(3, 4); }
                  break;
               case 11:
               case 13:
               case 16:
               case 20:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(7); }
                  break;
               case 12:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 13;
                  break;
               case 14:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 15;
                  break;
               case 15:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 16;
                  break;
               case 17:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 18;
                  break;
               case 18:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 19;
                  break;
               case 19:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 20;
                  break;
               case 21:
                  if (curChar == 33)
                     { jjCheckNAddTwoStates(22, 31); }
                  break;
               case 22:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(22, 31); }
                  break;
               case 32:
                  if (curChar == 40 && kind > 117)
                     kind = 117;
                  break;
               case 38:
                  if ((0x100003600L & l) != 0L)
                     { jjAddStates(221, 222); }
                  break;
               case 39:
                  if (curChar == 58)
                     { jjCheckNAddStates(223, 229); }
                  break;
               case 40:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(223, 229); }
                  break;
               case 41:
               case 119:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(42, 104); }
                  break;
               case 43:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(230, 234); }
                  break;
               case 44:
                  if (curChar == 46)
                     { jjCheckNAddStates(235, 240); }
                  break;
               case 45:
               case 82:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(46, 67); }
                  break;
               case 47:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(241, 245); }
                  break;
               case 48:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(48, 49); }
                  break;
               case 49:
                  if (curChar == 40 && kind > 121)
                     kind = 121;
                  break;
               case 51:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(241, 245); }
                  break;
               case 52:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(246, 256); }
                  break;
               case 53:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(257, 262); }
                  break;
               case 54:
                  if (curChar == 10)
                     { jjCheckNAddStates(241, 245); }
                  break;
               case 55:
               case 70:
                  if (curChar == 13)
                     { jjCheckNAdd(54); }
                  break;
               case 56:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(241, 245); }
                  break;
               case 57:
               case 59:
               case 62:
               case 66:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(53); }
                  break;
               case 58:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 59;
                  break;
               case 60:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 61;
                  break;
               case 61:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 62;
                  break;
               case 63:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 64;
                  break;
               case 64:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 65;
                  break;
               case 65:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 66;
                  break;
               case 68:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(263, 273); }
                  break;
               case 69:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(274, 279); }
                  break;
               case 71:
               case 73:
               case 76:
               case 80:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(69); }
                  break;
               case 72:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 73;
                  break;
               case 74:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 75;
                  break;
               case 75:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 76;
                  break;
               case 77:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 78;
                  break;
               case 78:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 79;
                  break;
               case 79:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 80;
                  break;
               case 81:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 45;
                  break;
               case 83:
                  if (curChar == 36)
                     { jjCheckNAddStates(280, 282); }
                  break;
               case 84:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(280, 282); }
                  break;
               case 85:
                  if (curChar == 42)
                     { jjCheckNAddStates(283, 285); }
                  break;
               case 86:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(283, 285); }
                  break;
               case 88:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(230, 234); }
                  break;
               case 89:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(286, 296); }
                  break;
               case 90:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(297, 302); }
                  break;
               case 91:
                  if (curChar == 10)
                     { jjCheckNAddStates(230, 234); }
                  break;
               case 92:
               case 107:
                  if (curChar == 13)
                     { jjCheckNAdd(91); }
                  break;
               case 93:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(230, 234); }
                  break;
               case 94:
               case 96:
               case 99:
               case 103:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(90); }
                  break;
               case 95:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 96;
                  break;
               case 97:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 98;
                  break;
               case 98:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 99;
                  break;
               case 100:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 101;
                  break;
               case 101:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 102;
                  break;
               case 102:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 103;
                  break;
               case 105:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(303, 313); }
                  break;
               case 106:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(314, 319); }
                  break;
               case 108:
               case 110:
               case 113:
               case 117:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(106); }
                  break;
               case 109:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 110;
                  break;
               case 111:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 112;
                  break;
               case 112:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 113;
                  break;
               case 114:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 115;
                  break;
               case 115:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 116;
                  break;
               case 116:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 117;
                  break;
               case 118:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 41;
                  break;
               case 120:
                  if (curChar == 36)
                     { jjCheckNAddStates(320, 322); }
                  break;
               case 121:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(320, 322); }
                  break;
               case 122:
                  if (curChar == 42)
                     { jjCheckNAddStates(323, 325); }
                  break;
               case 123:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(323, 325); }
                  break;
               case 130:
                  if (curChar == 40 && kind > 119)
                     kind = 119;
                  break;
               case 136:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 135;
                  break;
               case 144:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 143;
                  break;
               case 149:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 148;
                  break;
               case 156:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 155;
                  break;
               case 159:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 158;
                  break;
               case 166:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 165;
                  break;
               case 169:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 168;
                  break;
               case 174:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 173;
                  break;
               case 178:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(179, 198); }
                  break;
               case 182:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  { jjCheckNAddTwoStates(180, 181); }
                  break;
               case 183:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  { jjCheckNAddStates(941, 949); }
                  break;
               case 184:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  { jjCheckNAddStates(950, 953); }
                  break;
               case 185:
                  if (curChar != 10)
                     break;
                  if (kind > 80)
                     kind = 80;
                  { jjCheckNAddTwoStates(180, 181); }
                  break;
               case 186:
               case 201:
                  if (curChar == 13)
                     { jjCheckNAdd(185); }
                  break;
               case 187:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  { jjCheckNAddTwoStates(180, 181); }
                  break;
               case 188:
               case 190:
               case 193:
               case 197:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(184); }
                  break;
               case 189:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 190;
                  break;
               case 191:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 192;
                  break;
               case 192:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 193;
                  break;
               case 194:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 195;
                  break;
               case 195:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 196;
                  break;
               case 196:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 197;
                  break;
               case 199:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  { jjCheckNAddStates(954, 962); }
                  break;
               case 200:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  { jjCheckNAddStates(963, 966); }
                  break;
               case 202:
               case 204:
               case 207:
               case 211:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(200); }
                  break;
               case 203:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 204;
                  break;
               case 205:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 206;
                  break;
               case 206:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 207;
                  break;
               case 208:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 209;
                  break;
               case 209:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 210;
                  break;
               case 210:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 211;
                  break;
               case 212:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 178;
                  break;
               case 213:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(179, 198); }
                  break;
               case 214:
                  if (curChar == 36)
                     { jjCheckNAddStates(742, 744); }
                  break;
               case 215:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(742, 744); }
                  break;
               case 216:
                  if (curChar == 42)
                     { jjCheckNAddStates(739, 741); }
                  break;
               case 217:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(739, 741); }
                  break;
               case 218:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 4)
                     kind = 4;
                  { jjCheckNAddStates(869, 874); }
                  break;
               case 219:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 4)
                     kind = 4;
                  { jjCheckNAdd(219); }
                  break;
               case 220:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 5)
                     kind = 5;
                  { jjCheckNAdd(220); }
                  break;
               case 221:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(221, 0); }
                  break;
               case 222:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(222, 1); }
                  break;
               case 224:
                  if ((0x3400L & l) != 0L && kind > 22)
                     kind = 22;
                  break;
               case 225:
                  if (curChar == 10 && kind > 22)
                     kind = 22;
                  break;
               case 226:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 225;
                  break;
               case 227:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 89)
                     kind = 89;
                  { jjCheckNAddTwoStates(228, 229); }
                  break;
               case 228:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 89)
                     kind = 89;
                  { jjCheckNAddTwoStates(228, 229); }
                  break;
               case 230:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 89)
                     kind = 89;
                  { jjCheckNAddStates(967, 975); }
                  break;
               case 231:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 89)
                     kind = 89;
                  { jjCheckNAddStates(976, 979); }
                  break;
               case 232:
                  if (curChar != 10)
                     break;
                  if (kind > 89)
                     kind = 89;
                  { jjCheckNAddTwoStates(228, 229); }
                  break;
               case 233:
               case 278:
                  if (curChar == 13)
                     { jjCheckNAdd(232); }
                  break;
               case 234:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 89)
                     kind = 89;
                  { jjCheckNAddTwoStates(228, 229); }
                  break;
               case 235:
               case 237:
               case 240:
               case 244:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(231); }
                  break;
               case 236:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 237;
                  break;
               case 238:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 239;
                  break;
               case 239:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 240;
                  break;
               case 241:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 242;
                  break;
               case 242:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 243;
                  break;
               case 243:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 244;
                  break;
               case 245:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(757, 759); }
                  break;
               case 246:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(757, 759); }
                  break;
               case 248:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(980, 989); }
                  break;
               case 249:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(990, 994); }
                  break;
               case 250:
                  if (curChar == 10)
                     { jjCheckNAddStates(757, 759); }
                  break;
               case 251:
               case 265:
                  if (curChar == 13)
                     { jjCheckNAdd(250); }
                  break;
               case 252:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(757, 759); }
                  break;
               case 253:
               case 255:
               case 258:
               case 262:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(249); }
                  break;
               case 254:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 255;
                  break;
               case 256:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 257;
                  break;
               case 257:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 258;
                  break;
               case 259:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 260;
                  break;
               case 260:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 261;
                  break;
               case 261:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 262;
                  break;
               case 263:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(995, 1004); }
                  break;
               case 264:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1005, 1009); }
                  break;
               case 266:
               case 268:
               case 271:
               case 275:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(264); }
                  break;
               case 267:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 268;
                  break;
               case 269:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 270;
                  break;
               case 270:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 271;
                  break;
               case 272:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 273;
                  break;
               case 273:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 274;
                  break;
               case 274:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 275;
                  break;
               case 276:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 89)
                     kind = 89;
                  { jjCheckNAddStates(1010, 1018); }
                  break;
               case 277:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 89)
                     kind = 89;
                  { jjCheckNAddStates(1019, 1022); }
                  break;
               case 279:
               case 281:
               case 284:
               case 288:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(277); }
                  break;
               case 280:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 281;
                  break;
               case 282:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 283;
                  break;
               case 283:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 284;
                  break;
               case 285:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 286;
                  break;
               case 286:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 287;
                  break;
               case 287:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 288;
                  break;
               case 289:
                  if (curChar != 34)
                     break;
                  if (kind > 25)
                     kind = 25;
                  { jjCheckNAddStates(928, 932); }
                  break;
               case 290:
                  if ((0xfffffffbffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1023, 1025); }
                  break;
               case 291:
                  if (curChar == 34 && kind > 23)
                     kind = 23;
                  break;
               case 293:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(1023, 1025); }
                  break;
               case 294:
                  if (curChar == 10)
                     { jjCheckNAddStates(1023, 1025); }
                  break;
               case 295:
               case 299:
                  if (curChar == 13)
                     { jjCheckNAdd(294); }
                  break;
               case 296:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1023, 1025); }
                  break;
               case 297:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1026, 1035); }
                  break;
               case 298:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1036, 1040); }
                  break;
               case 300:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1023, 1025); }
                  break;
               case 301:
               case 303:
               case 306:
               case 310:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(298); }
                  break;
               case 302:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 303;
                  break;
               case 304:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 305;
                  break;
               case 305:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 306;
                  break;
               case 307:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 308;
                  break;
               case 308:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 309;
                  break;
               case 309:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 310;
                  break;
               case 311:
                  if ((0xfffffffbffffcbffL & l) == 0L)
                     break;
                  if (kind > 25)
                     kind = 25;
                  { jjCheckNAddTwoStates(311, 312); }
                  break;
               case 313:
                  if ((0x3400L & l) == 0L)
                     break;
                  if (kind > 25)
                     kind = 25;
                  { jjCheckNAddTwoStates(311, 312); }
                  break;
               case 314:
                  if (curChar != 10)
                     break;
                  if (kind > 25)
                     kind = 25;
                  { jjCheckNAddTwoStates(311, 312); }
                  break;
               case 315:
               case 319:
                  if (curChar == 13)
                     { jjCheckNAdd(314); }
                  break;
               case 316:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 25)
                     kind = 25;
                  { jjCheckNAddTwoStates(311, 312); }
                  break;
               case 317:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 25)
                     kind = 25;
                  { jjCheckNAddStates(1041, 1049); }
                  break;
               case 318:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 25)
                     kind = 25;
                  { jjCheckNAddStates(1050, 1053); }
                  break;
               case 320:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 25)
                     kind = 25;
                  { jjCheckNAddTwoStates(311, 312); }
                  break;
               case 321:
               case 323:
               case 326:
               case 330:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(318); }
                  break;
               case 322:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 323;
                  break;
               case 324:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 325;
                  break;
               case 325:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 326;
                  break;
               case 327:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 328;
                  break;
               case 328:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 329;
                  break;
               case 329:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 330;
                  break;
               case 331:
                  if (curChar != 39)
                     break;
                  if (kind > 26)
                     kind = 26;
                  { jjCheckNAddStates(923, 927); }
                  break;
               case 332:
                  if ((0xffffff7fffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1054, 1056); }
                  break;
               case 333:
                  if (curChar == 39 && kind > 24)
                     kind = 24;
                  break;
               case 335:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(1054, 1056); }
                  break;
               case 336:
                  if (curChar == 10)
                     { jjCheckNAddStates(1054, 1056); }
                  break;
               case 337:
               case 341:
                  if (curChar == 13)
                     { jjCheckNAdd(336); }
                  break;
               case 338:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1054, 1056); }
                  break;
               case 339:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1057, 1066); }
                  break;
               case 340:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1067, 1071); }
                  break;
               case 342:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1054, 1056); }
                  break;
               case 343:
               case 345:
               case 348:
               case 352:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(340); }
                  break;
               case 344:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 345;
                  break;
               case 346:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 347;
                  break;
               case 347:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 348;
                  break;
               case 349:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 350;
                  break;
               case 350:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 351;
                  break;
               case 351:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 352;
                  break;
               case 353:
                  if ((0xffffff7fffffcbffL & l) == 0L)
                     break;
                  if (kind > 26)
                     kind = 26;
                  { jjCheckNAddTwoStates(353, 354); }
                  break;
               case 355:
                  if ((0x3400L & l) == 0L)
                     break;
                  if (kind > 26)
                     kind = 26;
                  { jjCheckNAddTwoStates(353, 354); }
                  break;
               case 356:
                  if (curChar != 10)
                     break;
                  if (kind > 26)
                     kind = 26;
                  { jjCheckNAddTwoStates(353, 354); }
                  break;
               case 357:
               case 361:
                  if (curChar == 13)
                     { jjCheckNAdd(356); }
                  break;
               case 358:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 26)
                     kind = 26;
                  { jjCheckNAddTwoStates(353, 354); }
                  break;
               case 359:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 26)
                     kind = 26;
                  { jjCheckNAddStates(1072, 1080); }
                  break;
               case 360:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 26)
                     kind = 26;
                  { jjCheckNAddStates(1081, 1084); }
                  break;
               case 362:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 26)
                     kind = 26;
                  { jjCheckNAddTwoStates(353, 354); }
                  break;
               case 363:
               case 365:
               case 368:
               case 372:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(360); }
                  break;
               case 364:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 365;
                  break;
               case 366:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 367;
                  break;
               case 367:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 368;
                  break;
               case 369:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 370;
                  break;
               case 370:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 371;
                  break;
               case 371:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 372;
                  break;
               case 373:
                  if (curChar == 46)
                     { jjCheckNAddStates(897, 922); }
                  break;
               case 374:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 32)
                     kind = 32;
                  { jjCheckNAdd(374); }
                  break;
               case 375:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(375, 377); }
                  break;
               case 378:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(378, 380); }
                  break;
               case 381:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(381, 383); }
                  break;
               case 384:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(384, 387); }
                  break;
               case 388:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(388, 390); }
                  break;
               case 391:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(391, 393); }
                  break;
               case 394:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(394, 398); }
                  break;
               case 399:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(399, 401); }
                  break;
               case 402:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(402, 405); }
                  break;
               case 406:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(406, 410); }
                  break;
               case 411:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(411, 415); }
                  break;
               case 416:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(416, 418); }
                  break;
               case 419:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(419, 421); }
                  break;
               case 422:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(422, 424); }
                  break;
               case 425:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(425, 427); }
                  break;
               case 428:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(428, 430); }
                  break;
               case 431:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(431, 434); }
                  break;
               case 435:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(435, 438); }
                  break;
               case 439:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(439, 443); }
                  break;
               case 444:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(444, 448); }
                  break;
               case 449:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(449, 451); }
                  break;
               case 452:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(452, 453); }
                  break;
               case 454:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(454, 456); }
                  break;
               case 457:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(457, 460); }
                  break;
               case 461:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(461, 462); }
                  break;
               case 462:
                  if (curChar == 37 && kind > 114)
                     kind = 114;
                  break;
               case 463:
                  if (curChar == 45)
                     { jjAddStates(933, 934); }
                  break;
               case 467:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(468, 469); }
                  break;
               case 470:
                  if (curChar == 45)
                     { jjCheckNAddStates(887, 896); }
                  break;
               case 473:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(1085, 1087); }
                  break;
               case 478:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 477;
                  break;
               case 480:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1085, 1087); }
                  break;
               case 481:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1088, 1097); }
                  break;
               case 482:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1098, 1102); }
                  break;
               case 483:
                  if (curChar == 10)
                     { jjCheckNAddStates(1085, 1087); }
                  break;
               case 484:
               case 499:
                  if (curChar == 13)
                     { jjCheckNAdd(483); }
                  break;
               case 485:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1085, 1087); }
                  break;
               case 486:
               case 488:
               case 491:
               case 495:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(482); }
                  break;
               case 487:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 488;
                  break;
               case 489:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 490;
                  break;
               case 490:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 491;
                  break;
               case 492:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 493;
                  break;
               case 493:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 494;
                  break;
               case 494:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 495;
                  break;
               case 497:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1103, 1112); }
                  break;
               case 498:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1113, 1117); }
                  break;
               case 500:
               case 502:
               case 505:
               case 509:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(498); }
                  break;
               case 501:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 502;
                  break;
               case 503:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 504;
                  break;
               case 504:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 505;
                  break;
               case 506:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 507;
                  break;
               case 507:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 508;
                  break;
               case 508:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 509;
                  break;
               case 510:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 471;
                  break;
               case 511:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(472, 496); }
                  break;
               case 512:
                  if (curChar == 36)
                     { jjCheckNAddStates(763, 765); }
                  break;
               case 513:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(763, 765); }
                  break;
               case 514:
                  if (curChar == 42)
                     { jjCheckNAddStates(760, 762); }
                  break;
               case 515:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(760, 762); }
                  break;
               case 516:
                  if (curChar == 36)
                     { jjCheckNAddStates(881, 886); }
                  break;
               case 517:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(938, 940); }
                  break;
               case 518:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(935, 937); }
                  break;
               case 519:
                  if (curChar == 42)
                     { jjCheckNAddStates(875, 880); }
                  break;
               case 520:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(736, 738); }
                  break;
               case 521:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(733, 735); }
                  break;
               case 524:
                  if (curChar == 40)
                     { jjCheckNAddStates(1118, 1123); }
                  break;
               case 525:
                  if (curChar == 34)
                     { jjCheckNAddStates(1124, 1126); }
                  break;
               case 526:
                  if ((0xfffffffbffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1124, 1126); }
                  break;
               case 527:
                  if (curChar == 34)
                     { jjCheckNAddTwoStates(528, 529); }
                  break;
               case 528:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddTwoStates(528, 529); }
                  break;
               case 529:
                  if (curChar == 41 && kind > 116)
                     kind = 116;
                  break;
               case 531:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(1124, 1126); }
                  break;
               case 532:
                  if (curChar == 10)
                     { jjCheckNAddStates(1124, 1126); }
                  break;
               case 533:
               case 537:
                  if (curChar == 13)
                     { jjCheckNAdd(532); }
                  break;
               case 534:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1124, 1126); }
                  break;
               case 535:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1127, 1136); }
                  break;
               case 536:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1137, 1141); }
                  break;
               case 538:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1124, 1126); }
                  break;
               case 539:
               case 541:
               case 544:
               case 548:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(536); }
                  break;
               case 540:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 541;
                  break;
               case 542:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 543;
                  break;
               case 543:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 544;
                  break;
               case 545:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 546;
                  break;
               case 546:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 547;
                  break;
               case 547:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 548;
                  break;
               case 549:
                  if (curChar == 39)
                     { jjCheckNAddStates(1142, 1144); }
                  break;
               case 550:
                  if ((0xffffff7fffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1142, 1144); }
                  break;
               case 551:
                  if (curChar == 39)
                     { jjCheckNAddTwoStates(528, 529); }
                  break;
               case 553:
                  if ((0x3400L & l) != 0L)
                     { jjCheckNAddStates(1142, 1144); }
                  break;
               case 554:
                  if (curChar == 10)
                     { jjCheckNAddStates(1142, 1144); }
                  break;
               case 555:
               case 559:
                  if (curChar == 13)
                     { jjCheckNAdd(554); }
                  break;
               case 556:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1142, 1144); }
                  break;
               case 557:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1145, 1154); }
                  break;
               case 558:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1155, 1159); }
                  break;
               case 560:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1142, 1144); }
                  break;
               case 561:
               case 563:
               case 566:
               case 570:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(558); }
                  break;
               case 562:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 563;
                  break;
               case 564:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 565;
                  break;
               case 565:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 566;
                  break;
               case 567:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 568;
                  break;
               case 568:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 569;
                  break;
               case 569:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 570;
                  break;
               case 571:
                  if ((0xfffffc7a00000000L & l) != 0L)
                     { jjCheckNAddStates(1160, 1163); }
                  break;
               case 573:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1160, 1163); }
                  break;
               case 574:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1164, 1173); }
                  break;
               case 575:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1174, 1178); }
                  break;
               case 576:
                  if (curChar == 10)
                     { jjCheckNAddStates(1160, 1163); }
                  break;
               case 577:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 576;
                  break;
               case 578:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1160, 1163); }
                  break;
               case 579:
               case 581:
               case 584:
               case 588:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(575); }
                  break;
               case 580:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 581;
                  break;
               case 582:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 583;
                  break;
               case 583:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 584;
                  break;
               case 585:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 586;
                  break;
               case 586:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 587;
                  break;
               case 587:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 588;
                  break;
               case 589:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1179, 1185); }
                  break;
               case 592:
                  if (curChar == 43)
                     { jjAddStates(1186, 1187); }
                  break;
               case 593:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1188, 1198); }
                  break;
               case 594:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(595); }
                  break;
               case 595:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 596;
                  break;
               case 596:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 122)
                     kind = 122;
                  { jjCheckNAddStates(1199, 1203); }
                  break;
               case 597:
                  if ((0x3ff000000000000L & l) != 0L && kind > 122)
                     kind = 122;
                  break;
               case 598:
               case 600:
               case 603:
               case 607:
               case 621:
               case 624:
               case 626:
               case 627:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(597); }
                  break;
               case 599:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 600;
                  break;
               case 601:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 602;
                  break;
               case 602:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 603;
                  break;
               case 604:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 605;
                  break;
               case 605:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 606;
                  break;
               case 606:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 607;
                  break;
               case 608:
               case 610:
               case 613:
               case 617:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(594); }
                  break;
               case 609:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 610;
                  break;
               case 611:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 612;
                  break;
               case 612:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 613;
                  break;
               case 614:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 615;
                  break;
               case 615:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 616;
                  break;
               case 616:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 617;
                  break;
               case 618:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 619;
                  break;
               case 619:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 620;
                  break;
               case 620:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 621;
                  break;
               case 622:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 623;
                  break;
               case 623:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 624;
                  break;
               case 625:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 626;
                  break;
               case 628:
                  if ((0x83ff000000000000L & l) == 0L)
                     break;
                  if (kind > 122)
                     kind = 122;
                  { jjCheckNAddStates(1204, 1208); }
                  break;
               case 629:
                  if ((0x83ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 630;
                  break;
               case 630:
                  if ((0x83ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 631;
                  break;
               case 631:
                  if ((0x83ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 632;
                  break;
               case 632:
               case 636:
               case 638:
               case 639:
                  if ((0x83ff000000000000L & l) != 0L)
                     { jjCheckNAdd(633); }
                  break;
               case 633:
                  if ((0x83ff000000000000L & l) != 0L && kind > 122)
                     kind = 122;
                  break;
               case 634:
                  if ((0x83ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 635;
                  break;
               case 635:
                  if ((0x83ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 636;
                  break;
               case 637:
                  if ((0x83ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 638;
                  break;
               case 640:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 32)
                     kind = 32;
                  { jjCheckNAddStates(766, 868); }
                  break;
               case 641:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 32)
                     kind = 32;
                  { jjCheckNAdd(641); }
                  break;
               case 642:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(642, 643); }
                  break;
               case 643:
                  if (curChar == 46)
                     { jjCheckNAdd(374); }
                  break;
               case 644:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(644, 377); }
                  break;
               case 645:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(645, 646); }
                  break;
               case 646:
                  if (curChar == 46)
                     { jjCheckNAdd(375); }
                  break;
               case 647:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(647, 380); }
                  break;
               case 648:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(648, 649); }
                  break;
               case 649:
                  if (curChar == 46)
                     { jjCheckNAdd(378); }
                  break;
               case 650:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(650, 383); }
                  break;
               case 651:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(651, 652); }
                  break;
               case 652:
                  if (curChar == 46)
                     { jjCheckNAdd(381); }
                  break;
               case 653:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(653, 387); }
                  break;
               case 654:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(654, 655); }
                  break;
               case 655:
                  if (curChar == 46)
                     { jjCheckNAdd(384); }
                  break;
               case 656:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(656, 390); }
                  break;
               case 657:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(657, 658); }
                  break;
               case 658:
                  if (curChar == 46)
                     { jjCheckNAdd(388); }
                  break;
               case 659:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(659, 393); }
                  break;
               case 660:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(660, 661); }
                  break;
               case 661:
                  if (curChar == 46)
                     { jjCheckNAdd(391); }
                  break;
               case 662:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(662, 398); }
                  break;
               case 663:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(663, 664); }
                  break;
               case 664:
                  if (curChar == 46)
                     { jjCheckNAdd(394); }
                  break;
               case 665:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(665, 401); }
                  break;
               case 666:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(666, 667); }
                  break;
               case 667:
                  if (curChar == 46)
                     { jjCheckNAdd(399); }
                  break;
               case 668:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(668, 405); }
                  break;
               case 669:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(669, 670); }
                  break;
               case 670:
                  if (curChar == 46)
                     { jjCheckNAdd(402); }
                  break;
               case 671:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(671, 410); }
                  break;
               case 672:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(672, 673); }
                  break;
               case 673:
                  if (curChar == 46)
                     { jjCheckNAdd(406); }
                  break;
               case 674:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(674, 415); }
                  break;
               case 675:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(675, 676); }
                  break;
               case 676:
                  if (curChar == 46)
                     { jjCheckNAdd(411); }
                  break;
               case 677:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(677, 418); }
                  break;
               case 678:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(678, 679); }
                  break;
               case 679:
                  if (curChar == 46)
                     { jjCheckNAdd(416); }
                  break;
               case 680:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(680, 421); }
                  break;
               case 681:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(681, 682); }
                  break;
               case 682:
                  if (curChar == 46)
                     { jjCheckNAdd(419); }
                  break;
               case 683:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(683, 424); }
                  break;
               case 684:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(684, 685); }
                  break;
               case 685:
                  if (curChar == 46)
                     { jjCheckNAdd(422); }
                  break;
               case 686:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(686, 427); }
                  break;
               case 687:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(687, 688); }
                  break;
               case 688:
                  if (curChar == 46)
                     { jjCheckNAdd(425); }
                  break;
               case 689:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(689, 430); }
                  break;
               case 690:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(690, 691); }
                  break;
               case 691:
                  if (curChar == 46)
                     { jjCheckNAdd(428); }
                  break;
               case 692:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(692, 434); }
                  break;
               case 693:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(693, 694); }
                  break;
               case 694:
                  if (curChar == 46)
                     { jjCheckNAdd(431); }
                  break;
               case 695:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(695, 438); }
                  break;
               case 696:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(696, 697); }
                  break;
               case 697:
                  if (curChar == 46)
                     { jjCheckNAdd(435); }
                  break;
               case 698:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(698, 443); }
                  break;
               case 699:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(699, 700); }
                  break;
               case 700:
                  if (curChar == 46)
                     { jjCheckNAdd(439); }
                  break;
               case 701:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(701, 448); }
                  break;
               case 702:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(702, 703); }
                  break;
               case 703:
                  if (curChar == 46)
                     { jjCheckNAdd(444); }
                  break;
               case 704:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(704, 451); }
                  break;
               case 705:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(705, 706); }
                  break;
               case 706:
                  if (curChar == 46)
                     { jjCheckNAdd(449); }
                  break;
               case 707:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(707, 453); }
                  break;
               case 708:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(708, 709); }
                  break;
               case 709:
                  if (curChar == 46)
                     { jjCheckNAdd(452); }
                  break;
               case 710:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(710, 456); }
                  break;
               case 711:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(711, 712); }
                  break;
               case 712:
                  if (curChar == 46)
                     { jjCheckNAdd(454); }
                  break;
               case 713:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(713, 460); }
                  break;
               case 714:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(714, 715); }
                  break;
               case 715:
                  if (curChar == 46)
                     { jjCheckNAdd(457); }
                  break;
               case 716:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(716, 462); }
                  break;
               case 717:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(717, 718); }
                  break;
               case 718:
                  if (curChar == 46)
                     { jjCheckNAdd(461); }
                  break;
               case 721:
               case 766:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(722, 751); }
                  break;
               case 723:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(1209, 1211); }
                  break;
               case 733:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 732;
                  break;
               case 735:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1209, 1211); }
                  break;
               case 736:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1212, 1221); }
                  break;
               case 737:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1222, 1226); }
                  break;
               case 738:
                  if (curChar == 10)
                     { jjCheckNAddStates(1209, 1211); }
                  break;
               case 739:
               case 754:
                  if (curChar == 13)
                     { jjCheckNAdd(738); }
                  break;
               case 740:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1209, 1211); }
                  break;
               case 741:
               case 743:
               case 746:
               case 750:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(737); }
                  break;
               case 742:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 743;
                  break;
               case 744:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 745;
                  break;
               case 745:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 746;
                  break;
               case 747:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 748;
                  break;
               case 748:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 749;
                  break;
               case 749:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 750;
                  break;
               case 752:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1227, 1236); }
                  break;
               case 753:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1237, 1241); }
                  break;
               case 755:
               case 757:
               case 760:
               case 764:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(753); }
                  break;
               case 756:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 757;
                  break;
               case 758:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 759;
                  break;
               case 759:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 760;
                  break;
               case 761:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 762;
                  break;
               case 762:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 763;
                  break;
               case 763:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 764;
                  break;
               case 765:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 721;
                  break;
               case 767:
                  if (curChar == 36)
                     { jjCheckNAddStates(1242, 1244); }
                  break;
               case 768:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1242, 1244); }
                  break;
               case 769:
                  if (curChar == 42)
                     { jjCheckNAddStates(1245, 1247); }
                  break;
               case 770:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1245, 1247); }
                  break;
               case 779:
                  if (curChar == 45)
                     { jjCheckNAddStates(745, 750); }
                  break;
               case 780:
               case 824:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(781, 809); }
                  break;
               case 782:
                  if ((0x3ff200000000000L & l) != 0L)
                     { jjCheckNAddStates(1248, 1250); }
                  break;
               case 791:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 790;
                  break;
               case 793:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     { jjCheckNAddStates(1248, 1250); }
                  break;
               case 794:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1251, 1260); }
                  break;
               case 795:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1261, 1265); }
                  break;
               case 796:
                  if (curChar == 10)
                     { jjCheckNAddStates(1248, 1250); }
                  break;
               case 797:
               case 812:
                  if (curChar == 13)
                     { jjCheckNAdd(796); }
                  break;
               case 798:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1248, 1250); }
                  break;
               case 799:
               case 801:
               case 804:
               case 808:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(795); }
                  break;
               case 800:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 801;
                  break;
               case 802:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 803;
                  break;
               case 803:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 804;
                  break;
               case 805:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 806;
                  break;
               case 806:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 807;
                  break;
               case 807:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 808;
                  break;
               case 810:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1266, 1275); }
                  break;
               case 811:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(1276, 1280); }
                  break;
               case 813:
               case 815:
               case 818:
               case 822:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(811); }
                  break;
               case 814:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 815;
                  break;
               case 816:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 817;
                  break;
               case 817:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 818;
                  break;
               case 819:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 820;
                  break;
               case 820:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 821;
                  break;
               case 821:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 822;
                  break;
               case 823:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 780;
                  break;
               case 825:
                  if (curChar == 36)
                     { jjCheckNAddStates(1281, 1283); }
                  break;
               case 826:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1281, 1283); }
                  break;
               case 827:
                  if (curChar == 42)
                     { jjCheckNAddStates(1284, 1286); }
                  break;
               case 828:
                  if ((0x100003600L & l) != 0L)
                     { jjCheckNAddStates(1284, 1286); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 836:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(757, 759); }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(227, 276); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 89)
                        kind = 89;
                     { jjCheckNAddTwoStates(228, 229); }
                  }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(245, 263); }
                  break;
               case 720:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 80)
                        kind = 80;
                     { jjCheckNAddTwoStates(180, 181); }
                  }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(182, 199); }
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 834;
                  else if ((0x80000000800L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 777;
                  break;
               case 471:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(757, 759); }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(227, 276); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(1085, 1087); }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(480, 497); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 89)
                        kind = 89;
                     { jjCheckNAddTwoStates(228, 229); }
                  }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(245, 263); }
                  break;
               case 138:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(757, 759); }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(227, 230); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 89)
                        kind = 89;
                     { jjCheckNAddTwoStates(228, 229); }
                  }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(245, 248); }
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 175;
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 160;
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 150;
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 137;
                  break;
               case 464:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(757, 759); }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(227, 276); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(1085, 1087); }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(480, 497); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 89)
                        kind = 89;
                     { jjCheckNAddTwoStates(228, 229); }
                  }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(245, 263); }
                  break;
               case 840:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 80)
                        kind = 80;
                     { jjCheckNAddTwoStates(180, 181); }
                  }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(182, 183); }
                  break;
               case 2:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 89)
                        kind = 89;
                     { jjCheckNAddStates(1287, 1291); }
                  }
                  else if (curChar == 64)
                     { jjAddStates(1292, 1295); }
                  else if (curChar == 92)
                     { jjCheckNAddStates(1296, 1301); }
                  else if (curChar == 123)
                  {
                     if (kind > 33)
                        kind = 33;
                  }
                  if ((0x20000000200000L & l) != 0L)
                     { jjAddStates(1302, 1303); }
                  else if ((0x400000004000L & l) != 0L)
                     { jjAddStates(1304, 1307); }
                  else if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 127;
                  else if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 35;
                  else if (curChar == 64)
                  {
                     if (kind > 80)
                        kind = 80;
                     { jjAddStates(1308, 1313); }
                  }
                  break;
               case 838:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(757, 759); }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(227, 276); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 89)
                        kind = 89;
                     { jjCheckNAddTwoStates(228, 229); }
                  }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(245, 263); }
                  break;
               case 839:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(757, 759); }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(227, 230); }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 89)
                        kind = 89;
                     { jjCheckNAddTwoStates(228, 229); }
                  }
                  else if (curChar == 92)
                     { jjCheckNAddTwoStates(245, 248); }
                  break;
               case 0:
                  if (curChar == 123 && kind > 33)
                     kind = 33;
                  break;
               case 3:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 47)
                     kind = 47;
                  { jjCheckNAddTwoStates(3, 4); }
                  break;
               case 4:
                  if (curChar == 92)
                     { jjAddStates(702, 703); }
                  break;
               case 5:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 47)
                     kind = 47;
                  { jjCheckNAddTwoStates(3, 4); }
                  break;
               case 6:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 47)
                     kind = 47;
                  { jjCheckNAddStates(208, 216); }
                  break;
               case 7:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 47)
                     kind = 47;
                  { jjCheckNAddStates(217, 220); }
                  break;
               case 11:
               case 13:
               case 16:
               case 20:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(7); }
                  break;
               case 12:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 13;
                  break;
               case 14:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 15;
                  break;
               case 15:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 16;
                  break;
               case 17:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 18;
                  break;
               case 18:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 19;
                  break;
               case 19:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 20;
                  break;
               case 23:
                  if ((0x10000000100000L & l) != 0L && kind > 81)
                     kind = 81;
                  break;
               case 24:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 23;
                  break;
               case 25:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 24;
                  break;
               case 26:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 25;
                  break;
               case 27:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 26;
                  break;
               case 28:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 27;
                  break;
               case 29:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 28;
                  break;
               case 30:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 29;
                  break;
               case 31:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 30;
                  break;
               case 33:
               case 474:
                  if ((0x800000008L & l) != 0L)
                     { jjCheckNAdd(32); }
                  break;
               case 34:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 33;
                  break;
               case 35:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 34;
                  break;
               case 36:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 35;
                  break;
               case 37:
                  if ((0x1000000010L & l) != 0L)
                     { jjAddStates(221, 222); }
                  break;
               case 42:
               case 43:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(230, 234); }
                  break;
               case 46:
               case 47:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(241, 245); }
                  break;
               case 50:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(51, 52); }
                  break;
               case 51:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(241, 245); }
                  break;
               case 52:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(246, 256); }
                  break;
               case 53:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(257, 262); }
                  break;
               case 57:
               case 59:
               case 62:
               case 66:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(53); }
                  break;
               case 58:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 59;
                  break;
               case 60:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 61;
                  break;
               case 61:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 62;
                  break;
               case 63:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 64;
                  break;
               case 64:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 65;
                  break;
               case 65:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 66;
                  break;
               case 67:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(51, 68); }
                  break;
               case 68:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(263, 273); }
                  break;
               case 69:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(274, 279); }
                  break;
               case 71:
               case 73:
               case 76:
               case 80:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(69); }
                  break;
               case 72:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 73;
                  break;
               case 74:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 75;
                  break;
               case 75:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 76;
                  break;
               case 77:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 78;
                  break;
               case 78:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 79;
                  break;
               case 79:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 80;
                  break;
               case 87:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(88, 89); }
                  break;
               case 88:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(230, 234); }
                  break;
               case 89:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(286, 296); }
                  break;
               case 90:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(297, 302); }
                  break;
               case 94:
               case 96:
               case 99:
               case 103:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(90); }
                  break;
               case 95:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 96;
                  break;
               case 97:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 98;
                  break;
               case 98:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 99;
                  break;
               case 100:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 101;
                  break;
               case 101:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 102;
                  break;
               case 102:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 103;
                  break;
               case 104:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(88, 105); }
                  break;
               case 105:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(303, 313); }
                  break;
               case 106:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(314, 319); }
                  break;
               case 108:
               case 110:
               case 113:
               case 117:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(106); }
                  break;
               case 109:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 110;
                  break;
               case 111:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 112;
                  break;
               case 112:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 113;
                  break;
               case 114:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 115;
                  break;
               case 115:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 116;
                  break;
               case 116:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 117;
                  break;
               case 124:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 37;
                  break;
               case 125:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 124;
                  break;
               case 126:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 125;
                  break;
               case 127:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 126;
                  break;
               case 128:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 127;
                  break;
               case 129:
                  if ((0x400000004000L & l) != 0L)
                     { jjAddStates(1304, 1307); }
                  break;
               case 131:
               case 139:
                  if ((0x1000000010L & l) != 0L)
                     { jjCheckNAdd(130); }
                  break;
               case 132:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 131;
                  break;
               case 133:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 132;
                  break;
               case 134:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 133;
                  break;
               case 135:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 134;
                  break;
               case 137:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 136;
                  break;
               case 140:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 139;
                  break;
               case 141:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 140;
                  break;
               case 142:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 141;
                  break;
               case 143:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 142;
                  break;
               case 145:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 144;
                  break;
               case 146:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 145;
                  break;
               case 147:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 146;
                  break;
               case 148:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 147;
                  break;
               case 150:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 149;
                  break;
               case 151:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 150;
                  break;
               case 152:
               case 162:
                  if ((0x2000000020L & l) != 0L)
                     { jjCheckNAdd(130); }
                  break;
               case 153:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 152;
                  break;
               case 154:
                  if ((0x200000002000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 153;
                  break;
               case 155:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 154;
                  break;
               case 157:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 156;
                  break;
               case 158:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 157;
                  break;
               case 160:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 159;
                  break;
               case 161:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 160;
                  break;
               case 163:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 162;
                  break;
               case 164:
                  if ((0x200000002000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 163;
                  break;
               case 165:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 164;
                  break;
               case 167:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 166;
                  break;
               case 168:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 167;
                  break;
               case 170:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 169;
                  break;
               case 171:
                  if ((0x8000000080000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 170;
                  break;
               case 172:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 171;
                  break;
               case 173:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 172;
                  break;
               case 175:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 174;
                  break;
               case 176:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 175;
                  break;
               case 177:
                  if (curChar != 64)
                     break;
                  if (kind > 80)
                     kind = 80;
                  { jjAddStates(1308, 1313); }
                  break;
               case 179:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  { jjCheckNAddTwoStates(180, 181); }
                  break;
               case 180:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  { jjCheckNAddTwoStates(180, 181); }
                  break;
               case 181:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(182, 183); }
                  break;
               case 182:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  { jjCheckNAddTwoStates(180, 181); }
                  break;
               case 183:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  { jjCheckNAddStates(941, 949); }
                  break;
               case 184:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  { jjCheckNAddStates(950, 953); }
                  break;
               case 188:
               case 190:
               case 193:
               case 197:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(184); }
                  break;
               case 189:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 190;
                  break;
               case 191:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 192;
                  break;
               case 192:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 193;
                  break;
               case 194:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 195;
                  break;
               case 195:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 196;
                  break;
               case 196:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 197;
                  break;
               case 198:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(182, 199); }
                  break;
               case 199:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  { jjCheckNAddStates(954, 962); }
                  break;
               case 200:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  { jjCheckNAddStates(963, 966); }
                  break;
               case 202:
               case 204:
               case 207:
               case 211:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(200); }
                  break;
               case 203:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 204;
                  break;
               case 205:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 206;
                  break;
               case 206:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 207;
                  break;
               case 208:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 209;
                  break;
               case 209:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 210;
                  break;
               case 210:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 211;
                  break;
               case 223:
                  if (curChar == 92)
                     { jjCheckNAddStates(1296, 1301); }
                  break;
               case 227:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 89)
                     kind = 89;
                  { jjCheckNAddTwoStates(228, 229); }
                  break;
               case 228:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 89)
                     kind = 89;
                  { jjCheckNAddTwoStates(228, 229); }
                  break;
               case 229:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(227, 230); }
                  break;
               case 230:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 89)
                     kind = 89;
                  { jjCheckNAddStates(967, 975); }
                  break;
               case 231:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 89)
                     kind = 89;
                  { jjCheckNAddStates(976, 979); }
                  break;
               case 235:
               case 237:
               case 240:
               case 244:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(231); }
                  break;
               case 236:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 237;
                  break;
               case 238:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 239;
                  break;
               case 239:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 240;
                  break;
               case 241:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 242;
                  break;
               case 242:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 243;
                  break;
               case 243:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 244;
                  break;
               case 245:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(757, 759); }
                  break;
               case 246:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(757, 759); }
                  break;
               case 247:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(245, 248); }
                  break;
               case 248:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(980, 989); }
                  break;
               case 249:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(990, 994); }
                  break;
               case 253:
               case 255:
               case 258:
               case 262:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(249); }
                  break;
               case 254:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 255;
                  break;
               case 256:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 257;
                  break;
               case 257:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 258;
                  break;
               case 259:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 260;
                  break;
               case 260:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 261;
                  break;
               case 261:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 262;
                  break;
               case 263:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(995, 1004); }
                  break;
               case 264:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1005, 1009); }
                  break;
               case 266:
               case 268:
               case 271:
               case 275:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(264); }
                  break;
               case 267:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 268;
                  break;
               case 269:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 270;
                  break;
               case 270:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 271;
                  break;
               case 272:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 273;
                  break;
               case 273:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 274;
                  break;
               case 274:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 275;
                  break;
               case 276:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 89)
                     kind = 89;
                  { jjCheckNAddStates(1010, 1018); }
                  break;
               case 277:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 89)
                     kind = 89;
                  { jjCheckNAddStates(1019, 1022); }
                  break;
               case 279:
               case 281:
               case 284:
               case 288:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(277); }
                  break;
               case 280:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 281;
                  break;
               case 282:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 283;
                  break;
               case 283:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 284;
                  break;
               case 285:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 286;
                  break;
               case 286:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 287;
                  break;
               case 287:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 288;
                  break;
               case 290:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(1023, 1025); }
                  break;
               case 292:
                  if (curChar == 92)
                     { jjAddStates(1314, 1317); }
                  break;
               case 296:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(1023, 1025); }
                  break;
               case 297:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1026, 1035); }
                  break;
               case 298:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1036, 1040); }
                  break;
               case 301:
               case 303:
               case 306:
               case 310:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(298); }
                  break;
               case 302:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 303;
                  break;
               case 304:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 305;
                  break;
               case 305:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 306;
                  break;
               case 307:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 308;
                  break;
               case 308:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 309;
                  break;
               case 309:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 310;
                  break;
               case 311:
                  if ((0xffffffffefffffffL & l) == 0L)
                     break;
                  if (kind > 25)
                     kind = 25;
                  { jjCheckNAddTwoStates(311, 312); }
                  break;
               case 312:
                  if (curChar == 92)
                     { jjAddStates(1318, 1321); }
                  break;
               case 316:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 25)
                     kind = 25;
                  { jjCheckNAddTwoStates(311, 312); }
                  break;
               case 317:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 25)
                     kind = 25;
                  { jjCheckNAddStates(1041, 1049); }
                  break;
               case 318:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 25)
                     kind = 25;
                  { jjCheckNAddStates(1050, 1053); }
                  break;
               case 321:
               case 323:
               case 326:
               case 330:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(318); }
                  break;
               case 322:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 323;
                  break;
               case 324:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 325;
                  break;
               case 325:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 326;
                  break;
               case 327:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 328;
                  break;
               case 328:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 329;
                  break;
               case 329:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 330;
                  break;
               case 332:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(1054, 1056); }
                  break;
               case 334:
                  if (curChar == 92)
                     { jjAddStates(1322, 1325); }
                  break;
               case 338:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(1054, 1056); }
                  break;
               case 339:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1057, 1066); }
                  break;
               case 340:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1067, 1071); }
                  break;
               case 343:
               case 345:
               case 348:
               case 352:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(340); }
                  break;
               case 344:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 345;
                  break;
               case 346:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 347;
                  break;
               case 347:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 348;
                  break;
               case 349:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 350;
                  break;
               case 350:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 351;
                  break;
               case 351:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 352;
                  break;
               case 353:
                  if ((0xffffffffefffffffL & l) == 0L)
                     break;
                  if (kind > 26)
                     kind = 26;
                  { jjCheckNAddTwoStates(353, 354); }
                  break;
               case 354:
                  if (curChar == 92)
                     { jjAddStates(1326, 1329); }
                  break;
               case 358:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 26)
                     kind = 26;
                  { jjCheckNAddTwoStates(353, 354); }
                  break;
               case 359:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 26)
                     kind = 26;
                  { jjCheckNAddStates(1072, 1080); }
                  break;
               case 360:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 26)
                     kind = 26;
                  { jjCheckNAddStates(1081, 1084); }
                  break;
               case 363:
               case 365:
               case 368:
               case 372:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(360); }
                  break;
               case 364:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 365;
                  break;
               case 366:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 367;
                  break;
               case 367:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 368;
                  break;
               case 369:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 370;
                  break;
               case 370:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 371;
                  break;
               case 371:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 372;
                  break;
               case 376:
                  if ((0x200000002000L & l) != 0L && kind > 90)
                     kind = 90;
                  break;
               case 377:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 376;
                  break;
               case 379:
                  if ((0x100000001000000L & l) != 0L && kind > 91)
                     kind = 91;
                  break;
               case 380:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 379;
                  break;
               case 382:
                  if ((0x100000001000000L & l) != 0L && kind > 92)
                     kind = 92;
                  break;
               case 383:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 382;
                  break;
               case 385:
                  if ((0x200000002000L & l) != 0L && kind > 93)
                     kind = 93;
                  break;
               case 386:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 385;
                  break;
               case 387:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 386;
                  break;
               case 389:
                  if ((0x80000000800000L & l) != 0L && kind > 94)
                     kind = 94;
                  break;
               case 390:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 389;
                  break;
               case 392:
                  if ((0x10000000100L & l) != 0L && kind > 95)
                     kind = 95;
                  break;
               case 393:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 392;
                  break;
               case 395:
                  if ((0x400000004000L & l) != 0L && kind > 96)
                     kind = 96;
                  break;
               case 396:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 395;
                  break;
               case 397:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 396;
                  break;
               case 398:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 397;
                  break;
               case 400:
                  if ((0x10000000100L & l) != 0L && kind > 97)
                     kind = 97;
                  break;
               case 401:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 400;
                  break;
               case 403:
                  if ((0x20000000200L & l) != 0L && kind > 98)
                     kind = 98;
                  break;
               case 404:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 403;
                  break;
               case 405:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 404;
                  break;
               case 407:
                  if ((0x200000002000L & l) != 0L && kind > 99)
                     kind = 99;
                  break;
               case 408:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 407;
                  break;
               case 409:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 408;
                  break;
               case 410:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 409;
                  break;
               case 412:
                  if ((0x100000001000000L & l) != 0L && kind > 100)
                     kind = 100;
                  break;
               case 413:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 412;
                  break;
               case 414:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 413;
                  break;
               case 415:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 414;
                  break;
               case 417:
                  if ((0x200000002000L & l) != 0L && kind > 101)
                     kind = 101;
                  break;
               case 418:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 417;
                  break;
               case 420:
                  if ((0x200000002000L & l) != 0L && kind > 102)
                     kind = 102;
                  break;
               case 421:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 420;
                  break;
               case 423:
                  if ((0x400000004000L & l) != 0L && kind > 103)
                     kind = 103;
                  break;
               case 424:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 423;
                  break;
               case 426:
                  if ((0x10000000100000L & l) != 0L && kind > 104)
                     kind = 104;
                  break;
               case 427:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 426;
                  break;
               case 429:
                  if ((0x800000008L & l) != 0L && kind > 105)
                     kind = 105;
                  break;
               case 430:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 429;
                  break;
               case 432:
                  if ((0x8000000080L & l) != 0L && kind > 106)
                     kind = 106;
                  break;
               case 433:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 432;
                  break;
               case 434:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 433;
                  break;
               case 436:
                  if ((0x1000000010L & l) != 0L && kind > 107)
                     kind = 107;
                  break;
               case 437:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 436;
                  break;
               case 438:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 437;
                  break;
               case 440:
                  if ((0x1000000010L & l) != 0L && kind > 108)
                     kind = 108;
                  break;
               case 441:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 440;
                  break;
               case 442:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 441;
                  break;
               case 443:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 442;
                  break;
               case 445:
                  if ((0x400000004000L & l) != 0L && kind > 109)
                     kind = 109;
                  break;
               case 446:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 445;
                  break;
               case 447:
                  if ((0x20000000200000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 446;
                  break;
               case 448:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 447;
                  break;
               case 450:
                  if ((0x8000000080000L & l) != 0L && kind > 110)
                     kind = 110;
                  break;
               case 451:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 450;
                  break;
               case 453:
                  if ((0x8000000080000L & l) != 0L && kind > 111)
                     kind = 111;
                  break;
               case 455:
                  if ((0x400000004000000L & l) != 0L && kind > 112)
                     kind = 112;
                  break;
               case 456:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 455;
                  break;
               case 458:
                  if ((0x400000004000000L & l) != 0L && kind > 113)
                     kind = 113;
                  break;
               case 459:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 458;
                  break;
               case 460:
                  if ((0x80000000800L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 459;
                  break;
               case 465:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 89)
                     kind = 89;
                  { jjCheckNAddTwoStates(228, 229); }
                  break;
               case 466:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(227, 276); }
                  break;
               case 468:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(757, 759); }
                  break;
               case 469:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(245, 263); }
                  break;
               case 472:
               case 473:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(1085, 1087); }
                  break;
               case 475:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 474;
                  break;
               case 476:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 475;
                  break;
               case 477:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 476;
                  break;
               case 479:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(480, 481); }
                  break;
               case 480:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(1085, 1087); }
                  break;
               case 481:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1088, 1097); }
                  break;
               case 482:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1098, 1102); }
                  break;
               case 486:
               case 488:
               case 491:
               case 495:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(482); }
                  break;
               case 487:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 488;
                  break;
               case 489:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 490;
                  break;
               case 490:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 491;
                  break;
               case 492:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 493;
                  break;
               case 493:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 494;
                  break;
               case 494:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 495;
                  break;
               case 496:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(480, 497); }
                  break;
               case 497:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1103, 1112); }
                  break;
               case 498:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1113, 1117); }
                  break;
               case 500:
               case 502:
               case 505:
               case 509:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(498); }
                  break;
               case 501:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 502;
                  break;
               case 503:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 504;
                  break;
               case 504:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 505;
                  break;
               case 506:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 507;
                  break;
               case 507:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 508;
                  break;
               case 508:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 509;
                  break;
               case 522:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 89)
                     kind = 89;
                  { jjCheckNAddStates(1287, 1291); }
                  break;
               case 523:
                  if ((0x20000000200000L & l) != 0L)
                     { jjAddStates(1302, 1303); }
                  break;
               case 526:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(1124, 1126); }
                  break;
               case 530:
                  if (curChar == 92)
                     { jjAddStates(1330, 1333); }
                  break;
               case 534:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(1124, 1126); }
                  break;
               case 535:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1127, 1136); }
                  break;
               case 536:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1137, 1141); }
                  break;
               case 539:
               case 541:
               case 544:
               case 548:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(536); }
                  break;
               case 540:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 541;
                  break;
               case 542:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 543;
                  break;
               case 543:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 544;
                  break;
               case 545:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 546;
                  break;
               case 546:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 547;
                  break;
               case 547:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 548;
                  break;
               case 550:
                  if ((0xffffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(1142, 1144); }
                  break;
               case 552:
                  if (curChar == 92)
                     { jjAddStates(1334, 1337); }
                  break;
               case 556:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(1142, 1144); }
                  break;
               case 557:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1145, 1154); }
                  break;
               case 558:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1155, 1159); }
                  break;
               case 561:
               case 563:
               case 566:
               case 570:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(558); }
                  break;
               case 562:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 563;
                  break;
               case 564:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 565;
                  break;
               case 565:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 566;
                  break;
               case 567:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 568;
                  break;
               case 568:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 569;
                  break;
               case 569:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 570;
                  break;
               case 571:
                  if ((0x7fffffffefffffffL & l) != 0L)
                     { jjCheckNAddStates(1160, 1163); }
                  break;
               case 572:
                  if (curChar == 92)
                     { jjAddStates(1338, 1339); }
                  break;
               case 573:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(1160, 1163); }
                  break;
               case 574:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1164, 1173); }
                  break;
               case 575:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1174, 1178); }
                  break;
               case 579:
               case 581:
               case 584:
               case 588:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(575); }
                  break;
               case 580:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 581;
                  break;
               case 582:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 583;
                  break;
               case 583:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 584;
                  break;
               case 585:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 586;
                  break;
               case 586:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 587;
                  break;
               case 587:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 588;
                  break;
               case 590:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 524;
                  break;
               case 591:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 590;
                  break;
               case 593:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1188, 1198); }
                  break;
               case 594:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(595); }
                  break;
               case 596:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 122)
                     kind = 122;
                  { jjCheckNAddStates(1199, 1203); }
                  break;
               case 597:
               case 633:
                  if ((0x7e0000007eL & l) != 0L && kind > 122)
                     kind = 122;
                  break;
               case 598:
               case 600:
               case 603:
               case 607:
               case 621:
               case 624:
               case 626:
               case 627:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(597); }
                  break;
               case 599:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 600;
                  break;
               case 601:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 602;
                  break;
               case 602:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 603;
                  break;
               case 604:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 605;
                  break;
               case 605:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 606;
                  break;
               case 606:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 607;
                  break;
               case 608:
               case 610:
               case 613:
               case 617:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(594); }
                  break;
               case 609:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 610;
                  break;
               case 611:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 612;
                  break;
               case 612:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 613;
                  break;
               case 614:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 615;
                  break;
               case 615:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 616;
                  break;
               case 616:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 617;
                  break;
               case 618:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 619;
                  break;
               case 619:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 620;
                  break;
               case 620:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 621;
                  break;
               case 622:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 623;
                  break;
               case 623:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 624;
                  break;
               case 625:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 626;
                  break;
               case 628:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 122)
                     kind = 122;
                  { jjCheckNAddStates(1204, 1208); }
                  break;
               case 629:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 630;
                  break;
               case 630:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 631;
                  break;
               case 631:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 632;
                  break;
               case 632:
               case 636:
               case 638:
               case 639:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(633); }
                  break;
               case 634:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 635;
                  break;
               case 635:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 636;
                  break;
               case 637:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 638;
                  break;
               case 719:
                  if (curChar == 64)
                     { jjAddStates(1292, 1295); }
                  break;
               case 722:
               case 723:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(1209, 1211); }
                  break;
               case 724:
                  if ((0x8000000080000L & l) != 0L && kind > 77)
                     kind = 77;
                  break;
               case 725:
               case 771:
                  if ((0x2000000020L & l) != 0L)
                     { jjCheckNAdd(724); }
                  break;
               case 726:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 725;
                  break;
               case 727:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 726;
                  break;
               case 728:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 727;
                  break;
               case 729:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 728;
                  break;
               case 730:
                  if ((0x200000002000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 729;
                  break;
               case 731:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 730;
                  break;
               case 732:
                  if ((0x80000000800L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 731;
                  break;
               case 734:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(735, 736); }
                  break;
               case 735:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(1209, 1211); }
                  break;
               case 736:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1212, 1221); }
                  break;
               case 737:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1222, 1226); }
                  break;
               case 741:
               case 743:
               case 746:
               case 750:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(737); }
                  break;
               case 742:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 743;
                  break;
               case 744:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 745;
                  break;
               case 745:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 746;
                  break;
               case 747:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 748;
                  break;
               case 748:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 749;
                  break;
               case 749:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 750;
                  break;
               case 751:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(735, 752); }
                  break;
               case 752:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1227, 1236); }
                  break;
               case 753:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1237, 1241); }
                  break;
               case 755:
               case 757:
               case 760:
               case 764:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(753); }
                  break;
               case 756:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 757;
                  break;
               case 758:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 759;
                  break;
               case 759:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 760;
                  break;
               case 761:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 762;
                  break;
               case 762:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 763;
                  break;
               case 763:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 764;
                  break;
               case 772:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 771;
                  break;
               case 773:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 772;
                  break;
               case 774:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 773;
                  break;
               case 775:
                  if ((0x4000000040L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 774;
                  break;
               case 776:
                  if ((0x200000002000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 775;
                  break;
               case 777:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 776;
                  break;
               case 778:
                  if ((0x80000000800L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 777;
                  break;
               case 781:
               case 782:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddStates(1248, 1250); }
                  break;
               case 783:
                  if ((0x10000000100000L & l) != 0L && kind > 78)
                     kind = 78;
                  break;
               case 784:
               case 829:
                  if ((0x4000000040000L & l) != 0L)
                     { jjCheckNAdd(783); }
                  break;
               case 785:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 784;
                  break;
               case 786:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 785;
                  break;
               case 787:
                  if ((0x80000000800000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 786;
                  break;
               case 788:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 787;
                  break;
               case 789:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 788;
                  break;
               case 790:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 789;
                  break;
               case 792:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(793, 794); }
                  break;
               case 793:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     { jjCheckNAddStates(1248, 1250); }
                  break;
               case 794:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1251, 1260); }
                  break;
               case 795:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1261, 1265); }
                  break;
               case 799:
               case 801:
               case 804:
               case 808:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(795); }
                  break;
               case 800:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 801;
                  break;
               case 802:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 803;
                  break;
               case 803:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 804;
                  break;
               case 805:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 806;
                  break;
               case 806:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 807;
                  break;
               case 807:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 808;
                  break;
               case 809:
                  if (curChar == 92)
                     { jjCheckNAddTwoStates(793, 810); }
                  break;
               case 810:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1266, 1275); }
                  break;
               case 811:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAddStates(1276, 1280); }
                  break;
               case 813:
               case 815:
               case 818:
               case 822:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(811); }
                  break;
               case 814:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 815;
                  break;
               case 816:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 817;
                  break;
               case 817:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 818;
                  break;
               case 819:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 820;
                  break;
               case 820:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 821;
                  break;
               case 821:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 822;
                  break;
               case 830:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 829;
                  break;
               case 831:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 830;
                  break;
               case 832:
                  if ((0x80000000800000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 831;
                  break;
               case 833:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 832;
                  break;
               case 834:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 833;
                  break;
               case 835:
                  if ((0x40000000400000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 834;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 836:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 89)
                        kind = 89;
                     { jjCheckNAddTwoStates(228, 229); }
                  }
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(757, 759); }
                  break;
               case 720:
               case 179:
               case 182:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 80)
                     kind = 80;
                  { jjCheckNAddTwoStates(180, 181); }
                  break;
               case 471:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 89)
                        kind = 89;
                     { jjCheckNAddTwoStates(228, 229); }
                  }
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(1085, 1087); }
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(757, 759); }
                  break;
               case 138:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 89)
                        kind = 89;
                     { jjCheckNAddTwoStates(228, 229); }
                  }
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(757, 759); }
                  break;
               case 464:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 89)
                        kind = 89;
                     { jjCheckNAddTwoStates(228, 229); }
                  }
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(1085, 1087); }
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(757, 759); }
                  break;
               case 840:
               case 180:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 80)
                     kind = 80;
                  { jjCheckNAddTwoStates(180, 181); }
                  break;
               case 2:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 89)
                     kind = 89;
                  { jjCheckNAddStates(1287, 1291); }
                  break;
               case 838:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 89)
                        kind = 89;
                     { jjCheckNAddTwoStates(228, 229); }
                  }
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(757, 759); }
                  break;
               case 839:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 89)
                        kind = 89;
                     { jjCheckNAddTwoStates(228, 229); }
                  }
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(757, 759); }
                  break;
               case 3:
               case 5:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 47)
                     kind = 47;
                  { jjCheckNAddTwoStates(3, 4); }
                  break;
               case 42:
               case 43:
               case 88:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(230, 234); }
                  break;
               case 46:
               case 47:
               case 51:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(241, 245); }
                  break;
               case 227:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 89)
                     kind = 89;
                  { jjCheckNAddTwoStates(228, 229); }
                  break;
               case 228:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 89)
                     kind = 89;
                  { jjCheckNAddTwoStates(228, 229); }
                  break;
               case 245:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(757, 759); }
                  break;
               case 246:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(757, 759); }
                  break;
               case 290:
               case 296:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(1023, 1025); }
                  break;
               case 311:
               case 316:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 25)
                     kind = 25;
                  { jjCheckNAddTwoStates(311, 312); }
                  break;
               case 332:
               case 338:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(1054, 1056); }
                  break;
               case 353:
               case 358:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 26)
                     kind = 26;
                  { jjCheckNAddTwoStates(353, 354); }
                  break;
               case 465:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 89)
                     kind = 89;
                  { jjCheckNAddTwoStates(228, 229); }
                  break;
               case 468:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(757, 759); }
                  break;
               case 472:
               case 473:
               case 480:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(1085, 1087); }
                  break;
               case 526:
               case 534:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(1124, 1126); }
                  break;
               case 550:
               case 556:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(1142, 1144); }
                  break;
               case 571:
               case 573:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(1160, 1163); }
                  break;
               case 722:
               case 723:
               case 735:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(1209, 1211); }
                  break;
               case 781:
               case 782:
               case 793:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     { jjCheckNAddStates(1248, 1250); }
                  break;
               default : if (i1 == 0 || l1 == 0 || i2 == 0 ||  l2 == 0) break; else break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 836 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private int jjMoveStringLiteralDfa0_1(){
   switch(curChar)
   {
      case 42:
         return jjMoveStringLiteralDfa1_1(0x8L);
      default :
         return 1;
   }
}
private int jjMoveStringLiteralDfa1_1(long active0){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      return 1;
   }
   switch(curChar)
   {
      case 47:
         if ((active0 & 0x8L) != 0L)
            return jjStopAtPos(1, 3);
         break;
      default :
         return 2;
   }
   return 2;
}
static final int[] jjnextStates = {
   252, 49, 253, 521, 478, 502, 519, 478, 502, 647, 648, 649, 650, 651, 652, 383, 
   653, 654, 655, 386, 656, 657, 658, 389, 659, 660, 661, 393, 662, 663, 664, 396, 
   665, 666, 667, 399, 668, 669, 670, 404, 671, 672, 673, 407, 674, 675, 676, 411, 
   677, 678, 679, 416, 680, 681, 682, 421, 683, 684, 685, 424, 686, 687, 688, 427, 
   689, 690, 691, 430, 692, 693, 694, 433, 695, 696, 697, 436, 698, 699, 700, 440, 
   701, 702, 703, 444, 704, 705, 706, 449, 707, 708, 709, 454, 710, 711, 712, 457, 
   713, 714, 715, 459, 716, 717, 718, 462, 719, 720, 721, 466, 722, 723, 724, 468, 
   225, 226, 227, 0, 228, 1, 526, 471, 527, 474, 475, 472, 523, 471, 524, 474, 
   475, 472, 471, 516, 517, 518, 520, 478, 474, 475, 502, 472, 380, 381, 384, 387, 
   390, 394, 397, 400, 405, 408, 412, 417, 422, 425, 428, 431, 434, 437, 441, 445, 
   450, 455, 458, 460, 463, 467, 338, 339, 359, 360, 340, 296, 297, 317, 318, 298, 
   470, 473, 524, 474, 475, 523, 471, 472, 223, 185, 204, 221, 185, 204, 829, 830, 
   831, 833, 787, 815, 771, 772, 773, 775, 728, 757, 527, 474, 475, 526, 471, 472, 
   3, 7, 11, 12, 14, 17, 9, 10, 4, 3, 9, 10, 4, 38, 39, 40, 
   118, 119, 120, 122, 42, 104, 43, 44, 48, 49, 87, 81, 82, 83, 85, 46, 
   67, 44, 47, 48, 49, 50, 44, 47, 53, 57, 58, 60, 63, 55, 49, 50, 
   56, 44, 47, 55, 49, 50, 56, 44, 69, 71, 72, 74, 77, 70, 47, 49, 
   50, 56, 44, 70, 47, 49, 50, 56, 84, 46, 67, 86, 46, 67, 43, 90, 
   94, 95, 97, 100, 92, 44, 49, 87, 93, 43, 92, 44, 49, 87, 93, 106, 
   108, 109, 111, 114, 107, 43, 44, 49, 87, 93, 107, 43, 44, 49, 87, 93, 
   121, 42, 104, 123, 42, 104, 130, 131, 133, 186, 190, 194, 195, 197, 200, 192, 
   193, 187, 186, 192, 193, 187, 206, 208, 209, 211, 214, 207, 193, 186, 187, 207, 
   193, 186, 187, 234, 237, 241, 242, 244, 247, 239, 240, 235, 234, 239, 240, 235, 
   252, 255, 259, 260, 262, 265, 257, 258, 49, 253, 252, 257, 258, 49, 253, 270, 
   272, 273, 275, 278, 271, 258, 252, 49, 253, 271, 258, 252, 49, 253, 283, 285, 
   286, 288, 291, 284, 240, 234, 235, 284, 240, 234, 235, 296, 297, 298, 296, 304, 
   307, 308, 310, 313, 305, 306, 297, 298, 296, 305, 306, 297, 298, 317, 324, 327, 
   328, 330, 333, 325, 326, 318, 317, 325, 326, 318, 338, 339, 340, 338, 346, 349, 
   350, 352, 355, 347, 348, 339, 340, 338, 347, 348, 339, 340, 359, 366, 369, 370, 
   372, 375, 367, 368, 360, 359, 367, 368, 360, 479, 484, 485, 479, 488, 492, 493, 
   495, 498, 490, 491, 484, 485, 479, 490, 491, 484, 485, 504, 506, 507, 509, 512, 
   505, 491, 479, 484, 485, 505, 491, 479, 484, 485, 531, 555, 577, 535, 578, 595, 
   532, 533, 536, 532, 542, 545, 546, 548, 551, 543, 544, 533, 536, 532, 543, 544, 
   533, 536, 556, 557, 558, 556, 564, 567, 568, 570, 573, 565, 566, 557, 558, 556, 
   565, 566, 557, 558, 577, 534, 535, 578, 577, 581, 585, 586, 588, 591, 583, 535, 
   578, 584, 577, 583, 535, 578, 584, 531, 555, 577, 534, 535, 578, 595, 599, 634, 
   600, 614, 615, 617, 620, 601, 624, 628, 631, 633, 603, 603, 604, 605, 607, 610, 
   635, 640, 643, 645, 639, 729, 739, 740, 729, 743, 747, 748, 750, 753, 745, 746, 
   739, 740, 729, 745, 746, 739, 740, 759, 761, 762, 764, 767, 760, 746, 729, 739, 
   740, 760, 746, 729, 739, 740, 774, 728, 757, 776, 728, 757, 788, 797, 798, 788, 
   801, 805, 806, 808, 811, 803, 804, 797, 798, 788, 803, 804, 797, 798, 817, 819, 
   820, 822, 825, 818, 804, 788, 797, 798, 818, 804, 788, 797, 798, 832, 787, 815, 
   834, 787, 815, 234, 252, 49, 253, 235, 726, 784, 785, 841, 230, 232, 233, 251, 
   269, 282, 597, 598, 144, 157, 167, 182, 218, 219, 220, 222, 185, 204, 5, 6, 
   299, 301, 302, 303, 319, 321, 322, 323, 341, 343, 344, 345, 361, 363, 364, 365, 
   537, 539, 540, 541, 559, 561, 562, 563, 579, 580, 2, 3, 5, 521, 468, 469, 
   520, 465, 466, 217, 179, 198, 215, 179, 198, 823, 824, 825, 827, 781, 809, 765, 
   766, 767, 769, 722, 751, 246, 49, 247, 515, 472, 496, 513, 472, 496, 641, 642, 
   643, 644, 645, 646, 377, 647, 648, 649, 380, 650, 651, 652, 383, 653, 654, 655, 
   387, 656, 657, 658, 390, 659, 660, 661, 393, 662, 663, 664, 398, 665, 666, 667, 
   401, 668, 669, 670, 405, 671, 672, 673, 410, 674, 675, 676, 415, 677, 678, 679, 
   418, 680, 681, 682, 421, 683, 684, 685, 424, 686, 687, 688, 427, 689, 690, 691, 
   430, 692, 693, 694, 434, 695, 696, 697, 438, 698, 699, 700, 443, 701, 702, 703, 
   448, 704, 705, 706, 451, 707, 708, 709, 453, 710, 711, 712, 456, 713, 714, 715, 
   460, 716, 717, 718, 462, 219, 220, 221, 0, 222, 1, 520, 465, 521, 468, 469, 
   466, 517, 465, 518, 468, 469, 466, 465, 510, 511, 512, 514, 472, 468, 469, 496, 
   466, 374, 375, 378, 381, 384, 388, 391, 394, 399, 402, 406, 411, 416, 419, 422, 
   425, 428, 431, 435, 439, 444, 449, 452, 454, 457, 461, 332, 333, 353, 354, 334, 
   290, 291, 311, 312, 292, 464, 467, 518, 468, 469, 517, 465, 466, 180, 184, 188, 
   189, 191, 194, 186, 187, 181, 180, 186, 187, 181, 200, 202, 203, 205, 208, 201, 
   187, 180, 181, 201, 187, 180, 181, 228, 231, 235, 236, 238, 241, 233, 234, 229, 
   228, 233, 234, 229, 246, 249, 253, 254, 256, 259, 251, 252, 49, 247, 246, 251, 
   252, 49, 247, 264, 266, 267, 269, 272, 265, 252, 246, 49, 247, 265, 252, 246, 
   49, 247, 277, 279, 280, 282, 285, 278, 234, 228, 229, 278, 234, 228, 229, 290, 
   291, 292, 290, 298, 301, 302, 304, 307, 299, 300, 291, 292, 290, 299, 300, 291, 
   292, 311, 318, 321, 322, 324, 327, 319, 320, 312, 311, 319, 320, 312, 332, 333, 
   334, 332, 340, 343, 344, 346, 349, 341, 342, 333, 334, 332, 341, 342, 333, 334, 
   353, 360, 363, 364, 366, 369, 361, 362, 354, 353, 361, 362, 354, 473, 478, 479, 
   473, 482, 486, 487, 489, 492, 484, 485, 478, 479, 473, 484, 485, 478, 479, 498, 
   500, 501, 503, 506, 499, 485, 473, 478, 479, 499, 485, 473, 478, 479, 525, 549, 
   571, 529, 572, 589, 526, 527, 530, 526, 536, 539, 540, 542, 545, 537, 538, 527, 
   530, 526, 537, 538, 527, 530, 550, 551, 552, 550, 558, 561, 562, 564, 567, 559, 
   560, 551, 552, 550, 559, 560, 551, 552, 571, 528, 529, 572, 571, 575, 579, 580, 
   582, 585, 577, 529, 572, 578, 571, 577, 529, 572, 578, 525, 549, 571, 528, 529, 
   572, 589, 593, 628, 594, 608, 609, 611, 614, 595, 618, 622, 625, 627, 597, 597, 
   598, 599, 601, 604, 629, 634, 637, 639, 633, 723, 733, 734, 723, 737, 741, 742, 
   744, 747, 739, 740, 733, 734, 723, 739, 740, 733, 734, 753, 755, 756, 758, 761, 
   754, 740, 723, 733, 734, 754, 740, 723, 733, 734, 768, 722, 751, 770, 722, 751, 
   782, 791, 792, 782, 795, 799, 800, 802, 805, 797, 798, 791, 792, 782, 797, 798, 
   791, 792, 811, 813, 814, 816, 819, 812, 798, 782, 791, 792, 812, 798, 782, 791, 
   792, 826, 781, 809, 828, 781, 809, 228, 246, 49, 247, 229, 720, 778, 779, 835, 
   224, 226, 227, 245, 263, 276, 591, 592, 138, 151, 161, 176, 212, 213, 214, 216, 
   179, 198, 293, 295, 296, 297, 313, 315, 316, 317, 335, 337, 338, 339, 355, 357, 
   358, 359, 531, 533, 534, 535, 553, 555, 556, 557, 573, 574, 
};
private static final boolean jjCanMove_0(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 0:
         return ((jjbitVec2[i2] & l2) != 0L);
      default :
         if ((jjbitVec0[i1] & l1) != 0L)
            return true;
         return false;
   }
}

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, null, null, null, null, null, "\53", "\55", "\50", 
"\51", null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, "\175", "\133", "\135", "\56", null, 
"\73", "\72", "\52", "\57", "\75", "\174", "\76", "\176", null, "\176\75", "\174\75", 
"\136\75", "\44\75", "\52\75", "\74\41\55\55", "\55\55\76", null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, };
protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   if (jjmatchedPos < 0)
   {
      if (image == null)
         curTokenImage = "";
      else
         curTokenImage = image.toString();
      beginLine = endLine = input_stream.getEndLine();
      beginColumn = endColumn = input_stream.getEndColumn();
   }
   else
   {
      String im = jjstrLiteralImages[jjmatchedKind];
      curTokenImage = (im == null) ? input_stream.GetImage() : im;
      beginLine = input_stream.getBeginLine();
      beginColumn = input_stream.getBeginColumn();
      endLine = input_stream.getEndLine();
      endColumn = input_stream.getEndColumn();
   }
   t = Token.newToken(jjmatchedKind, curTokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

/** Get the next Token. */
public Token getNextToken() 
{
  Token specialToken = null;
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {
   try
   {
      curChar = input_stream.BeginToken();
   }
   catch(Exception e)
   {
      jjmatchedKind = 0;
      jjmatchedPos = -1;
      matchedToken = jjFillToken();
      matchedToken.specialToken = specialToken;
      return matchedToken;
   }
   image = jjimage;
   image.setLength(0);
   jjimageLen = 0;

   for (;;)
   {
     switch(curLexState)
     {
       case 0:
         jjmatchedKind = 5;
         jjmatchedPos = -1;
         curPos = 0;
         curPos = jjMoveStringLiteralDfa0_0();
         if (jjmatchedPos < 0 || (jjmatchedPos == 0 && jjmatchedKind > 124))
         {
            jjmatchedKind = 124;
            jjmatchedPos = 0;
         }
         break;
       case 1:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_1();
         if (jjmatchedPos == 0 && jjmatchedKind > 2)
         {
            jjmatchedKind = 2;
         }
         break;
       case 2:
         jjmatchedKind = 5;
         jjmatchedPos = -1;
         curPos = 0;
         curPos = jjMoveStringLiteralDfa0_2();
         if (jjmatchedPos < 0 || (jjmatchedPos == 0 && jjmatchedKind > 124))
         {
            jjmatchedKind = 124;
            jjmatchedPos = 0;
         }
         break;
       case 3:
         jjmatchedKind = 5;
         jjmatchedPos = -1;
         curPos = 0;
         curPos = jjMoveStringLiteralDfa0_3();
         if (jjmatchedPos < 0 || (jjmatchedPos == 0 && jjmatchedKind > 124))
         {
            jjmatchedKind = 124;
            jjmatchedPos = 0;
         }
         break;
     }
     if (jjmatchedKind != 0x7fffffff)
     {
        if (jjmatchedPos + 1 < curPos)
           input_stream.backup(curPos - jjmatchedPos - 1);
        if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
           matchedToken = jjFillToken();
           matchedToken.specialToken = specialToken;
           TokenLexicalActions(matchedToken);
       if (jjnewLexState[jjmatchedKind] != -1)
         curLexState = jjnewLexState[jjmatchedKind];
           return matchedToken;
        }
        else if ((jjtoSkip[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
           if ((jjtoSpecial[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
           {
              matchedToken = jjFillToken();
              if (specialToken == null)
                 specialToken = matchedToken;
              else
              {
                 matchedToken.specialToken = specialToken;
                 specialToken = (specialToken.next = matchedToken);
              }
              SkipLexicalActions(matchedToken);
           }
           else
              SkipLexicalActions(null);
         if (jjnewLexState[jjmatchedKind] != -1)
           curLexState = jjnewLexState[jjmatchedKind];
           continue EOFLoop;
        }
        jjimageLen += jjmatchedPos + 1;
      if (jjnewLexState[jjmatchedKind] != -1)
        curLexState = jjnewLexState[jjmatchedKind];
        curPos = 0;
        jjmatchedKind = 0x7fffffff;
        try {
           curChar = input_stream.readChar();
           continue;
        }
        catch (java.io.IOException e1) { }
     }
     int error_line = input_stream.getEndLine();
     int error_column = input_stream.getEndColumn();
     String error_after = null;
     boolean EOFSeen = false;
     try { input_stream.readChar(); input_stream.backup(1); }
     catch (java.io.IOException e1) {
        EOFSeen = true;
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
        if (curChar == '\n' || curChar == '\r') {
           error_line++;
           error_column = 0;
        }
        else
           error_column++;
     }
     if (!EOFSeen) {
        input_stream.backup(1);
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
     }
     throw new TokenMgrException(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrException.LEXICAL_ERROR);
   }
  }
}

void SkipLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      default :
         break;
   }
}
void TokenLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      case 22 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                   matchedToken.image = "";
         break;
      case 89 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                             matchedToken.image = CSSParseHelper.validateIdentifier(image);
         break;
      case 90 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = CSSParseHelper.splitNumber(image) + "em";
         break;
      case 91 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = CSSParseHelper.splitNumber(image) + "ex";
         break;
      case 92 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = CSSParseHelper.splitNumber(image) + "px";
         break;
      case 93 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = CSSParseHelper.splitNumber(image) + "rem";
         break;
      case 94 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = CSSParseHelper.splitNumber(image) + "vw";
         break;
      case 95 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = CSSParseHelper.splitNumber(image) + "vh";
         break;
      case 96 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = CSSParseHelper.splitNumber(image) + "vmin";
         break;
      case 97 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = CSSParseHelper.splitNumber(image) + "ch";
         break;
      case 98 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = CSSParseHelper.splitNumber(image) + "dpi";
         break;
      case 99 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = CSSParseHelper.splitNumber(image) + "dpcm";
         break;
      case 100 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = CSSParseHelper.splitNumber(image) + "dppx";
         break;
      case 101 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = CSSParseHelper.splitNumber(image) + "cm";
         break;
      case 102 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = CSSParseHelper.splitNumber(image) + "mm";
         break;
      case 103 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = CSSParseHelper.splitNumber(image) + "in";
         break;
      case 104 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = CSSParseHelper.splitNumber(image) + "pt";
         break;
      case 105 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = CSSParseHelper.splitNumber(image) + "pc";
         break;
      case 106 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = CSSParseHelper.splitNumber(image) + "deg";
         break;
      case 107 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = CSSParseHelper.splitNumber(image) + "rad";
         break;
      case 108 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = CSSParseHelper.splitNumber(image) + "grad";
         break;
      case 109 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = CSSParseHelper.splitNumber(image) + "turn";
         break;
      case 110 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = CSSParseHelper.splitNumber(image) + "ms";
         break;
      case 111 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = CSSParseHelper.splitNumber(image) + "s";
         break;
      case 112 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = CSSParseHelper.splitNumber(image) + "hz";
         break;
      case 113 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = CSSParseHelper.splitNumber(image) + "khz";
         break;
      case 114 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                 matchedToken.image = CSSParseHelper.splitNumber(image) + "%";
         break;
      case 116 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                       matchedToken.image = CSSParseHelper.trimUrl(image);
         break;
      case 121 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                matchedToken.image = image.toString ();
         break;
      case 124 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
    s_aLogger.error("Illegal character: " + image.toString());
         break;
      default :
         break;
   }
}
private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

private void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

    /** Constructor. */
    public ParserCSS30TokenManager(CharStream stream){


    input_stream = stream;
  }

  /** Constructor. */
  public ParserCSS30TokenManager (CharStream stream, int lexState){
    ReInit(stream);
    SwitchTo(lexState);
  }

  /** Reinitialise parser. */
  public void ReInit(CharStream stream)
  {
	
    jjmatchedPos = jjnewStateCnt = 0;
    curLexState = defaultLexState;
    input_stream = stream;
    ReInitRounds();
  }

  private void ReInitRounds()
  {
    int i;
    jjround = 0x80000001;
    for (i = 842; i-- > 0;)
      jjrounds[i] = 0x80000000;
  }

  /** Reinitialise parser. */
  public void ReInit( CharStream stream, int lexState)
  {
  
    ReInit( stream);
    SwitchTo(lexState);
  }

  /** Switch to specified lex state. */
  public void SwitchTo(int lexState)
  {
    if (lexState >= 4 || lexState < 0)
      throw new TokenMgrException("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrException.INVALID_LEXICAL_STATE);
    else
      curLexState = lexState;
  }

/** Lexer state names. */
public static final String[] lexStateNames = {
   "DEFAULT",
   "IN_COMMENT",
   "IN_NTH",
   "IN_UNKNOWN_RULE",
};

/** Lex State array. */
public static final int[] jjnewLexState = {
   -1, 1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, -1, -1, -1, -1, -1, 
};
static final long[] jjtoToken = {
   0xffffffff07c03ff1L, 0x17f7ffffffffffffL, 
};
static final long[] jjtoSkip = {
   0x8L, 0x800000000000000L, 
};
static final long[] jjtoSpecial = {
   0x8L, 0x800000000000000L, 
};
static final long[] jjtoMore = {
   0x6L, 0x0L, 
};
    protected CharStream  input_stream;

    private final int[] jjrounds = new int[842];
    private final int[] jjstateSet = new int[2 * 842];

    private final StringBuilder jjimage = new StringBuilder();
    private StringBuilder image = jjimage;
    private int jjimageLen;
    private int lengthOfMatch;
    
    protected int curChar;
}
